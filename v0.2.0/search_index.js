var search_data = {
    'index': {
        'searchIndex': ["asgard","asgard\\cache","asgard\\cache\\commands","asgard\\common","asgard\\config","asgard\\config\\commands","asgard\\console","asgard\\container","asgard\\container\\commands","asgard\\core","asgard\\core\\commands","asgard\\db","asgard\\db\\commands","asgard\\debug","asgard\\email","asgard\\entity","asgard\\entity\\properties","asgard\\entityform","asgard\\file","asgard\\file\\rules","asgard\\form","asgard\\form\\fields","asgard\\form\\widgets","asgard\\generator","asgard\\generator\\commands","asgard\\hook","asgard\\hook\\annotations","asgard\\http","asgard\\http\\annotations","asgard\\http\\browser","asgard\\http\\commands","asgard\\http\\exceptions","asgard\\http\\filters","asgard\\http\\utils","asgard\\migration","asgard\\migration\\commands","asgard\\orm","asgard\\orm\\commands","asgard\\orm\\rules","asgard\\templating","asgard\\tester","asgard\\tester\\commands","asgard\\tester\\generator","asgard\\translation","asgard\\translation\\commands","asgard\\validation","asgard\\validation\\rules","asgard\\cache\\cache","asgard\\cache\\cacheinterface","asgard\\cache\\commands\\clearcommand","asgard\\cache\\nullcache","asgard\\common\\arrayutils","asgard\\common\\bag","asgard\\common\\baginterface","asgard\\common\\date","asgard\\common\\datetime","asgard\\common\\datetimeinterface","asgard\\common\\intl","asgard\\common\\paginator","asgard\\common\\paginatorfactory","asgard\\common\\paginatorfactoryinterface","asgard\\common\\paginatorinterface","asgard\\common\\session","asgard\\common\\time","asgard\\common\\tools","asgard\\common\\zip","asgard\\config\\commands\\initcommand","asgard\\config\\config","asgard\\config\\configinterface","asgard\\console\\application","asgard\\console\\command","asgard\\container\\commands\\listcommand","asgard\\container\\container","asgard\\container\\containerawaretrait","asgard\\container\\containerinterface","asgard\\container\\facade","asgard\\container\\factory","asgard\\core\\bundle","asgard\\core\\bundleloader","asgard\\core\\commands\\compilecommand","asgard\\core\\commands\\composerapplication","asgard\\core\\commands\\consolecommand","asgard\\core\\commands\\deploycommand","asgard\\core\\commands\\downcommand","asgard\\core\\commands\\executecommand","asgard\\core\\commands\\installcommand","asgard\\core\\commands\\publishcommand","asgard\\core\\commands\\servercommand","asgard\\core\\commands\\showenvironmentcommand","asgard\\core\\commands\\switchenvironmentcommand","asgard\\core\\commands\\upcommand","asgard\\core\\commands\\versioncommand","asgard\\core\\kernel","asgard\\core\\publisher","asgard\\db\\commands\\createcommand","asgard\\db\\commands\\emptycommand","asgard\\db\\commands\\initcommand","asgard\\db\\dal","asgard\\db\\db","asgard\\db\\dbexception","asgard\\db\\dbinterface","asgard\\db\\mysql","asgard\\db\\query","asgard\\db\\raw","asgard\\db\\schema","asgard\\db\\schemainterface","asgard\\db\\schematable","asgard\\debug\\debug","asgard\\debug\\errorhandler","asgard\\debug\\fatalerrorexception","asgard\\debug\\psrexception","asgard\\email\\driverinterface","asgard\\email\\fakeemail","asgard\\email\\swiftemail","asgard\\email\\swiftmessage","asgard\\entity\\behavior","asgard\\entity\\definition","asgard\\entity\\entity","asgard\\entity\\entityexception","asgard\\entity\\entitymanager","asgard\\entity\\entitymanagerinterface","asgard\\entity\\file","asgard\\entity\\manycollection","asgard\\entity\\persistencebehavior","asgard\\entity\\properties\\booleanproperty","asgard\\entity\\properties\\countryproperty","asgard\\entity\\properties\\dateproperty","asgard\\entity\\properties\\datetimeproperty","asgard\\entity\\properties\\decimalproperty","asgard\\entity\\properties\\emailproperty","asgard\\entity\\properties\\entityproperty","asgard\\entity\\properties\\fileproperty","asgard\\entity\\properties\\integerproperty","asgard\\entity\\properties\\passwordproperty","asgard\\entity\\properties\\stringproperty","asgard\\entity\\properties\\textproperty","asgard\\entity\\property","asgard\\entity\\relationsbehavior","asgard\\entity\\serializer","asgard\\entityform\\entityfieldsolver","asgard\\entityform\\entityfieldsolverinterface","asgard\\entityform\\entityform","asgard\\entityform\\entityforminterface","asgard\\file\\file","asgard\\file\\filesystem","asgard\\file\\rules\\extension","asgard\\file\\rules\\image","asgard\\form\\dynamicgroup","asgard\\form\\field","asgard\\form\\fields\\booleanfield","asgard\\form\\fields\\csrffield","asgard\\form\\fields\\countryfield","asgard\\form\\fields\\datefield","asgard\\form\\fields\\datetimefield","asgard\\form\\fields\\dayfield","asgard\\form\\fields\\filefield","asgard\\form\\fields\\hiddenfield","asgard\\form\\fields\\monthfield","asgard\\form\\fields\\multipleselectfield","asgard\\form\\fields\\selectfield","asgard\\form\\fields\\textfield","asgard\\form\\fields\\timefield","asgard\\form\\fields\\yearfield","asgard\\form\\form","asgard\\form\\formexception","asgard\\form\\forminterface","asgard\\form\\group","asgard\\form\\groupinterface","asgard\\form\\htmlhelper","asgard\\form\\widget","asgard\\form\\widgetfactoryinterface","asgard\\form\\widgetmanager","asgard\\form\\widgetmanagerinterface","asgard\\form\\widgets\\callbackwidget","asgard\\form\\widgets\\checkboxwidget","asgard\\form\\widgets\\checkboxeswidget","asgard\\form\\widgets\\datewidget","asgard\\form\\widgets\\datetimewidget","asgard\\form\\widgets\\filewidget","asgard\\form\\widgets\\hiddenwidget","asgard\\form\\widgets\\multipleselectwidget","asgard\\form\\widgets\\passwordwidget","asgard\\form\\widgets\\radiowidget","asgard\\form\\widgets\\radioswidget","asgard\\form\\widgets\\selectwidget","asgard\\form\\widgets\\submitwidget","asgard\\form\\widgets\\textwidget","asgard\\form\\widgets\\textareawidget","asgard\\form\\widgets\\timewidget","asgard\\generator\\abstractgenerator","asgard\\generator\\commands\\generatecommand","asgard\\generator\\defaultgenerator","asgard\\generator\\generatorengine","asgard\\generator\\generatorengineinterface","asgard\\hook\\annotationreader","asgard\\hook\\annotations\\hook","asgard\\hook\\chain","asgard\\hook\\hookcontainer","asgard\\hook\\hookmanager","asgard\\hook\\hookmanagerinterface","asgard\\hook\\hookabletrait","asgard\\http\\annotationreader","asgard\\http\\annotations\\prefix","asgard\\http\\annotations\\route","asgard\\http\\browser\\browser","asgard\\http\\browser\\browserinterface","asgard\\http\\browser\\field","asgard\\http\\browser\\formparser","asgard\\http\\commands\\browsercommand","asgard\\http\\commands\\routescommand","asgard\\http\\controller","asgard\\http\\controllerexception","asgard\\http\\cookiemanager","asgard\\http\\exceptions\\notfoundexception","asgard\\http\\filter","asgard\\http\\filters\\pagelayout","asgard\\http\\httpfile","asgard\\http\\httpkernel","asgard\\http\\httpkernelinterface","asgard\\http\\lambdacontroller","asgard\\http\\request","asgard\\http\\resolver","asgard\\http\\resolverinterface","asgard\\http\\response","asgard\\http\\route","asgard\\http\\test","asgard\\http\\url","asgard\\http\\urlinterface","asgard\\http\\utils\\flash","asgard\\http\\utils\\html","asgard\\http\\utils\\htmlinterface","asgard\\migration\\commands\\addcommand","asgard\\migration\\commands\\createcommand","asgard\\migration\\commands\\listcommand","asgard\\migration\\commands\\migratecommand","asgard\\migration\\commands\\migrateonecommand","asgard\\migration\\commands\\refreshcommand","asgard\\migration\\commands\\removecommand","asgard\\migration\\commands\\rollbackcommand","asgard\\migration\\commands\\unmigratecommand","asgard\\migration\\dbmigration","asgard\\migration\\migration","asgard\\migration\\migrationmanager","asgard\\migration\\migrationmanagerinterface","asgard\\migration\\tracker","asgard\\orm\\collectionorm","asgard\\orm\\collectionormfactory","asgard\\orm\\collectionormfactoryinterface","asgard\\orm\\collectionorminterface","asgard\\orm\\commands\\automigratecommand","asgard\\orm\\commands\\generatemigrationcommand","asgard\\orm\\datamapper","asgard\\orm\\datamapperinterface","asgard\\orm\\entityrelation","asgard\\orm\\orm","asgard\\orm\\ormbehavior","asgard\\orm\\ormfactory","asgard\\orm\\ormfactoryinterface","asgard\\orm\\orminterface","asgard\\orm\\ormmigrations","asgard\\orm\\polymorphiccollectionorm","asgard\\orm\\rules\\ormhaslessthan","asgard\\orm\\rules\\ormhasmorethan","asgard\\orm\\rules\\ormrequired","asgard\\orm\\rules\\unique","asgard\\orm\\scope","asgard\\templating\\phptemplate","asgard\\templating\\templateenginefactoryinterface","asgard\\templating\\templateengineinterface","asgard\\templating\\templateinterface","asgard\\templating\\viewabletrait","asgard\\tester\\bag","asgard\\tester\\browser","asgard\\tester\\commands\\coveragecommand","asgard\\tester\\commands\\curlcommand","asgard\\tester\\commands\\generatetestscommand","asgard\\tester\\commands\\runcommand","asgard\\tester\\config","asgard\\tester\\coverage","asgard\\tester\\crawler","asgard\\tester\\curlconverter","asgard\\tester\\fixtures","asgard\\tester\\form","asgard\\tester\\generator\\testsgenerator","asgard\\tester\\results","asgard\\tester\\testbuilder","asgard\\tester\\testbuilderinterface","asgard\\tester\\testsgenerator","asgard\\translation\\commands\\exportcsvcommand","asgard\\translation\\commands\\exportyamlcommand","asgard\\translation\\commands\\importcommand","asgard\\translation\\extractor","asgard\\translation\\translation","asgard\\validation\\inputbag","asgard\\validation\\report","asgard\\validation\\rule","asgard\\validation\\rulesregistry","asgard\\validation\\rulesregistryinterface","asgard\\validation\\rules\\all","asgard\\validation\\rules\\allin","asgard\\validation\\rules\\any","asgard\\validation\\rules\\callback","asgard\\validation\\rules\\contains","asgard\\validation\\rules\\date","asgard\\validation\\rules\\each","asgard\\validation\\rules\\email","asgard\\validation\\rules\\equal","asgard\\validation\\rules\\haslessthan","asgard\\validation\\rules\\hasmorethan","asgard\\validation\\rules\\in","asgard\\validation\\rules\\isinstanceof","asgard\\validation\\rules\\isinteger","asgard\\validation\\rules\\length","asgard\\validation\\rules\\lengthbetween","asgard\\validation\\rules\\max","asgard\\validation\\rules\\maxlength","asgard\\validation\\rules\\min","asgard\\validation\\rules\\minlength","asgard\\validation\\rules\\regex","asgard\\validation\\rules\\same","asgard\\validation\\validator","asgard\\validation\\validatorexception","asgard\\validation\\validatorfactory","asgard\\validation\\validatorfactoryinterface","asgard\\validation\\validatorinterface","asgard\\cache\\cache::__construct","asgard\\cache\\cache::__call","asgard\\cache\\cache::setdriver","asgard\\cache\\cache::deleteall","asgard\\cache\\cache::fetch","asgard\\cache\\cache::contains","asgard\\cache\\cache::save","asgard\\cache\\cache::delete","asgard\\cache\\cache::getstats","asgard\\cache\\cache::offsetset","asgard\\cache\\cache::offsetexists","asgard\\cache\\cache::offsetunset","asgard\\cache\\cache::offsetget","asgard\\cache\\commands\\clearcommand::__construct","asgard\\cache\\nullcache::fetch","asgard\\cache\\nullcache::contains","asgard\\cache\\nullcache::save","asgard\\cache\\nullcache::delete","asgard\\cache\\nullcache::getstats","asgard\\common\\arrayutils::get","asgard\\common\\arrayutils::set","asgard\\common\\arrayutils::append","asgard\\common\\arrayutils::has","asgard\\common\\arrayutils::delete","asgard\\common\\arrayutils::array_set","asgard\\common\\arrayutils::array_append","asgard\\common\\arrayutils::array_get","asgard\\common\\arrayutils::array_has","asgard\\common\\arrayutils::array_delete","asgard\\common\\arrayutils::flatten","asgard\\common\\arrayutils::before","asgard\\common\\arrayutils::after","asgard\\common\\bag::__construct","asgard\\common\\bag::all","asgard\\common\\bag::clear","asgard\\common\\bag::count","asgard\\common\\bag::setall","asgard\\common\\bag::set","asgard\\common\\bag::get","asgard\\common\\bag::has","asgard\\common\\bag::delete","asgard\\common\\bag::offsetset","asgard\\common\\bag::offsetexists","asgard\\common\\bag::offsetunset","asgard\\common\\bag::offsetget","asgard\\common\\baginterface::all","asgard\\common\\baginterface::clear","asgard\\common\\baginterface::count","asgard\\common\\baginterface::setall","asgard\\common\\baginterface::set","asgard\\common\\baginterface::get","asgard\\common\\baginterface::has","asgard\\common\\baginterface::delete","asgard\\common\\date::__tostring","asgard\\common\\datetime::__construct","asgard\\common\\datetime::settimestamp","asgard\\common\\datetime::modify","asgard\\common\\datetime::setisodate","asgard\\common\\datetime::__clone","asgard\\common\\datetime::createfromcarbon","asgard\\common\\datetime::getcarbon","asgard\\common\\datetime::setcarbon","asgard\\common\\datetime::diff","asgard\\common\\datetime::sub","asgard\\common\\datetime::format","asgard\\common\\datetime::getoffset","asgard\\common\\datetime::gettimestamp","asgard\\common\\datetime::gettimezone","asgard\\common\\datetime::__wakeup","asgard\\common\\datetime::instance","asgard\\common\\datetime::parse","asgard\\common\\datetime::now","asgard\\common\\datetime::today","asgard\\common\\datetime::tomorrow","asgard\\common\\datetime::yesterday","asgard\\common\\datetime::maxvalue","asgard\\common\\datetime::minvalue","asgard\\common\\datetime::create","asgard\\common\\datetime::createfromdate","asgard\\common\\datetime::createfromtime","asgard\\common\\datetime::createfromformat","asgard\\common\\datetime::createfromtimestamp","asgard\\common\\datetime::createfromtimestamputc","asgard\\common\\datetime::resettostringformat","asgard\\common\\datetime::settostringformat","asgard\\common\\datetime::copy","asgard\\common\\datetime::__get","asgard\\common\\datetime::__isset","asgard\\common\\datetime::__set","asgard\\common\\datetime::year","asgard\\common\\datetime::month","asgard\\common\\datetime::day","asgard\\common\\datetime::setdate","asgard\\common\\datetime::hour","asgard\\common\\datetime::minute","asgard\\common\\datetime::second","asgard\\common\\datetime::settime","asgard\\common\\datetime::setdatetime","asgard\\common\\datetime::timestamp","asgard\\common\\datetime::timezone","asgard\\common\\datetime::tz","asgard\\common\\datetime::settimezone","asgard\\common\\datetime::formatlocalized","asgard\\common\\datetime::__tostring","asgard\\common\\datetime::todatestring","asgard\\common\\datetime::toformatteddatestring","asgard\\common\\datetime::totimestring","asgard\\common\\datetime::todatetimestring","asgard\\common\\datetime::todaydatetimestring","asgard\\common\\datetime::toatomstring","asgard\\common\\datetime::tocookiestring","asgard\\common\\datetime::toiso8601string","asgard\\common\\datetime::torfc822string","asgard\\common\\datetime::torfc850string","asgard\\common\\datetime::torfc1036string","asgard\\common\\datetime::torfc1123string","asgard\\common\\datetime::torfc2822string","asgard\\common\\datetime::torfc3339string","asgard\\common\\datetime::torssstring","asgard\\common\\datetime::tow3cstring","asgard\\common\\datetime::eq","asgard\\common\\datetime::ne","asgard\\common\\datetime::gt","asgard\\common\\datetime::gte","asgard\\common\\datetime::lt","asgard\\common\\datetime::lte","asgard\\common\\datetime::between","asgard\\common\\datetime::min","asgard\\common\\datetime::max","asgard\\common\\datetime::isweekday","asgard\\common\\datetime::isweekend","asgard\\common\\datetime::isyesterday","asgard\\common\\datetime::istoday","asgard\\common\\datetime::istomorrow","asgard\\common\\datetime::isfuture","asgard\\common\\datetime::ispast","asgard\\common\\datetime::isleapyear","asgard\\common\\datetime::issameday","asgard\\common\\datetime::addyears","asgard\\common\\datetime::addyear","asgard\\common\\datetime::subyear","asgard\\common\\datetime::subyears","asgard\\common\\datetime::addmonths","asgard\\common\\datetime::addmonth","asgard\\common\\datetime::submonth","asgard\\common\\datetime::submonths","asgard\\common\\datetime::adddays","asgard\\common\\datetime::addday","asgard\\common\\datetime::subday","asgard\\common\\datetime::subdays","asgard\\common\\datetime::addweekdays","asgard\\common\\datetime::addweekday","asgard\\common\\datetime::subweekday","asgard\\common\\datetime::subweekdays","asgard\\common\\datetime::addweeks","asgard\\common\\datetime::addweek","asgard\\common\\datetime::subweek","asgard\\common\\datetime::subweeks","asgard\\common\\datetime::addhours","asgard\\common\\datetime::addhour","asgard\\common\\datetime::subhour","asgard\\common\\datetime::subhours","asgard\\common\\datetime::addminutes","asgard\\common\\datetime::addminute","asgard\\common\\datetime::subminute","asgard\\common\\datetime::subminutes","asgard\\common\\datetime::addseconds","asgard\\common\\datetime::addsecond","asgard\\common\\datetime::subsecond","asgard\\common\\datetime::subseconds","asgard\\common\\datetime::diffinyears","asgard\\common\\datetime::diffinmonths","asgard\\common\\datetime::diffinweeks","asgard\\common\\datetime::diffindays","asgard\\common\\datetime::diffindaysfiltered","asgard\\common\\datetime::diffinweekdays","asgard\\common\\datetime::diffinweekenddays","asgard\\common\\datetime::diffinhours","asgard\\common\\datetime::diffinminutes","asgard\\common\\datetime::diffinseconds","asgard\\common\\datetime::diffforhumans","asgard\\common\\datetime::startofday","asgard\\common\\datetime::endofday","asgard\\common\\datetime::startofmonth","asgard\\common\\datetime::endofmonth","asgard\\common\\datetime::startofyear","asgard\\common\\datetime::endofyear","asgard\\common\\datetime::startofdecade","asgard\\common\\datetime::endofdecade","asgard\\common\\datetime::startofcentury","asgard\\common\\datetime::endofcentury","asgard\\common\\datetime::startofweek","asgard\\common\\datetime::endofweek","asgard\\common\\datetime::next","asgard\\common\\datetime::previous","asgard\\common\\datetime::firstofmonth","asgard\\common\\datetime::lastofmonth","asgard\\common\\datetime::nthofmonth","asgard\\common\\datetime::firstofquarter","asgard\\common\\datetime::lastofquarter","asgard\\common\\datetime::nthofquarter","asgard\\common\\datetime::firstofyear","asgard\\common\\datetime::lastofyear","asgard\\common\\datetime::nthofyear","asgard\\common\\datetime::average","asgard\\common\\datetime::isbirthday","asgard\\common\\datetimeinterface::diff","asgard\\common\\datetimeinterface::sub","asgard\\common\\datetimeinterface::format","asgard\\common\\datetimeinterface::getoffset","asgard\\common\\datetimeinterface::gettimestamp","asgard\\common\\datetimeinterface::gettimezone","asgard\\common\\datetimeinterface::__wakeup","asgard\\common\\datetimeinterface::instance","asgard\\common\\datetimeinterface::parse","asgard\\common\\datetimeinterface::now","asgard\\common\\datetimeinterface::today","asgard\\common\\datetimeinterface::tomorrow","asgard\\common\\datetimeinterface::yesterday","asgard\\common\\datetimeinterface::maxvalue","asgard\\common\\datetimeinterface::minvalue","asgard\\common\\datetimeinterface::create","asgard\\common\\datetimeinterface::createfromdate","asgard\\common\\datetimeinterface::createfromtime","asgard\\common\\datetimeinterface::createfromformat","asgard\\common\\datetimeinterface::createfromtimestamp","asgard\\common\\datetimeinterface::createfromtimestamputc","asgard\\common\\datetimeinterface::resettostringformat","asgard\\common\\datetimeinterface::settostringformat","asgard\\common\\datetimeinterface::copy","asgard\\common\\datetimeinterface::__get","asgard\\common\\datetimeinterface::__isset","asgard\\common\\datetimeinterface::__set","asgard\\common\\datetimeinterface::year","asgard\\common\\datetimeinterface::month","asgard\\common\\datetimeinterface::day","asgard\\common\\datetimeinterface::setdate","asgard\\common\\datetimeinterface::hour","asgard\\common\\datetimeinterface::minute","asgard\\common\\datetimeinterface::second","asgard\\common\\datetimeinterface::settime","asgard\\common\\datetimeinterface::setdatetime","asgard\\common\\datetimeinterface::timestamp","asgard\\common\\datetimeinterface::timezone","asgard\\common\\datetimeinterface::tz","asgard\\common\\datetimeinterface::settimezone","asgard\\common\\datetimeinterface::formatlocalized","asgard\\common\\datetimeinterface::__tostring","asgard\\common\\datetimeinterface::todatestring","asgard\\common\\datetimeinterface::toformatteddatestring","asgard\\common\\datetimeinterface::totimestring","asgard\\common\\datetimeinterface::todatetimestring","asgard\\common\\datetimeinterface::todaydatetimestring","asgard\\common\\datetimeinterface::toatomstring","asgard\\common\\datetimeinterface::tocookiestring","asgard\\common\\datetimeinterface::toiso8601string","asgard\\common\\datetimeinterface::torfc822string","asgard\\common\\datetimeinterface::torfc850string","asgard\\common\\datetimeinterface::torfc1036string","asgard\\common\\datetimeinterface::torfc1123string","asgard\\common\\datetimeinterface::torfc2822string","asgard\\common\\datetimeinterface::torfc3339string","asgard\\common\\datetimeinterface::torssstring","asgard\\common\\datetimeinterface::tow3cstring","asgard\\common\\datetimeinterface::eq","asgard\\common\\datetimeinterface::ne","asgard\\common\\datetimeinterface::gt","asgard\\common\\datetimeinterface::gte","asgard\\common\\datetimeinterface::lt","asgard\\common\\datetimeinterface::lte","asgard\\common\\datetimeinterface::between","asgard\\common\\datetimeinterface::min","asgard\\common\\datetimeinterface::max","asgard\\common\\datetimeinterface::isweekday","asgard\\common\\datetimeinterface::isweekend","asgard\\common\\datetimeinterface::isyesterday","asgard\\common\\datetimeinterface::istoday","asgard\\common\\datetimeinterface::istomorrow","asgard\\common\\datetimeinterface::isfuture","asgard\\common\\datetimeinterface::ispast","asgard\\common\\datetimeinterface::isleapyear","asgard\\common\\datetimeinterface::issameday","asgard\\common\\datetimeinterface::addyears","asgard\\common\\datetimeinterface::addyear","asgard\\common\\datetimeinterface::subyear","asgard\\common\\datetimeinterface::subyears","asgard\\common\\datetimeinterface::addmonths","asgard\\common\\datetimeinterface::addmonth","asgard\\common\\datetimeinterface::submonth","asgard\\common\\datetimeinterface::submonths","asgard\\common\\datetimeinterface::adddays","asgard\\common\\datetimeinterface::addday","asgard\\common\\datetimeinterface::subday","asgard\\common\\datetimeinterface::subdays","asgard\\common\\datetimeinterface::addweekdays","asgard\\common\\datetimeinterface::addweekday","asgard\\common\\datetimeinterface::subweekday","asgard\\common\\datetimeinterface::subweekdays","asgard\\common\\datetimeinterface::addweeks","asgard\\common\\datetimeinterface::addweek","asgard\\common\\datetimeinterface::subweek","asgard\\common\\datetimeinterface::subweeks","asgard\\common\\datetimeinterface::addhours","asgard\\common\\datetimeinterface::addhour","asgard\\common\\datetimeinterface::subhour","asgard\\common\\datetimeinterface::subhours","asgard\\common\\datetimeinterface::addminutes","asgard\\common\\datetimeinterface::addminute","asgard\\common\\datetimeinterface::subminute","asgard\\common\\datetimeinterface::subminutes","asgard\\common\\datetimeinterface::addseconds","asgard\\common\\datetimeinterface::addsecond","asgard\\common\\datetimeinterface::subsecond","asgard\\common\\datetimeinterface::subseconds","asgard\\common\\datetimeinterface::diffinyears","asgard\\common\\datetimeinterface::diffinmonths","asgard\\common\\datetimeinterface::diffinweeks","asgard\\common\\datetimeinterface::diffindays","asgard\\common\\datetimeinterface::diffindaysfiltered","asgard\\common\\datetimeinterface::diffinweekdays","asgard\\common\\datetimeinterface::diffinweekenddays","asgard\\common\\datetimeinterface::diffinhours","asgard\\common\\datetimeinterface::diffinminutes","asgard\\common\\datetimeinterface::diffinseconds","asgard\\common\\datetimeinterface::diffforhumans","asgard\\common\\datetimeinterface::startofday","asgard\\common\\datetimeinterface::endofday","asgard\\common\\datetimeinterface::startofmonth","asgard\\common\\datetimeinterface::endofmonth","asgard\\common\\datetimeinterface::startofyear","asgard\\common\\datetimeinterface::endofyear","asgard\\common\\datetimeinterface::startofdecade","asgard\\common\\datetimeinterface::endofdecade","asgard\\common\\datetimeinterface::startofcentury","asgard\\common\\datetimeinterface::endofcentury","asgard\\common\\datetimeinterface::startofweek","asgard\\common\\datetimeinterface::endofweek","asgard\\common\\datetimeinterface::next","asgard\\common\\datetimeinterface::previous","asgard\\common\\datetimeinterface::firstofmonth","asgard\\common\\datetimeinterface::lastofmonth","asgard\\common\\datetimeinterface::nthofmonth","asgard\\common\\datetimeinterface::firstofquarter","asgard\\common\\datetimeinterface::lastofquarter","asgard\\common\\datetimeinterface::nthofquarter","asgard\\common\\datetimeinterface::firstofyear","asgard\\common\\datetimeinterface::lastofyear","asgard\\common\\datetimeinterface::nthofyear","asgard\\common\\datetimeinterface::average","asgard\\common\\datetimeinterface::isbirthday","asgard\\common\\intl::singleton","asgard\\common\\intl::__construct","asgard\\common\\intl::settranslator","asgard\\common\\intl::getcountry","asgard\\common\\intl::setcountrynames","asgard\\common\\intl::getcountrynames","asgard\\common\\paginator::__construct","asgard\\common\\paginator::getperpage","asgard\\common\\paginator::getpages","asgard\\common\\paginator::getfirst","asgard\\common\\paginator::getlast","asgard\\common\\paginator::render","asgard\\common\\paginator::hasprev","asgard\\common\\paginator::hasnext","asgard\\common\\paginator::getprev","asgard\\common\\paginator::getnext","asgard\\common\\paginatorfactory::__construct","asgard\\common\\paginatorfactory::create","asgard\\common\\paginatorfactoryinterface::create","asgard\\common\\paginatorinterface::getperpage","asgard\\common\\paginatorinterface::getpages","asgard\\common\\paginatorinterface::getfirst","asgard\\common\\paginatorinterface::getlast","asgard\\common\\paginatorinterface::render","asgard\\common\\paginatorinterface::hasprev","asgard\\common\\paginatorinterface::hasnext","asgard\\common\\paginatorinterface::getprev","asgard\\common\\paginatorinterface::getnext","asgard\\common\\session::singleton","asgard\\common\\session::setsingleton","asgard\\common\\session::__construct","asgard\\common\\session::all","asgard\\common\\session::clear","asgard\\common\\session::count","asgard\\common\\session::setall","asgard\\common\\session::has","asgard\\common\\session::delete","asgard\\common\\session::get","asgard\\common\\session::set","asgard\\common\\session::offsetset","asgard\\common\\session::offsetexists","asgard\\common\\session::offsetunset","asgard\\common\\session::offsetget","asgard\\common\\time::__tostring","asgard\\common\\tools::truncatehtml","asgard\\common\\tools::truncate","asgard\\common\\tools::truncatewords","asgard\\common\\tools::removeaccents","asgard\\common\\tools::randstr","asgard\\common\\tools::loadclassfile","asgard\\common\\zip::zip","asgard\\config\\commands\\initcommand::__construct","asgard\\config\\config::__construct","asgard\\config\\config::loaddir","asgard\\config\\config::loadfile","asgard\\config\\configinterface::loaddir","asgard\\config\\configinterface::loadfile","asgard\\console\\application::__construct","asgard\\console\\command::__construct","asgard\\console\\command::run","asgard\\console\\command::call","asgard\\console\\command::callsilent","asgard\\console\\command::confirm","asgard\\console\\command::info","asgard\\console\\command::error","asgard\\console\\command::comment","asgard\\console\\command::question","asgard\\console\\command::getoutput","asgard\\container\\commands\\listcommand::__construct","asgard\\container\\container::__construct","asgard\\container\\container::setparentclass","asgard\\container\\container::getparentclass","asgard\\container\\container::getregistry","asgard\\container\\container::getinstances","asgard\\container\\container::singleton","asgard\\container\\container::setinstance","asgard\\container\\container::setautofacade","asgard\\container\\container::get","asgard\\container\\container::set","asgard\\container\\container::has","asgard\\container\\container::remove","asgard\\container\\container::register","asgard\\container\\container::make","asgard\\container\\container::registered","asgard\\container\\container::createfactory","asgard\\container\\container::offsetset","asgard\\container\\container::offsetexists","asgard\\container\\container::offsetunset","asgard\\container\\container::offsetget","asgard\\container\\container::__wakeup","asgard\\container\\containerawaretrait::setcontainer","asgard\\container\\containerawaretrait::getcontainer","asgard\\container\\containerinterface::setparentclass","asgard\\container\\containerinterface::getparentclass","asgard\\container\\containerinterface::getregistry","asgard\\container\\containerinterface::getinstances","asgard\\container\\containerinterface::setautofacade","asgard\\container\\containerinterface::get","asgard\\container\\containerinterface::set","asgard\\container\\containerinterface::has","asgard\\container\\containerinterface::remove","asgard\\container\\containerinterface::register","asgard\\container\\containerinterface::make","asgard\\container\\containerinterface::registered","asgard\\container\\containerinterface::createfactory","asgard\\container\\containerinterface::__wakeup","asgard\\container\\facade::__callstatic","asgard\\container\\facade::inst","asgard\\container\\factory::__construct","asgard\\container\\factory::create","asgard\\core\\bundle::buildcontainer","asgard\\core\\bundle::run","asgard\\core\\bundleloader::__construct","asgard\\core\\bundleloader::sethooksannotationreader","asgard\\core\\bundleloader::setcontrollersannotationreader","asgard\\core\\bundleloader::setpath","asgard\\core\\bundleloader::getpath","asgard\\core\\bundleloader::buildcontainer","asgard\\core\\bundleloader::run","asgard\\core\\commands\\installcommand::__construct","asgard\\core\\commands\\publishcommand::__construct","asgard\\core\\commands\\showenvironmentcommand::__construct","asgard\\core\\commands\\switchenvironmentcommand::__construct","asgard\\core\\kernel::__construct","asgard\\core\\kernel::setcache","asgard\\core\\kernel::getcontainer","asgard\\core\\kernel::setconfig","asgard\\core\\kernel::getconfig","asgard\\core\\kernel::setroot","asgard\\core\\kernel::setenv","asgard\\core\\kernel::getenv","asgard\\core\\kernel::load","asgard\\core\\kernel::getcache","asgard\\core\\kernel::getallbundles","asgard\\core\\kernel::gethooksannotationreader","asgard\\core\\kernel::getcontrollersannotationreader","asgard\\core\\kernel::addbundles","asgard\\core\\kernel::getversion","asgard\\core\\kernel::get","asgard\\core\\kernel::set","asgard\\core\\kernel::offsetset","asgard\\core\\kernel::offsetexists","asgard\\core\\kernel::offsetunset","asgard\\core\\kernel::offsetget","asgard\\core\\publisher::__construct","asgard\\core\\publisher::publish","asgard\\core\\publisher::publishtests","asgard\\core\\publisher::publishmigrations","asgard\\core\\publisher::copy","asgard\\db\\commands\\createcommand::__construct","asgard\\db\\commands\\emptycommand::__construct","asgard\\db\\commands\\initcommand::__construct","asgard\\db\\dal::__construct","asgard\\db\\dal::reverse","asgard\\db\\dal::last","asgard\\db\\dal::raw","asgard\\db\\dal::getparameters","asgard\\db\\dal::from","asgard\\db\\dal::into","asgard\\db\\dal::addfrom","asgard\\db\\dal::removefrom","asgard\\db\\dal::join","asgard\\db\\dal::leftjoin","asgard\\db\\dal::rightjoin","asgard\\db\\dal::innerjoin","asgard\\db\\dal::next","asgard\\db\\dal::current","asgard\\db\\dal::rewind","asgard\\db\\dal::key","asgard\\db\\dal::valid","asgard\\db\\dal::reset","asgard\\db\\dal::query","asgard\\db\\dal::first","asgard\\db\\dal::get","asgard\\db\\dal::paginate","asgard\\db\\dal::setpaginatorfactory","asgard\\db\\dal::getpaginator","asgard\\db\\dal::select","asgard\\db\\dal::addselect","asgard\\db\\dal::removeselect","asgard\\db\\dal::offset","asgard\\db\\dal::limit","asgard\\db\\dal::orderby","asgard\\db\\dal::groupby","asgard\\db\\dal::where","asgard\\db\\dal::having","asgard\\db\\dal::removejointure","asgard\\db\\dal::isidentifier","asgard\\db\\dal::buildsql","asgard\\db\\dal::buildupdatesql","asgard\\db\\dal::builddeletesql","asgard\\db\\dal::replacetableinconditions","asgard\\db\\dal::replacetable","asgard\\db\\dal::buildinsertsql","asgard\\db\\dal::values","asgard\\db\\dal::update","asgard\\db\\dal::insert","asgard\\db\\dal::delete","asgard\\db\\dal::count","asgard\\db\\dal::min","asgard\\db\\dal::max","asgard\\db\\dal::avg","asgard\\db\\dal::sum","asgard\\db\\dal::dbgselect","asgard\\db\\dal::dbgupdate","asgard\\db\\dal::dbginsert","asgard\\db\\dal::dbgdelete","asgard\\db\\dal::union","asgard\\db\\db::__construct","asgard\\db\\db::dal","asgard\\db\\db::buildpdo","asgard\\db\\db::getpdo","asgard\\db\\db::getconfig","asgard\\db\\db::query","asgard\\db\\db::id","asgard\\db\\db::begintransaction","asgard\\db\\db::commit","asgard\\db\\db::rollback","asgard\\db\\db::close","asgard\\db\\db::getschema","asgard\\db\\db::getconn","asgard\\db\\dbinterface::dal","asgard\\db\\dbinterface::getconfig","asgard\\db\\dbinterface::getpdo","asgard\\db\\dbinterface::query","asgard\\db\\dbinterface::id","asgard\\db\\dbinterface::begintransaction","asgard\\db\\dbinterface::commit","asgard\\db\\dbinterface::rollback","asgard\\db\\mysql::__construct","asgard\\db\\mysql::import","asgard\\db\\mysql::dump","asgard\\db\\query::__construct","asgard\\db\\query::next","asgard\\db\\query::affected","asgard\\db\\query::count","asgard\\db\\query::first","asgard\\db\\query::all","asgard\\db\\raw::__construct","asgard\\db\\raw::__tostring","asgard\\db\\schema::__construct","asgard\\db\\schema::emptyall","asgard\\db\\schema::dropall","asgard\\db\\schema::listtables","asgard\\db\\schema::hastable","asgard\\db\\schema::create","asgard\\db\\schema::emptytable","asgard\\db\\schema::drop","asgard\\db\\schema::rename","asgard\\db\\schema::table","asgard\\db\\schema::renamecolumn","asgard\\db\\schema::getconn","asgard\\db\\schema::getplatform","asgard\\db\\schema::getschemamanager","asgard\\db\\schemainterface::emptyall","asgard\\db\\schemainterface::dropall","asgard\\db\\schemainterface::create","asgard\\db\\schemainterface::emptytable","asgard\\db\\schemainterface::drop","asgard\\db\\schemainterface::rename","asgard\\db\\schemainterface::table","asgard\\db\\schemainterface::renamecolumn","asgard\\db\\schemainterface::getconn","asgard\\db\\schemainterface::getplatform","asgard\\db\\schemainterface::getschemamanager","asgard\\db\\schematable::__construct","asgard\\db\\schematable::__call","asgard\\db\\schematable::gettable","asgard\\db\\schematable::getrenamedcolumns","asgard\\db\\schematable::rename","asgard\\db\\schematable::addcolumn","asgard\\db\\schematable::changecolumn","asgard\\debug\\debug::d","asgard\\debug\\debug::dwithtrace","asgard\\debug\\debug::seturl","asgard\\debug\\debug::setformat","asgard\\debug\\debug::getreport","asgard\\debug\\debug::gethtmlbacktrace","asgard\\debug\\debug::getclibacktrace","asgard\\debug\\debug::gethtmlrequest","asgard\\debug\\errorhandler::__construct","asgard\\debug\\errorhandler::setdebug","asgard\\debug\\errorhandler::register","asgard\\debug\\errorhandler::shutdownfunction","asgard\\debug\\errorhandler::ignoredir","asgard\\debug\\errorhandler::getbacktracefromexception","asgard\\debug\\errorhandler::setlogphperrors","asgard\\debug\\errorhandler::phperrorhandler","asgard\\debug\\errorhandler::exceptionhandler","asgard\\debug\\errorhandler::logexception","asgard\\debug\\errorhandler::log","asgard\\debug\\errorhandler::islogging","asgard\\debug\\errorhandler::setlogger","asgard\\debug\\errorhandler::getphperrorseverity","asgard\\debug\\errorhandler::getphperror","asgard\\debug\\psrexception::__construct","asgard\\debug\\psrexception::setseverity","asgard\\debug\\psrexception::getseverity","asgard\\email\\driverinterface::transport","asgard\\email\\driverinterface::send","asgard\\email\\fakeemail::transport","asgard\\email\\fakeemail::send","asgard\\email\\swiftemail::transport","asgard\\email\\swiftemail::send","asgard\\email\\swiftmessage::subject","asgard\\email\\swiftmessage::to","asgard\\email\\swiftmessage::from","asgard\\email\\swiftmessage::cc","asgard\\email\\swiftmessage::bcc","asgard\\email\\swiftmessage::html","asgard\\email\\swiftmessage::text","asgard\\email\\swiftmessage::htmltemplate","asgard\\email\\swiftmessage::texttemplate","asgard\\email\\swiftmessage::attachfile","asgard\\email\\swiftmessage::attachdata","asgard\\email\\swiftmessage::embedfile","asgard\\email\\swiftmessage::embeddata","asgard\\entity\\behavior::__construct","asgard\\entity\\behavior::__sleep","asgard\\entity\\behavior::getcontainer","asgard\\entity\\behavior::setdefinition","asgard\\entity\\behavior::load","asgard\\entity\\definition::__construct","asgard\\entity\\definition::getcontainer","asgard\\entity\\definition::__sleep","asgard\\entity\\definition::__set","asgard\\entity\\definition::__call","asgard\\entity\\definition::call","asgard\\entity\\definition::callstatic","asgard\\entity\\definition::setentitymanager","asgard\\entity\\definition::setgeneralhookmanager","asgard\\entity\\definition::getentitymanager","asgard\\entity\\definition::loadbehaviors","asgard\\entity\\definition::loadbehavior","asgard\\entity\\definition::getclass","asgard\\entity\\definition::addproperty","asgard\\entity\\definition::hasproperty","asgard\\entity\\definition::property","asgard\\entity\\definition::properties","asgard\\entity\\definition::messages","asgard\\entity\\definition::hasbehavior","asgard\\entity\\definition::set","asgard\\entity\\definition::has","asgard\\entity\\definition::get","asgard\\entity\\definition::isi18n","asgard\\entity\\definition::getshortname","asgard\\entity\\definition::processpreset","asgard\\entity\\definition::processpreadd","asgard\\entity\\definition::make","asgard\\entity\\entity::__construct","asgard\\entity\\entity::getlocale","asgard\\entity\\entity::setentitymanager","asgard\\entity\\entity::setlocale","asgard\\entity\\entity::__sleep","asgard\\entity\\entity::__set","asgard\\entity\\entity::__get","asgard\\entity\\entity::__isset","asgard\\entity\\entity::__unset","asgard\\entity\\entity::__callstatic","asgard\\entity\\entity::__call","asgard\\entity\\entity::definition","asgard\\entity\\entity::getdefinition","asgard\\entity\\entity::getstaticdefinition","asgard\\entity\\entity::loaddefault","asgard\\entity\\entity::isnew","asgard\\entity\\entity::isold","asgard\\entity\\entity::getvalidator","asgard\\entity\\entity::preparevalidator","asgard\\entity\\entity::valid","asgard\\entity\\entity::errors","asgard\\entity\\entity::_set","asgard\\entity\\entity::set","asgard\\entity\\entity::_get","asgard\\entity\\entity::get","asgard\\entity\\entity::toarrayraw","asgard\\entity\\entity::toarray","asgard\\entity\\entity::tojson","asgard\\entity\\entity::translate","asgard\\entity\\entity::getlocales","asgard\\entity\\entity::toarrayrawi18n","asgard\\entity\\entity::toarrayi18n","asgard\\entity\\entity::tojsoni18n","asgard\\entity\\entity::validi18n","asgard\\entity\\entity::errorsi18n","asgard\\entity\\entity::getchanged","asgard\\entity\\entity::getchangedi18n","asgard\\entity\\entity::resetchanged","asgard\\entity\\entitymanager::__construct","asgard\\entity\\entitymanager::setserializer","asgard\\entity\\entitymanager::getserializer","asgard\\entity\\entitymanager::gethookmanager","asgard\\entity\\entitymanager::sethookmanager","asgard\\entity\\entitymanager::setvalidatorfactory","asgard\\entity\\entitymanager::createvalidator","asgard\\entity\\entitymanager::setcache","asgard\\entity\\entitymanager::getcache","asgard\\entity\\entitymanager::singleton","asgard\\entity\\entitymanager::setinstance","asgard\\entity\\entitymanager::setdefaultlocale","asgard\\entity\\entitymanager::getdefaultlocale","asgard\\entity\\entitymanager::get","asgard\\entity\\entitymanager::has","asgard\\entity\\entitymanager::getdefinitions","asgard\\entity\\entitymanager::make","asgard\\entity\\entitymanagerinterface::gethookmanager","asgard\\entity\\entitymanagerinterface::sethookmanager","asgard\\entity\\entitymanagerinterface::setvalidatorfactory","asgard\\entity\\entitymanagerinterface::createvalidator","asgard\\entity\\entitymanagerinterface::setcache","asgard\\entity\\entitymanagerinterface::getcache","asgard\\entity\\entitymanagerinterface::setdefaultlocale","asgard\\entity\\entitymanagerinterface::getdefaultlocale","asgard\\entity\\entitymanagerinterface::get","asgard\\entity\\entitymanagerinterface::has","asgard\\entity\\entitymanagerinterface::getdefinitions","asgard\\entity\\entitymanagerinterface::make","asgard\\entity\\file::todelete","asgard\\entity\\file::shoulddelete","asgard\\entity\\file::save","asgard\\entity\\file::__tostring","asgard\\entity\\file::isweb","asgard\\entity\\file::setweb","asgard\\entity\\file::seturl","asgard\\entity\\file::url","asgard\\entity\\file::setwebdir","asgard\\entity\\file::relativetowebdir","asgard\\entity\\file::setdir","asgard\\entity\\manycollection::__construct","asgard\\entity\\manycollection::count","asgard\\entity\\manycollection::all","asgard\\entity\\manycollection::add","asgard\\entity\\manycollection::setall","asgard\\entity\\manycollection::remove","asgard\\entity\\manycollection::get","asgard\\entity\\manycollection::offsetset","asgard\\entity\\manycollection::offsetexists","asgard\\entity\\manycollection::offsetunset","asgard\\entity\\manycollection::offsetget","asgard\\entity\\manycollection::valid","asgard\\entity\\manycollection::rewind","asgard\\entity\\manycollection::current","asgard\\entity\\manycollection::key","asgard\\entity\\manycollection::next","asgard\\entity\\persistencebehavior::static_orm","asgard\\entity\\persistencebehavior::static_loadby","asgard\\entity\\persistencebehavior::static_load","asgard\\entity\\persistencebehavior::static_destroyall","asgard\\entity\\persistencebehavior::static_destroyone","asgard\\entity\\persistencebehavior::static_create","asgard\\entity\\persistencebehavior::call_save","asgard\\entity\\persistencebehavior::call_destroy","asgard\\entity\\properties\\booleanproperty::preparevalidator","asgard\\entity\\properties\\booleanproperty::getormparameters","asgard\\entity\\properties\\booleanproperty::_getdefault","asgard\\entity\\properties\\booleanproperty::getformfield","asgard\\entity\\properties\\booleanproperty::tostring","asgard\\entity\\properties\\countryproperty::getformparameters","asgard\\entity\\properties\\countryproperty::preparevalidator","asgard\\entity\\properties\\countryproperty::seintl","asgard\\entity\\properties\\countryproperty::getintl","asgard\\entity\\properties\\countryproperty::getormparameters","asgard\\entity\\properties\\dateproperty::preparevalidator","asgard\\entity\\properties\\dateproperty::getmessages","asgard\\entity\\properties\\dateproperty::_getdefault","asgard\\entity\\properties\\dateproperty::doset","asgard\\entity\\properties\\dateproperty::getormparameters","asgard\\entity\\properties\\dateproperty::tostring","asgard\\entity\\properties\\dateproperty::getformfield","asgard\\entity\\properties\\datetimeproperty::preparevalidator","asgard\\entity\\properties\\datetimeproperty::getmessages","asgard\\entity\\properties\\datetimeproperty::_getdefault","asgard\\entity\\properties\\datetimeproperty::doset","asgard\\entity\\properties\\datetimeproperty::getormparameters","asgard\\entity\\properties\\datetimeproperty::getformfield","asgard\\entity\\properties\\decimalproperty::getormparameters","asgard\\entity\\properties\\emailproperty::getormparameters","asgard\\entity\\properties\\emailproperty::preparevalidator","asgard\\entity\\properties\\entityproperty::getdefault","asgard\\entity\\properties\\entityproperty::preparevalidator","asgard\\entity\\properties\\entityproperty::doset","asgard\\entity\\properties\\fileproperty::setwebdir","asgard\\entity\\properties\\fileproperty::seturl","asgard\\entity\\properties\\fileproperty::__construct","asgard\\entity\\properties\\fileproperty::preparevalidator","asgard\\entity\\properties\\fileproperty::getormparameters","asgard\\entity\\properties\\fileproperty::doset","asgard\\entity\\properties\\fileproperty::getformfield","asgard\\entity\\properties\\integerproperty::getormparameters","asgard\\entity\\properties\\passwordproperty::getormparameters","asgard\\entity\\properties\\passwordproperty::getformparameters","asgard\\entity\\properties\\passwordproperty::doset","asgard\\entity\\properties\\stringproperty::__construct","asgard\\entity\\properties\\stringproperty::getormparameters","asgard\\entity\\properties\\textproperty::__construct","asgard\\entity\\properties\\textproperty::getormparameters","asgard\\entity\\property::__construct","asgard\\entity\\property::getformparameters","asgard\\entity\\property::__sleep","asgard\\entity\\property::setposition","asgard\\entity\\property::getposition","asgard\\entity\\property::setname","asgard\\entity\\property::setdefinition","asgard\\entity\\property::required","asgard\\entity\\property::get","asgard\\entity\\property::set","asgard\\entity\\property::has","asgard\\entity\\property::getparams","asgard\\entity\\property::getname","asgard\\entity\\property::__tostring","asgard\\entity\\property::getdefault","asgard\\entity\\property::preparevalidator","asgard\\entity\\property::getmessages","asgard\\entity\\property::serialize","asgard\\entity\\property::unserialize","asgard\\entity\\property::setdecorator","asgard\\entity\\property::doset","asgard\\entity\\relationsbehavior::static_relations","asgard\\entity\\relationsbehavior::static_relation","asgard\\entity\\relationsbehavior::static_hasrelation","asgard\\entity\\relationsbehavior::call_related","asgard\\entity\\serializer::singleton","asgard\\entity\\serializer::toarrayraw","asgard\\entity\\serializer::toarray","asgard\\entity\\serializer::tojson","asgard\\entity\\serializer::toarrayrawi18n","asgard\\entity\\serializer::toarrayi18n","asgard\\entity\\serializer::tojsoni18n","asgard\\entity\\serializer::arraytojsoni18n","asgard\\entity\\serializer::arraytojson","asgard\\entityform\\entityfieldsolver::__construct","asgard\\entityform\\entityfieldsolver::addsolver","asgard\\entityform\\entityfieldsolver::add","asgard\\entityform\\entityfieldsolver::addmany","asgard\\entityform\\entityfieldsolver::solve","asgard\\entityform\\entityfieldsolver::dosolve","asgard\\entityform\\entityfieldsolver::dosolvemany","asgard\\entityform\\entityfieldsolverinterface::addsolver","asgard\\entityform\\entityfieldsolverinterface::add","asgard\\entityform\\entityfieldsolverinterface::addmany","asgard\\entityform\\entityfieldsolverinterface::solve","asgard\\entityform\\entityfieldsolverinterface::dosolve","asgard\\entityform\\entityfieldsolverinterface::dosolvemany","asgard\\entityform\\entityform::__construct","asgard\\entityform\\entityform::addentityfieldsolver","asgard\\entityform\\entityform::getentityfieldsolver","asgard\\entityform\\entityform::setdatamapper","asgard\\entityform\\entityform::getdatamapper","asgard\\entityform\\entityform::getentity","asgard\\entityform\\entityform::addrelation","asgard\\entityform\\entityform::dosave","asgard\\entityform\\entityform::errors","asgard\\entityform\\entityforminterface::addentityfieldsolver","asgard\\entityform\\entityforminterface::getentityfieldsolver","asgard\\entityform\\entityforminterface::setdatamapper","asgard\\entityform\\entityforminterface::getdatamapper","asgard\\entityform\\entityforminterface::getentity","asgard\\entityform\\entityforminterface::addrelation","asgard\\entityform\\entityforminterface::dosave","asgard\\entityform\\entityforminterface::errors","asgard\\file\\file::__construct","asgard\\file\\file::setsrc","asgard\\file\\file::setname","asgard\\file\\file::getname","asgard\\file\\file::setuploaded","asgard\\file\\file::isuploaded","asgard\\file\\file::size","asgard\\file\\file::type","asgard\\file\\file::extension","asgard\\file\\file::exists","asgard\\file\\file::src","asgard\\file\\file::relativeto","asgard\\file\\file::movetodir","asgard\\file\\file::isin","asgard\\file\\file::isat","asgard\\file\\file::rename","asgard\\file\\file::delete","asgard\\file\\file::copy","asgard\\file\\filesystem::relativeto","asgard\\file\\filesystem::getnewfilename","asgard\\file\\filesystem::rename","asgard\\file\\filesystem::copy","asgard\\file\\filesystem::delete","asgard\\file\\filesystem::mkdir","asgard\\file\\filesystem::write","asgard\\file\\rules\\extension::__construct","asgard\\file\\rules\\extension::validate","asgard\\file\\rules\\extension::formatparameters","asgard\\file\\rules\\extension::getmessage","asgard\\file\\rules\\image::validate","asgard\\file\\rules\\image::getmessage","asgard\\form\\dynamicgroup::__construct","asgard\\form\\dynamicgroup::setcallback","asgard\\form\\dynamicgroup::setdata","asgard\\form\\dynamicgroup::setdefaultrender","asgard\\form\\dynamicgroup::field","asgard\\form\\dynamicgroup::rendertemplate","asgard\\form\\field::__construct","asgard\\form\\field::required","asgard\\form\\field::getname","asgard\\form\\field::setoptions","asgard\\form\\field::getoption","asgard\\form\\field::gettopform","asgard\\form\\field::getvalidationrules","asgard\\form\\field::getvalidationmessages","asgard\\form\\field::__call","asgard\\form\\field::setdefaultwidget","asgard\\form\\field::label","asgard\\form\\field::labeltag","asgard\\form\\field::def","asgard\\form\\field::render","asgard\\form\\field::__tostring","asgard\\form\\field::value","asgard\\form\\field::setparent","asgard\\form\\field::getparent","asgard\\form\\field::setname","asgard\\form\\field::setvalue","asgard\\form\\field::getparents","asgard\\form\\field::getid","asgard\\form\\field::name","asgard\\form\\field::shortname","asgard\\form\\field::seterrors","asgard\\form\\field::error","asgard\\form\\field::errors","asgard\\form\\fields\\booleanfield::value","asgard\\form\\fields\\csrffield::__construct","asgard\\form\\fields\\csrffield::valid","asgard\\form\\fields\\countryfield::__construct","asgard\\form\\fields\\countryfield::seintl","asgard\\form\\fields\\datefield::setvalue","asgard\\form\\fields\\datefield::value","asgard\\form\\fields\\datefield::getday","asgard\\form\\fields\\datefield::getmonth","asgard\\form\\fields\\datefield::getyear","asgard\\form\\fields\\datetimefield::setvalue","asgard\\form\\fields\\datetimefield::value","asgard\\form\\fields\\datetimefield::gethour","asgard\\form\\fields\\datetimefield::getminute","asgard\\form\\fields\\datetimefield::getsecond","asgard\\form\\fields\\datetimefield::getday","asgard\\form\\fields\\datetimefield::getmonth","asgard\\form\\fields\\datetimefield::getyear","asgard\\form\\fields\\dayfield::__construct","asgard\\form\\fields\\monthfield::__construct","asgard\\form\\fields\\multipleselectfield::value","asgard\\form\\fields\\multipleselectfield::getchoices","asgard\\form\\fields\\multipleselectfield::getcheckboxes","asgard\\form\\fields\\multipleselectfield::getcheckbox","asgard\\form\\fields\\multipleselectfield::getvalidationrules","asgard\\form\\fields\\selectfield::getchoices","asgard\\form\\fields\\selectfield::getradio","asgard\\form\\fields\\selectfield::getradios","asgard\\form\\fields\\selectfield::getvalidationrules","asgard\\form\\fields\\timefield::setvalue","asgard\\form\\fields\\timefield::value","asgard\\form\\fields\\timefield::gethour","asgard\\form\\fields\\timefield::getminute","asgard\\form\\fields\\timefield::getsecond","asgard\\form\\fields\\yearfield::__construct","asgard\\form\\form::__construct","asgard\\form\\form::setvalidatorfactory","asgard\\form\\form::createvalidator","asgard\\form\\form::settranslator","asgard\\form\\form::gettranslator","asgard\\form\\form::setrequest","asgard\\form\\form::getrequest","asgard\\form\\form::setmethod","asgard\\form\\form::getmethod","asgard\\form\\form::setoption","asgard\\form\\form::getoption","asgard\\form\\form::csrf","asgard\\form\\form::setsavecallback","asgard\\form\\form::setpresavecallback","asgard\\form\\form::save","asgard\\form\\form::dosave","asgard\\form\\form::sent","asgard\\form\\form::getgeneralerrors","asgard\\form\\form::isvalid","asgard\\form\\form::uploadsuccess","asgard\\form\\form::open","asgard\\form\\form::close","asgard\\form\\form::submit","asgard\\form\\form::setparent","asgard\\form\\form::fetch","asgard\\form\\form::dorender","asgard\\form\\form::getwidget","asgard\\form\\forminterface::setvalidatorfactory","asgard\\form\\forminterface::createvalidator","asgard\\form\\forminterface::settranslator","asgard\\form\\forminterface::gettranslator","asgard\\form\\forminterface::setrequest","asgard\\form\\forminterface::getrequest","asgard\\form\\forminterface::setmethod","asgard\\form\\forminterface::getmethod","asgard\\form\\forminterface::setoption","asgard\\form\\forminterface::getoption","asgard\\form\\forminterface::csrf","asgard\\form\\forminterface::setsavecallback","asgard\\form\\forminterface::setpresavecallback","asgard\\form\\forminterface::save","asgard\\form\\forminterface::dosave","asgard\\form\\forminterface::sent","asgard\\form\\forminterface::getgeneralerrors","asgard\\form\\forminterface::isvalid","asgard\\form\\forminterface::uploadsuccess","asgard\\form\\forminterface::open","asgard\\form\\forminterface::close","asgard\\form\\forminterface::submit","asgard\\form\\forminterface::setparent","asgard\\form\\forminterface::fetch","asgard\\form\\forminterface::dorender","asgard\\form\\forminterface::getwidget","asgard\\form\\group::__construct","asgard\\form\\group::createvalidator","asgard\\form\\group::gettranslator","asgard\\form\\group::getrequest","asgard\\form\\group::name","asgard\\form\\group::setname","asgard\\form\\group::size","asgard\\form\\group::hasfile","asgard\\form\\group::getwidgetmanager","asgard\\form\\group::setwidgetmanager","asgard\\form\\group::render","asgard\\form\\group::isvalid","asgard\\form\\group::sent","asgard\\form\\group::errors","asgard\\form\\group::remove","asgard\\form\\group::get","asgard\\form\\group::add","asgard\\form\\group::has","asgard\\form\\group::resetfields","asgard\\form\\group::fields","asgard\\form\\group::addfields","asgard\\form\\group::reset","asgard\\form\\group::setdata","asgard\\form\\group::data","asgard\\form\\group::offsetset","asgard\\form\\group::offsetexists","asgard\\form\\group::offsetunset","asgard\\form\\group::offsetget","asgard\\form\\group::valid","asgard\\form\\group::rewind","asgard\\form\\group::current","asgard\\form\\group::key","asgard\\form\\group::next","asgard\\form\\group::setparent","asgard\\form\\group::gettopform","asgard\\form\\group::setfields","asgard\\form\\group::getparents","asgard\\form\\group::dosave","asgard\\form\\group::dorender","asgard\\form\\groupinterface::createvalidator","asgard\\form\\groupinterface::gettranslator","asgard\\form\\groupinterface::getrequest","asgard\\form\\groupinterface::name","asgard\\form\\groupinterface::setname","asgard\\form\\groupinterface::size","asgard\\form\\groupinterface::hasfile","asgard\\form\\groupinterface::getwidgetmanager","asgard\\form\\groupinterface::setwidgetmanager","asgard\\form\\groupinterface::render","asgard\\form\\groupinterface::isvalid","asgard\\form\\groupinterface::sent","asgard\\form\\groupinterface::errors","asgard\\form\\groupinterface::remove","asgard\\form\\groupinterface::get","asgard\\form\\groupinterface::add","asgard\\form\\groupinterface::has","asgard\\form\\groupinterface::resetfields","asgard\\form\\groupinterface::fields","asgard\\form\\groupinterface::addfields","asgard\\form\\groupinterface::reset","asgard\\form\\groupinterface::setdata","asgard\\form\\groupinterface::data","asgard\\form\\groupinterface::setparent","asgard\\form\\groupinterface::gettopform","asgard\\form\\groupinterface::setfields","asgard\\form\\groupinterface::getparents","asgard\\form\\groupinterface::dosave","asgard\\form\\groupinterface::dorender","asgard\\form\\htmlhelper::tag","asgard\\form\\widget::__construct","asgard\\form\\widget::__tostring","asgard\\form\\widget::label","asgard\\form\\widget::setlabel","asgard\\form\\widget::render","asgard\\form\\widgetfactoryinterface::create","asgard\\form\\widgetmanager::singleton","asgard\\form\\widgetmanager::setwidget","asgard\\form\\widgetmanager::getwidget","asgard\\form\\widgetmanager::getwidgetinstance","asgard\\form\\widgetmanager::addnamespace","asgard\\form\\widgetmanager::setwidgetfactory","asgard\\form\\widgetmanagerinterface::setwidget","asgard\\form\\widgetmanagerinterface::getwidget","asgard\\form\\widgetmanagerinterface::getwidgetinstance","asgard\\form\\widgetmanagerinterface::addnamespace","asgard\\form\\widgets\\callbackwidget::__construct","asgard\\form\\widgets\\callbackwidget::render","asgard\\form\\widgets\\checkboxwidget::render","asgard\\form\\widgets\\checkboxeswidget::render","asgard\\form\\widgets\\datewidget::render","asgard\\form\\widgets\\datetimewidget::render","asgard\\form\\widgets\\filewidget::render","asgard\\form\\widgets\\hiddenwidget::render","asgard\\form\\widgets\\multipleselectwidget::render","asgard\\form\\widgets\\passwordwidget::render","asgard\\form\\widgets\\radiowidget::render","asgard\\form\\widgets\\radioswidget::render","asgard\\form\\widgets\\selectwidget::render","asgard\\form\\widgets\\submitwidget::render","asgard\\form\\widgets\\textwidget::render","asgard\\form\\widgets\\textareawidget::render","asgard\\form\\widgets\\timewidget::render","asgard\\generator\\abstractgenerator::pregenerate","asgard\\generator\\abstractgenerator::generate","asgard\\generator\\abstractgenerator::postgenerate","asgard\\generator\\abstractgenerator::setengine","asgard\\generator\\commands\\generatecommand::__construct","asgard\\generator\\defaultgenerator::pregenerate","asgard\\generator\\defaultgenerator::generate","asgard\\generator\\generatorengine::__construct","asgard\\generator\\generatorengine::setoverridefiles","asgard\\generator\\generatorengine::getoverridefiles","asgard\\generator\\generatorengine::processfile","asgard\\generator\\generatorengine::outputphp","asgard\\generator\\generatorengine::addgenerator","asgard\\generator\\generatorengine::generate","asgard\\generator\\generatorengineinterface::generate","asgard\\generator\\generatorengineinterface::addgenerator","asgard\\generator\\generatorengineinterface::processfile","asgard\\generator\\generatorengineinterface::setoverridefiles","asgard\\hook\\annotationreader::fetchhooks","asgard\\hook\\annotationreader::setcache","asgard\\hook\\annotationreader::setdebug","asgard\\hook\\chain::__construct","asgard\\hook\\chain::setcalls","asgard\\hook\\chain::executed","asgard\\hook\\chain::run","asgard\\hook\\chain::stop","asgard\\hook\\hookmanager::singleton","asgard\\hook\\hookmanager::__construct","asgard\\hook\\hookmanager::trigger","asgard\\hook\\hookmanager::has","asgard\\hook\\hookmanager::get","asgard\\hook\\hookmanager::hook","asgard\\hook\\hookmanager::prehook","asgard\\hook\\hookmanager::posthook","asgard\\hook\\hookmanager::hooks","asgard\\hook\\hookmanagerinterface::trigger","asgard\\hook\\hookmanagerinterface::has","asgard\\hook\\hookmanagerinterface::get","asgard\\hook\\hookmanagerinterface::hook","asgard\\hook\\hookmanagerinterface::prehook","asgard\\hook\\hookmanagerinterface::posthook","asgard\\hook\\hookmanagerinterface::hooks","asgard\\hook\\hookabletrait::hashook","asgard\\hook\\hookabletrait::trigger","asgard\\hook\\hookabletrait::hook","asgard\\hook\\hookabletrait::prehook","asgard\\hook\\hookabletrait::posthook","asgard\\hook\\hookabletrait::gethookmanager","asgard\\hook\\hookabletrait::sethookmanager","asgard\\http\\annotationreader::fetchroutes","asgard\\http\\annotationreader::setcache","asgard\\http\\annotationreader::setdebug","asgard\\http\\browser\\browser::__construct","asgard\\http\\browser\\browser::getsession","asgard\\http\\browser\\browser::getcookies","asgard\\http\\browser\\browser::getlast","asgard\\http\\browser\\browser::get","asgard\\http\\browser\\browser::post","asgard\\http\\browser\\browser::put","asgard\\http\\browser\\browser::delete","asgard\\http\\browser\\browser::req","asgard\\http\\browser\\browser::request","asgard\\http\\browser\\browser::catchexception","asgard\\http\\browser\\browser::submit","asgard\\http\\browser\\browserinterface::getcookies","asgard\\http\\browser\\browserinterface::getsession","asgard\\http\\browser\\browserinterface::getlast","asgard\\http\\browser\\browserinterface::get","asgard\\http\\browser\\browserinterface::post","asgard\\http\\browser\\browserinterface::put","asgard\\http\\browser\\browserinterface::delete","asgard\\http\\browser\\browserinterface::req","asgard\\http\\browser\\browserinterface::catchexception","asgard\\http\\browser\\browserinterface::submit","asgard\\http\\browser\\field::__construct","asgard\\http\\browser\\field::addchoice","asgard\\http\\browser\\field::getchoices","asgard\\http\\browser\\field::getvalue","asgard\\http\\browser\\field::setvalue","asgard\\http\\browser\\field::gettype","asgard\\http\\browser\\formparser::__construct","asgard\\http\\browser\\formparser::has","asgard\\http\\browser\\formparser::get","asgard\\http\\browser\\formparser::set","asgard\\http\\browser\\formparser::getfields","asgard\\http\\browser\\formparser::add","asgard\\http\\browser\\formparser::values","asgard\\http\\browser\\formparser::clickon","asgard\\http\\browser\\formparser::parse","asgard\\http\\commands\\browsercommand::__construct","asgard\\http\\commands\\routescommand::__construct","asgard\\http\\controller::addfilter","asgard\\http\\controller::addbeforefilter","asgard\\http\\controller::addafterfilter","asgard\\http\\controller::run","asgard\\http\\controller::before","asgard\\http\\controller::after","asgard\\http\\controller::getaction","asgard\\http\\controller::getflash","asgard\\http\\controller::back","asgard\\http\\controller::notfound","asgard\\http\\controller::url","asgard\\http\\controller::get","asgard\\http\\controller::set","asgard\\http\\controller::has","asgard\\http\\controllerexception::__construct","asgard\\http\\controllerexception::getresponse","asgard\\http\\controllerexception::setresponse","asgard\\http\\controllerexception::gethttpcode","asgard\\http\\controllerexception::setcode","asgard\\http\\cookiemanager::all","asgard\\http\\cookiemanager::clear","asgard\\http\\cookiemanager::count","asgard\\http\\cookiemanager::setall","asgard\\http\\cookiemanager::has","asgard\\http\\cookiemanager::get","asgard\\http\\cookiemanager::set","asgard\\http\\cookiemanager::delete","asgard\\http\\cookiemanager::offsetset","asgard\\http\\cookiemanager::offsetexists","asgard\\http\\cookiemanager::offsetunset","asgard\\http\\cookiemanager::offsetget","asgard\\http\\exceptions\\notfoundexception::__construct","asgard\\http\\filter::__construct","asgard\\http\\filter::before","asgard\\http\\filter::after","asgard\\http\\filters\\pagelayout::__construct","asgard\\http\\filters\\pagelayout::before","asgard\\http\\filters\\pagelayout::after","asgard\\http\\httpfile::__construct","asgard\\http\\httpfile::createfromarray","asgard\\http\\httpfile::settype","asgard\\http\\httpfile::type","asgard\\http\\httpfile::setsize","asgard\\http\\httpfile::size","asgard\\http\\httpfile::seterror","asgard\\http\\httpfile::error","asgard\\http\\httpkernel::__construct","asgard\\http\\httpkernel::setdebug","asgard\\http\\httpkernel::settranslator","asgard\\http\\httpkernel::setresolver","asgard\\http\\httpkernel::seterrorhandler","asgard\\http\\httpkernel::sethookmanager","asgard\\http\\httpkernel::settemplateenginefactory","asgard\\http\\httpkernel::gethookmanager","asgard\\http\\httpkernel::getresolver","asgard\\http\\httpkernel::getdebug","asgard\\http\\httpkernel::gettranslator","asgard\\http\\httpkernel::geterrorhandler","asgard\\http\\httpkernel::gettemplateenginefactory","asgard\\http\\httpkernel::start","asgard\\http\\httpkernel::end","asgard\\http\\httpkernel::run","asgard\\http\\httpkernel::addrequest","asgard\\http\\httpkernel::process","asgard\\http\\httpkernel::getrequest","asgard\\http\\httpkernel::runcontroller","asgard\\http\\httpkernel::preparecontroller","asgard\\http\\httpkernel::addtemplatepathsolver","asgard\\http\\httpkernel::filterall","asgard\\http\\httpkernel::filter","asgard\\http\\httpkernel::filterbeforeall","asgard\\http\\httpkernel::filterbefore","asgard\\http\\httpkernel::filterafterall","asgard\\http\\httpkernel::filterafter","asgard\\http\\httpkernelinterface::setdebug","asgard\\http\\httpkernelinterface::settranslator","asgard\\http\\httpkernelinterface::setresolver","asgard\\http\\httpkernelinterface::seterrorhandler","asgard\\http\\httpkernelinterface::sethookmanager","asgard\\http\\httpkernelinterface::settemplateenginefactory","asgard\\http\\httpkernelinterface::gethookmanager","asgard\\http\\httpkernelinterface::getresolver","asgard\\http\\httpkernelinterface::getdebug","asgard\\http\\httpkernelinterface::gettranslator","asgard\\http\\httpkernelinterface::geterrorhandler","asgard\\http\\httpkernelinterface::gettemplateenginefactory","asgard\\http\\httpkernelinterface::start","asgard\\http\\httpkernelinterface::end","asgard\\http\\httpkernelinterface::run","asgard\\http\\httpkernelinterface::addrequest","asgard\\http\\httpkernelinterface::process","asgard\\http\\httpkernelinterface::getrequest","asgard\\http\\httpkernelinterface::runcontroller","asgard\\http\\httpkernelinterface::addtemplatepathsolver","asgard\\http\\httpkernelinterface::filterall","asgard\\http\\httpkernelinterface::filter","asgard\\http\\httpkernelinterface::filterbeforeall","asgard\\http\\httpkernelinterface::filterbefore","asgard\\http\\httpkernelinterface::filterafterall","asgard\\http\\httpkernelinterface::filterafter","asgard\\http\\request::__clone","asgard\\http\\request::singleton","asgard\\http\\request::setinstance","asgard\\http\\request::__construct","asgard\\http\\request::createfromglobals","asgard\\http\\request::setfiles","asgard\\http\\request::getjson","asgard\\http\\request::setjson","asgard\\http\\request::seturl","asgard\\http\\request::getparam","asgard\\http\\request::setparam","asgard\\http\\request::offsetset","asgard\\http\\request::offsetexists","asgard\\http\\request::offsetunset","asgard\\http\\request::offsetget","asgard\\http\\request::format","asgard\\http\\request::method","asgard\\http\\request::setmethod","asgard\\http\\request::ip","asgard\\http\\request::setip","asgard\\http\\request::referer","asgard\\http\\request::setreferer","asgard\\http\\request::getbody","asgard\\http\\request::setbody","asgard\\http\\request::setroute","asgard\\http\\request::getroute","asgard\\http\\resolver::__construct","asgard\\http\\resolver::setroutes","asgard\\http\\resolver::addroutes","asgard\\http\\resolver::addroute","asgard\\http\\resolver::match","asgard\\http\\resolver::matchwith","asgard\\http\\resolver::getregexfromroute","asgard\\http\\resolver::getroute","asgard\\http\\resolver::sortroutes","asgard\\http\\resolver::buildroute","asgard\\http\\resolver::getroutes","asgard\\http\\resolver::getroutefor","asgard\\http\\resolver::url","asgard\\http\\resolver::sethttpkernel","asgard\\http\\resolver::geturl","asgard\\http\\resolver::seturl","asgard\\http\\resolverinterface::setroutes","asgard\\http\\resolverinterface::addroutes","asgard\\http\\resolverinterface::addroute","asgard\\http\\resolverinterface::match","asgard\\http\\resolverinterface::matchwith","asgard\\http\\resolverinterface::getregexfromroute","asgard\\http\\resolverinterface::getroute","asgard\\http\\resolverinterface::sortroutes","asgard\\http\\resolverinterface::buildroute","asgard\\http\\resolverinterface::getroutes","asgard\\http\\resolverinterface::getroutefor","asgard\\http\\resolverinterface::url","asgard\\http\\resolverinterface::sethttpkernel","asgard\\http\\resolverinterface::geturl","asgard\\http\\response::__construct","asgard\\http\\response::setrequest","asgard\\http\\response::setcode","asgard\\http\\response::getcode","asgard\\http\\response::getrequest","asgard\\http\\response::setheader","asgard\\http\\response::getheader","asgard\\http\\response::getheaders","asgard\\http\\response::setcontent","asgard\\http\\response::getcontent","asgard\\http\\response::sendheaders","asgard\\http\\response::send","asgard\\http\\response::redirect","asgard\\http\\response::__tostring","asgard\\http\\response::isok","asgard\\http\\response::back","asgard\\http\\route::__construct","asgard\\http\\route::get","asgard\\http\\route::set","asgard\\http\\route::getroute","asgard\\http\\route::setroute","asgard\\http\\route::getcontroller","asgard\\http\\route::getaction","asgard\\http\\route::setcontroller","asgard\\http\\route::setaction","asgard\\http\\url::__construct","asgard\\http\\url::get","asgard\\http\\url::seturl","asgard\\http\\url::sethost","asgard\\http\\url::setroot","asgard\\http\\url::current","asgard\\http\\url::getparams","asgard\\http\\url::full","asgard\\http\\url::base","asgard\\http\\url::setbase","asgard\\http\\url::to","asgard\\http\\url::root","asgard\\http\\url::host","asgard\\http\\url::protocol","asgard\\http\\url::startswith","asgard\\http\\urlinterface::get","asgard\\http\\urlinterface::seturl","asgard\\http\\urlinterface::sethost","asgard\\http\\urlinterface::setroot","asgard\\http\\urlinterface::current","asgard\\http\\urlinterface::getparams","asgard\\http\\urlinterface::full","asgard\\http\\urlinterface::base","asgard\\http\\urlinterface::setbase","asgard\\http\\urlinterface::to","asgard\\http\\urlinterface::root","asgard\\http\\urlinterface::host","asgard\\http\\urlinterface::protocol","asgard\\http\\urlinterface::startswith","asgard\\http\\utils\\flash::__construct","asgard\\http\\utils\\flash::addsuccess","asgard\\http\\utils\\flash::adderror","asgard\\http\\utils\\flash::addinfo","asgard\\http\\utils\\flash::addwarning","asgard\\http\\utils\\flash::add","asgard\\http\\utils\\flash::showall","asgard\\http\\utils\\flash::show","asgard\\http\\utils\\flash::setcallback","asgard\\http\\utils\\flash::has","asgard\\http\\utils\\flash::setglobalcallback","asgard\\http\\utils\\html::__construct","asgard\\http\\utils\\html::codestart","asgard\\http\\utils\\html::codeend","asgard\\http\\utils\\html::gettitle","asgard\\http\\utils\\html::getdescription","asgard\\http\\utils\\html::getkeywords","asgard\\http\\utils\\html::settitle","asgard\\http\\utils\\html::setdescription","asgard\\http\\utils\\html::setkeywords","asgard\\http\\utils\\html::printtitle","asgard\\http\\utils\\html::printdescription","asgard\\http\\utils\\html::printkeywords","asgard\\http\\utils\\html::includejs","asgard\\http\\utils\\html::includecss","asgard\\http\\utils\\html::codejs","asgard\\http\\utils\\html::codecss","asgard\\http\\utils\\html::code","asgard\\http\\utils\\html::printjsinclude","asgard\\http\\utils\\html::printcssinclude","asgard\\http\\utils\\html::printjscode","asgard\\http\\utils\\html::printcsscode","asgard\\http\\utils\\html::printcode","asgard\\http\\utils\\html::printall","asgard\\http\\utils\\html::sanitize","asgard\\http\\utils\\html::set","asgard\\http\\utils\\html::get","asgard\\http\\utils\\html::getrequest","asgard\\http\\utils\\htmlinterface::codestart","asgard\\http\\utils\\htmlinterface::codeend","asgard\\http\\utils\\htmlinterface::gettitle","asgard\\http\\utils\\htmlinterface::getdescription","asgard\\http\\utils\\htmlinterface::getkeywords","asgard\\http\\utils\\htmlinterface::settitle","asgard\\http\\utils\\htmlinterface::setdescription","asgard\\http\\utils\\htmlinterface::setkeywords","asgard\\http\\utils\\htmlinterface::printtitle","asgard\\http\\utils\\htmlinterface::printdescription","asgard\\http\\utils\\htmlinterface::printkeywords","asgard\\http\\utils\\htmlinterface::includejs","asgard\\http\\utils\\htmlinterface::includecss","asgard\\http\\utils\\htmlinterface::codejs","asgard\\http\\utils\\htmlinterface::codecss","asgard\\http\\utils\\htmlinterface::code","asgard\\http\\utils\\htmlinterface::printjsinclude","asgard\\http\\utils\\htmlinterface::printcssinclude","asgard\\http\\utils\\htmlinterface::printjscode","asgard\\http\\utils\\htmlinterface::printcsscode","asgard\\http\\utils\\htmlinterface::printcode","asgard\\http\\utils\\htmlinterface::printall","asgard\\migration\\commands\\addcommand::__construct","asgard\\migration\\commands\\createcommand::__construct","asgard\\migration\\commands\\listcommand::__construct","asgard\\migration\\commands\\migratecommand::__construct","asgard\\migration\\commands\\migrateonecommand::__construct","asgard\\migration\\commands\\refreshcommand::__construct","asgard\\migration\\commands\\removecommand::__construct","asgard\\migration\\commands\\rollbackcommand::__construct","asgard\\migration\\commands\\unmigratecommand::__construct","asgard\\migration\\dbmigration::setdb","asgard\\migration\\dbmigration::setschema","asgard\\migration\\dbmigration::_up","asgard\\migration\\dbmigration::_down","asgard\\migration\\migration::__construct","asgard\\migration\\migration::up","asgard\\migration\\migration::down","asgard\\migration\\migration::_up","asgard\\migration\\migration::_down","asgard\\migration\\migrationmanager::__construct","asgard\\migration\\migrationmanager::gettracker","asgard\\migration\\migrationmanager::add","asgard\\migration\\migrationmanager::create","asgard\\migration\\migrationmanager::has","asgard\\migration\\migrationmanager::remove","asgard\\migration\\migrationmanager::migrate","asgard\\migration\\migrationmanager::migratefile","asgard\\migration\\migrationmanager::migrateall","asgard\\migration\\migrationmanager::reset","asgard\\migration\\migrationmanager::unmigrate","asgard\\migration\\migrationmanager::rollback","asgard\\migration\\migrationmanager::migrateuntil","asgard\\migration\\migrationmanager::rollbackuntil","asgard\\migration\\migrationmanagerinterface::gettracker","asgard\\migration\\migrationmanagerinterface::add","asgard\\migration\\migrationmanagerinterface::create","asgard\\migration\\migrationmanagerinterface::has","asgard\\migration\\migrationmanagerinterface::remove","asgard\\migration\\migrationmanagerinterface::migrate","asgard\\migration\\migrationmanagerinterface::migratefile","asgard\\migration\\migrationmanagerinterface::migrateall","asgard\\migration\\migrationmanagerinterface::reset","asgard\\migration\\migrationmanagerinterface::unmigrate","asgard\\migration\\migrationmanagerinterface::rollback","asgard\\migration\\migrationmanagerinterface::rollbackuntil","asgard\\migration\\tracker::__construct","asgard\\migration\\tracker::createtable","asgard\\migration\\tracker::getlist","asgard\\migration\\tracker::getdownlist","asgard\\migration\\tracker::getuplist","asgard\\migration\\tracker::has","asgard\\migration\\tracker::getnext","asgard\\migration\\tracker::getlast","asgard\\migration\\tracker::getuntil","asgard\\migration\\tracker::getreveremigrateduntil","asgard\\migration\\tracker::add","asgard\\migration\\tracker::remove","asgard\\migration\\tracker::unmigrate","asgard\\migration\\tracker::migrate","asgard\\migration\\tracker::isup","asgard\\orm\\collectionorm::__construct","asgard\\orm\\collectionorm::sync","asgard\\orm\\collectionorm::add","asgard\\orm\\collectionorm::make","asgard\\orm\\collectionorm::create","asgard\\orm\\collectionorm::remove","asgard\\orm\\collectionorm::clear","asgard\\orm\\collectionormfactory::__construct","asgard\\orm\\collectionormfactory::create","asgard\\orm\\collectionormfactoryinterface::create","asgard\\orm\\collectionorminterface::sync","asgard\\orm\\collectionorminterface::add","asgard\\orm\\collectionorminterface::create","asgard\\orm\\collectionorminterface::remove","asgard\\orm\\collectionorminterface::clear","asgard\\orm\\commands\\automigratecommand::__construct","asgard\\orm\\commands\\generatemigrationcommand::__construct","asgard\\orm\\datamapper::__construct","asgard\\orm\\datamapper::load","asgard\\orm\\datamapper::orm","asgard\\orm\\datamapper::getprefix","asgard\\orm\\datamapper::destroyall","asgard\\orm\\datamapper::destroyone","asgard\\orm\\datamapper::destroy","asgard\\orm\\datamapper::getentitymanager","asgard\\orm\\datamapper::create","asgard\\orm\\datamapper::createvalidator","asgard\\orm\\datamapper::getvalidator","asgard\\orm\\datamapper::preparevalidator","asgard\\orm\\datamapper::valid","asgard\\orm\\datamapper::relationserrors","asgard\\orm\\datamapper::errors","asgard\\orm\\datamapper::save","asgard\\orm\\datamapper::related","asgard\\orm\\datamapper::getcollectionormfactory","asgard\\orm\\datamapper::getormfactory","asgard\\orm\\datamapper::getrelated","asgard\\orm\\datamapper::gettranslationtable","asgard\\orm\\datamapper::gettable","asgard\\orm\\datamapper::gettranslations","asgard\\orm\\datamapper::relations","asgard\\orm\\datamapper::relation","asgard\\orm\\datamapper::hasrelation","asgard\\orm\\datamapper::getdb","asgard\\orm\\datamapperinterface::load","asgard\\orm\\datamapperinterface::orm","asgard\\orm\\datamapperinterface::destroyall","asgard\\orm\\datamapperinterface::destroyone","asgard\\orm\\datamapperinterface::destroy","asgard\\orm\\datamapperinterface::getentitymanager","asgard\\orm\\datamapperinterface::create","asgard\\orm\\datamapperinterface::getvalidator","asgard\\orm\\datamapperinterface::preparevalidator","asgard\\orm\\datamapperinterface::valid","asgard\\orm\\datamapperinterface::errors","asgard\\orm\\datamapperinterface::save","asgard\\orm\\datamapperinterface::related","asgard\\orm\\datamapperinterface::getcollectionormfactory","asgard\\orm\\datamapperinterface::getormfactory","asgard\\orm\\datamapperinterface::getrelated","asgard\\orm\\datamapperinterface::gettranslationtable","asgard\\orm\\datamapperinterface::gettable","asgard\\orm\\datamapperinterface::gettranslations","asgard\\orm\\datamapperinterface::relations","asgard\\orm\\datamapperinterface::relation","asgard\\orm\\datamapperinterface::hasrelation","asgard\\orm\\datamapperinterface::getdb","asgard\\orm\\entityrelation::__construct","asgard\\orm\\entityrelation::ispolymorphic","asgard\\orm\\entityrelation::getname","asgard\\orm\\entityrelation::getlink","asgard\\orm\\entityrelation::getlinktype","asgard\\orm\\entityrelation::getlinka","asgard\\orm\\entityrelation::getlinkb","asgard\\orm\\entityrelation::getpositionfield","asgard\\orm\\entityrelation::getassociationtable","asgard\\orm\\entityrelation::gettargetdefinition","asgard\\orm\\entityrelation::settargetdefinition","asgard\\orm\\entityrelation::type","asgard\\orm\\entityrelation::reverse","asgard\\orm\\entityrelation::preparevalidator","asgard\\orm\\entityrelation::get","asgard\\orm\\entityrelation::set","asgard\\orm\\orm::__construct","asgard\\orm\\orm::addscope","asgard\\orm\\orm::removescope","asgard\\orm\\orm::resetscopes","asgard\\orm\\orm::getdefinition","asgard\\orm\\orm::__call","asgard\\orm\\orm::relation","asgard\\orm\\orm::getwhere","asgard\\orm\\orm::__get","asgard\\orm\\orm::load","asgard\\orm\\orm::reverse","asgard\\orm\\orm::last","asgard\\orm\\orm::jointoentity","asgard\\orm\\orm::setjointuresaliases","asgard\\orm\\orm::join","asgard\\orm\\orm::gettable","asgard\\orm\\orm::gettranslationtable","asgard\\orm\\orm::next","asgard\\orm\\orm::ids","asgard\\orm\\orm::values","asgard\\orm\\orm::first","asgard\\orm\\orm::applyscopes","asgard\\orm\\orm::getdal","asgard\\orm\\orm::addselect","asgard\\orm\\orm::_getdal","asgard\\orm\\orm::dalcallback","asgard\\orm\\orm::get","asgard\\orm\\orm::selectquery","asgard\\orm\\orm::paginate","asgard\\orm\\orm::getpaginator","asgard\\orm\\orm::with","asgard\\orm\\orm::where","asgard\\orm\\orm::having","asgard\\orm\\orm::offset","asgard\\orm\\orm::limit","asgard\\orm\\orm::orderby","asgard\\orm\\orm::delete","asgard\\orm\\orm::update","asgard\\orm\\orm::count","asgard\\orm\\orm::min","asgard\\orm\\orm::max","asgard\\orm\\orm::avg","asgard\\orm\\orm::sum","asgard\\orm\\orm::reset","asgard\\orm\\orm::rewind","asgard\\orm\\orm::current","asgard\\orm\\orm::key","asgard\\orm\\orm::valid","asgard\\orm\\orm::union","asgard\\orm\\ormbehavior::load","asgard\\orm\\ormbehavior::hookget","asgard\\orm\\ormbehavior::hookgettranslations","asgard\\orm\\ormbehavior::hookvalidation","asgard\\orm\\ormbehavior::staticcatchall","asgard\\orm\\ormbehavior::callcatchall","asgard\\orm\\ormbehavior::static_loadby","asgard\\orm\\ormbehavior::static_relations","asgard\\orm\\ormbehavior::static_relation","asgard\\orm\\ormbehavior::static_hasrelation","asgard\\orm\\ormbehavior::static_load","asgard\\orm\\ormbehavior::static_gettable","asgard\\orm\\ormbehavior::static_orm","asgard\\orm\\ormbehavior::static_destroyall","asgard\\orm\\ormbehavior::static_destroyone","asgard\\orm\\ormbehavior::static_create","asgard\\orm\\ormbehavior::call_save","asgard\\orm\\ormbehavior::call_destroy","asgard\\orm\\ormbehavior::call_related","asgard\\orm\\ormfactory::__construct","asgard\\orm\\ormfactory::create","asgard\\orm\\ormfactoryinterface::create","asgard\\orm\\orminterface::__call","asgard\\orm\\orminterface::__get","asgard\\orm\\orminterface::jointoentity","asgard\\orm\\orminterface::join","asgard\\orm\\orminterface::gettable","asgard\\orm\\orminterface::gettranslationtable","asgard\\orm\\orminterface::next","asgard\\orm\\orminterface::ids","asgard\\orm\\orminterface::values","asgard\\orm\\orminterface::first","asgard\\orm\\orminterface::getdal","asgard\\orm\\orminterface::get","asgard\\orm\\orminterface::selectquery","asgard\\orm\\orminterface::paginate","asgard\\orm\\orminterface::getpaginator","asgard\\orm\\orminterface::with","asgard\\orm\\orminterface::where","asgard\\orm\\orminterface::offset","asgard\\orm\\orminterface::limit","asgard\\orm\\orminterface::orderby","asgard\\orm\\orminterface::delete","asgard\\orm\\orminterface::update","asgard\\orm\\orminterface::count","asgard\\orm\\orminterface::min","asgard\\orm\\orminterface::max","asgard\\orm\\orminterface::avg","asgard\\orm\\orminterface::sum","asgard\\orm\\orminterface::reset","asgard\\orm\\ormmigrations::__construct","asgard\\orm\\ormmigrations::automigrate","asgard\\orm\\ormmigrations::generatemigration","asgard\\orm\\ormmigrations::outputphp","asgard\\orm\\polymorphiccollectionorm::__construct","asgard\\orm\\polymorphiccollectionorm::sync","asgard\\orm\\polymorphiccollectionorm::add","asgard\\orm\\polymorphiccollectionorm::create","asgard\\orm\\polymorphiccollectionorm::remove","asgard\\orm\\polymorphiccollectionorm::clear","asgard\\orm\\polymorphiccollectionorm::__call","asgard\\orm\\polymorphiccollectionorm::__get","asgard\\orm\\polymorphiccollectionorm::jointoentity","asgard\\orm\\polymorphiccollectionorm::join","asgard\\orm\\polymorphiccollectionorm::gettable","asgard\\orm\\polymorphiccollectionorm::gettranslationtable","asgard\\orm\\polymorphiccollectionorm::next","asgard\\orm\\polymorphiccollectionorm::ids","asgard\\orm\\polymorphiccollectionorm::values","asgard\\orm\\polymorphiccollectionorm::first","asgard\\orm\\polymorphiccollectionorm::all","asgard\\orm\\polymorphiccollectionorm::getdal","asgard\\orm\\polymorphiccollectionorm::get","asgard\\orm\\polymorphiccollectionorm::selectquery","asgard\\orm\\polymorphiccollectionorm::paginate","asgard\\orm\\polymorphiccollectionorm::getpaginator","asgard\\orm\\polymorphiccollectionorm::with","asgard\\orm\\polymorphiccollectionorm::where","asgard\\orm\\polymorphiccollectionorm::offset","asgard\\orm\\polymorphiccollectionorm::limit","asgard\\orm\\polymorphiccollectionorm::orderby","asgard\\orm\\polymorphiccollectionorm::delete","asgard\\orm\\polymorphiccollectionorm::update","asgard\\orm\\polymorphiccollectionorm::count","asgard\\orm\\polymorphiccollectionorm::min","asgard\\orm\\polymorphiccollectionorm::max","asgard\\orm\\polymorphiccollectionorm::avg","asgard\\orm\\polymorphiccollectionorm::sum","asgard\\orm\\polymorphiccollectionorm::reset","asgard\\orm\\polymorphiccollectionorm::rewind","asgard\\orm\\polymorphiccollectionorm::current","asgard\\orm\\polymorphiccollectionorm::key","asgard\\orm\\polymorphiccollectionorm::valid","asgard\\orm\\rules\\ormhaslessthan::__construct","asgard\\orm\\rules\\ormhaslessthan::validate","asgard\\orm\\rules\\ormhaslessthan::getmessage","asgard\\orm\\rules\\ormhasmorethan::__construct","asgard\\orm\\rules\\ormhasmorethan::validate","asgard\\orm\\rules\\ormhasmorethan::getmessage","asgard\\orm\\rules\\ormrequired::validate","asgard\\orm\\rules\\ormrequired::getmessage","asgard\\orm\\rules\\unique::validate","asgard\\orm\\rules\\unique::getmessage","asgard\\orm\\scope::__construct","asgard\\orm\\scope::process","asgard\\templating\\phptemplate::__construct","asgard\\templating\\phptemplate::getengine","asgard\\templating\\phptemplate::setengine","asgard\\templating\\phptemplate::settemplate","asgard\\templating\\phptemplate::gettemplate","asgard\\templating\\phptemplate::setparams","asgard\\templating\\phptemplate::getparams","asgard\\templating\\phptemplate::render","asgard\\templating\\phptemplate::renderfile","asgard\\templating\\templateenginefactoryinterface::create","asgard\\templating\\templateengineinterface::templateexists","asgard\\templating\\templateengineinterface::gettemplatefile","asgard\\templating\\templateengineinterface::createtemplate","asgard\\templating\\templateinterface::getengine","asgard\\templating\\templateinterface::setengine","asgard\\templating\\templateinterface::settemplate","asgard\\templating\\templateinterface::gettemplate","asgard\\templating\\templateinterface::setparams","asgard\\templating\\templateinterface::getparams","asgard\\templating\\templateinterface::render","asgard\\templating\\templateinterface::renderfile","asgard\\templating\\viewabletrait::fragment","asgard\\templating\\viewabletrait::sfragment","asgard\\templating\\viewabletrait::settemplateengine","asgard\\templating\\viewabletrait::gettemplateengine","asgard\\templating\\viewabletrait::addtemplatepathsolver","asgard\\tester\\bag::get","asgard\\tester\\bag::size","asgard\\tester\\bag::getaccessed","asgard\\tester\\browser::request","asgard\\tester\\commands\\coveragecommand::__construct","asgard\\tester\\commands\\generatetestscommand::__construct","asgard\\tester\\commands\\runcommand::__construct","asgard\\tester\\config::init","asgard\\tester\\config::each","asgard\\tester\\coverage::__construct","asgard\\tester\\coverage::count","asgard\\tester\\coverage::getcoverage","asgard\\tester\\coverage::add","asgard\\tester\\coverage::hasmorethan","asgard\\tester\\crawler::__construct","asgard\\tester\\crawler::getrequestid","asgard\\tester\\crawler::urlmerge","asgard\\tester\\crawler::belongsto","asgard\\tester\\crawler::getbase","asgard\\tester\\crawler::getpath","asgard\\tester\\crawler::buildurl","asgard\\tester\\crawler::preparerequests","asgard\\tester\\crawler::start","asgard\\tester\\crawler::addrequests","asgard\\tester\\crawler::isvalid","asgard\\tester\\crawler::match","asgard\\tester\\curlconverter::convert","asgard\\tester\\fixtures::__construct","asgard\\tester\\fixtures::generate","asgard\\tester\\form::__construct","asgard\\tester\\form::setaction","asgard\\tester\\form::getpath","asgard\\tester\\form::getrequest","asgard\\tester\\generator\\testsgenerator::__construct","asgard\\tester\\generator\\testsgenerator::generatetests","asgard\\tester\\generator\\testsgenerator::addtests","asgard\\tester\\results::add","asgard\\tester\\results::addcoverage","asgard\\tester\\results::display","asgard\\tester\\results::generate","asgard\\tester\\testbuilder::__construct","asgard\\tester\\testbuilder::getpath","asgard\\tester\\testbuilder::buildtests","asgard\\tester\\testbuilderinterface::buildtests","asgard\\tester\\testsgenerator::__construct","asgard\\tester\\testsgenerator::pregenerate","asgard\\tester\\testsgenerator::postgenerate","asgard\\translation\\commands\\exportcsvcommand::__construct","asgard\\translation\\commands\\exportyamlcommand::__construct","asgard\\translation\\extractor::getstrings","asgard\\translation\\extractor::parse","asgard\\translation\\extractor::parsedirectory","asgard\\translation\\extractor::addstrings","asgard\\translation\\extractor::getlistwithtranslation","asgard\\translation\\extractor::getlist","asgard\\translation\\translation::__construct","asgard\\translation\\translation::adddir","asgard\\translation\\translation::load","asgard\\translation\\translation::gettranslator","asgard\\validation\\inputbag::__construct","asgard\\validation\\inputbag::setparent","asgard\\validation\\inputbag::parent","asgard\\validation\\inputbag::hasattribute","asgard\\validation\\inputbag::attribute","asgard\\validation\\inputbag::attributes","asgard\\validation\\inputbag::input","asgard\\validation\\report::__construct","asgard\\validation\\report::__tostring","asgard\\validation\\report::error","asgard\\validation\\report::errors","asgard\\validation\\report::first","asgard\\validation\\report::failed","asgard\\validation\\report::attribute","asgard\\validation\\report::attributes","asgard\\validation\\report::haserror","asgard\\validation\\report::setruleserrors","asgard\\validation\\report::getruleserrors","asgard\\validation\\report::setself","asgard\\validation\\report::offsetset","asgard\\validation\\report::offsetexists","asgard\\validation\\report::offsetunset","asgard\\validation\\report::offsetget","asgard\\validation\\report::count","asgard\\validation\\report::valid","asgard\\validation\\report::merge","asgard\\validation\\rule::__construct","asgard\\validation\\rule::validate","asgard\\validation\\rule::formatparameters","asgard\\validation\\rule::getmessage","asgard\\validation\\rule::ishandlingeach","asgard\\validation\\rule::handleeach","asgard\\validation\\rule::setgroups","asgard\\validation\\rule::getgroups","asgard\\validation\\rule::belongstogroups","asgard\\validation\\rulesregistry::singleton","asgard\\validation\\rulesregistry::message","asgard\\validation\\rulesregistry::messages","asgard\\validation\\rulesregistry::getmessage","asgard\\validation\\rulesregistry::register","asgard\\validation\\rulesregistry::registernamespace","asgard\\validation\\rulesregistry::getrule","asgard\\validation\\rulesregistry::getrulename","asgard\\validation\\rulesregistryinterface::message","asgard\\validation\\rulesregistryinterface::messages","asgard\\validation\\rulesregistryinterface::getmessage","asgard\\validation\\rulesregistryinterface::register","asgard\\validation\\rulesregistryinterface::registernamespace","asgard\\validation\\rulesregistryinterface::getrule","asgard\\validation\\rulesregistryinterface::getrulename","asgard\\validation\\rules\\all::__construct","asgard\\validation\\rules\\all::validate","asgard\\validation\\rules\\all::getmessage","asgard\\validation\\rules\\allin::__construct","asgard\\validation\\rules\\allin::validate","asgard\\validation\\rules\\allin::getmessage","asgard\\validation\\rules\\any::__construct","asgard\\validation\\rules\\any::validate","asgard\\validation\\rules\\any::getmessage","asgard\\validation\\rules\\callback::__construct","asgard\\validation\\rules\\callback::validate","asgard\\validation\\rules\\callback::getmessage","asgard\\validation\\rules\\contains::__construct","asgard\\validation\\rules\\contains::validate","asgard\\validation\\rules\\contains::getmessage","asgard\\validation\\rules\\date::validate","asgard\\validation\\rules\\date::getmessage","asgard\\validation\\rules\\each::__construct","asgard\\validation\\rules\\each::validate","asgard\\validation\\rules\\each::getmessage","asgard\\validation\\rules\\email::validate","asgard\\validation\\rules\\email::getmessage","asgard\\validation\\rules\\equal::__construct","asgard\\validation\\rules\\equal::validate","asgard\\validation\\rules\\equal::getmessage","asgard\\validation\\rules\\haslessthan::__construct","asgard\\validation\\rules\\haslessthan::validate","asgard\\validation\\rules\\haslessthan::getmessage","asgard\\validation\\rules\\hasmorethan::__construct","asgard\\validation\\rules\\hasmorethan::validate","asgard\\validation\\rules\\hasmorethan::getmessage","asgard\\validation\\rules\\in::__construct","asgard\\validation\\rules\\in::validate","asgard\\validation\\rules\\in::getmessage","asgard\\validation\\rules\\isinstanceof::__construct","asgard\\validation\\rules\\isinstanceof::validate","asgard\\validation\\rules\\isinstanceof::getmessage","asgard\\validation\\rules\\isinteger::validate","asgard\\validation\\rules\\isinteger::getmessage","asgard\\validation\\rules\\length::__construct","asgard\\validation\\rules\\length::validate","asgard\\validation\\rules\\length::getmessage","asgard\\validation\\rules\\lengthbetween::__construct","asgard\\validation\\rules\\lengthbetween::validate","asgard\\validation\\rules\\lengthbetween::getmessage","asgard\\validation\\rules\\max::__construct","asgard\\validation\\rules\\max::validate","asgard\\validation\\rules\\max::getmessage","asgard\\validation\\rules\\maxlength::__construct","asgard\\validation\\rules\\maxlength::validate","asgard\\validation\\rules\\maxlength::getmessage","asgard\\validation\\rules\\min::__construct","asgard\\validation\\rules\\min::validate","asgard\\validation\\rules\\min::getmessage","asgard\\validation\\rules\\minlength::__construct","asgard\\validation\\rules\\minlength::validate","asgard\\validation\\rules\\minlength::getmessage","asgard\\validation\\rules\\regex::__construct","asgard\\validation\\rules\\regex::validate","asgard\\validation\\rules\\regex::getmessage","asgard\\validation\\rules\\same::__construct","asgard\\validation\\rules\\same::validate","asgard\\validation\\rules\\same::formatparameters","asgard\\validation\\rules\\same::getmessage","asgard\\validation\\validator::__construct","asgard\\validation\\validator::settranslator","asgard\\validation\\validator::gettranslator","asgard\\validation\\validator::__call","asgard\\validation\\validator::__callstatic","asgard\\validation\\validator::rule","asgard\\validation\\validator::isnull","asgard\\validation\\validator::rules","asgard\\validation\\validator::hasattribute","asgard\\validation\\validator::attribute","asgard\\validation\\validator::attributes","asgard\\validation\\validator::setdefaultmessage","asgard\\validation\\validator::getdefaultmessage","asgard\\validation\\validator::rulemessage","asgard\\validation\\validator::rulemessages","asgard\\validation\\validator::attributesmessages","asgard\\validation\\validator::getrulemessage","asgard\\validation\\validator::getrule","asgard\\validation\\validator::getregistry","asgard\\validation\\validator::setregistry","asgard\\validation\\validator::setinput","asgard\\validation\\validator::getinput","asgard\\validation\\validator::setparent","asgard\\validation\\validator::getparent","asgard\\validation\\validator::setname","asgard\\validation\\validator::assert","asgard\\validation\\validator::validrule","asgard\\validation\\validator::valid","asgard\\validation\\validator::errors","asgard\\validation\\validator::_errors","asgard\\validation\\validator::getname","asgard\\validation\\validator::formatparameters","asgard\\validation\\validator::set","asgard\\validation\\validator::get","asgard\\validation\\validator::setgroups","asgard\\validation\\validator::getgroups","asgard\\validation\\validator::belongstogroups","asgard\\validation\\validatorexception::__construct","asgard\\validation\\validatorexception::setreport","asgard\\validation\\validatorexception::report","asgard\\validation\\validatorfactory::__construct","asgard\\validation\\validatorfactory::create","asgard\\validation\\validatorfactoryinterface::create","asgard\\validation\\validatorinterface::settranslator","asgard\\validation\\validatorinterface::__callstatic","asgard\\validation\\validatorinterface::__call","asgard\\validation\\validatorinterface::hasattribute","asgard\\validation\\validatorinterface::attribute","asgard\\validation\\validatorinterface::attributes","asgard\\validation\\validatorinterface::rules","asgard\\validation\\validatorinterface::rule","asgard\\validation\\validatorinterface::isnull","asgard\\validation\\validatorinterface::gettranslator","asgard\\validation\\validatorinterface::setdefaultmessage","asgard\\validation\\validatorinterface::getdefaultmessage","asgard\\validation\\validatorinterface::rulemessage","asgard\\validation\\validatorinterface::rulemessages","asgard\\validation\\validatorinterface::attributesmessages","asgard\\validation\\validatorinterface::getrulemessage","asgard\\validation\\validatorinterface::getrule","asgard\\validation\\validatorinterface::getregistry","asgard\\validation\\validatorinterface::setregistry","asgard\\validation\\validatorinterface::setinput","asgard\\validation\\validatorinterface::getinput","asgard\\validation\\validatorinterface::setparent","asgard\\validation\\validatorinterface::setname","asgard\\validation\\validatorinterface::assert","asgard\\validation\\validatorinterface::validrule","asgard\\validation\\validatorinterface::valid","asgard\\validation\\validatorinterface::errors","asgard\\validation\\validatorinterface::_errors","asgard\\validation\\validatorinterface::getname","asgard\\validation\\validatorinterface::formatparameters","asgard\\validation\\validatorinterface::set","asgard\\validation\\validatorinterface::get","asgard\\validation\\validatorinterface::setgroups","asgard\\validation\\validatorinterface::getgroups","asgard\\validation\\validatorinterface::belongstogroups"],
        'info': [["Asgard","","Asgard.html","","",3],["Asgard\\Cache","","Asgard\/Cache.html","","",3],["Asgard\\Cache\\Commands","","Asgard\/Cache\/Commands.html","","",3],["Asgard\\Common","","Asgard\/Common.html","","",3],["Asgard\\Config","","Asgard\/Config.html","","",3],["Asgard\\Config\\Commands","","Asgard\/Config\/Commands.html","","",3],["Asgard\\Console","","Asgard\/Console.html","","",3],["Asgard\\Container","","Asgard\/Container.html","","",3],["Asgard\\Container\\Commands","","Asgard\/Container\/Commands.html","","",3],["Asgard\\Core","","Asgard\/Core.html","","",3],["Asgard\\Core\\Commands","","Asgard\/Core\/Commands.html","","",3],["Asgard\\Db","","Asgard\/Db.html","","",3],["Asgard\\Db\\Commands","","Asgard\/Db\/Commands.html","","",3],["Asgard\\Debug","","Asgard\/Debug.html","","",3],["Asgard\\Email","","Asgard\/Email.html","","",3],["Asgard\\Entity","","Asgard\/Entity.html","","",3],["Asgard\\Entity\\Properties","","Asgard\/Entity\/Properties.html","","",3],["Asgard\\Entityform","","Asgard\/Entityform.html","","",3],["Asgard\\File","","Asgard\/File.html","","",3],["Asgard\\File\\Rules","","Asgard\/File\/Rules.html","","",3],["Asgard\\Form","","Asgard\/Form.html","","",3],["Asgard\\Form\\Fields","","Asgard\/Form\/Fields.html","","",3],["Asgard\\Form\\Widgets","","Asgard\/Form\/Widgets.html","","",3],["Asgard\\Generator","","Asgard\/Generator.html","","",3],["Asgard\\Generator\\Commands","","Asgard\/Generator\/Commands.html","","",3],["Asgard\\Hook","","Asgard\/Hook.html","","",3],["Asgard\\Hook\\Annotations","","Asgard\/Hook\/Annotations.html","","",3],["Asgard\\Http","","Asgard\/Http.html","","",3],["Asgard\\Http\\Annotations","","Asgard\/Http\/Annotations.html","","",3],["Asgard\\Http\\Browser","","Asgard\/Http\/Browser.html","","",3],["Asgard\\Http\\Commands","","Asgard\/Http\/Commands.html","","",3],["Asgard\\Http\\Exceptions","","Asgard\/Http\/Exceptions.html","","",3],["Asgard\\Http\\Filters","","Asgard\/Http\/Filters.html","","",3],["Asgard\\Http\\Utils","","Asgard\/Http\/Utils.html","","",3],["Asgard\\Migration","","Asgard\/Migration.html","","",3],["Asgard\\Migration\\Commands","","Asgard\/Migration\/Commands.html","","",3],["Asgard\\Orm","","Asgard\/Orm.html","","",3],["Asgard\\Orm\\Commands","","Asgard\/Orm\/Commands.html","","",3],["Asgard\\Orm\\Rules","","Asgard\/Orm\/Rules.html","","",3],["Asgard\\Templating","","Asgard\/Templating.html","","",3],["Asgard\\Tester","","Asgard\/Tester.html","","",3],["Asgard\\Tester\\Commands","","Asgard\/Tester\/Commands.html","","",3],["Asgard\\Tester\\Generator","","Asgard\/Tester\/Generator.html","","",3],["Asgard\\Translation","","Asgard\/Translation.html","","",3],["Asgard\\Translation\\Commands","","Asgard\/Translation\/Commands.html","","",3],["Asgard\\Validation","","Asgard\/Validation.html","","",3],["Asgard\\Validation\\Rules","","Asgard\/Validation\/Rules.html","","",3],["Cache","Asgard\\Cache","Asgard\/Cache\/Cache.html","","Cache wrapper.",1],["CacheInterface","Asgard\\Cache","Asgard\/Cache\/CacheInterface.html","","Cache wrapper.",1],["ClearCommand","Asgard\\Cache\\Commands","Asgard\/Cache\/Commands\/ClearCommand.html"," < Command","Clear cache command.",1],["NullCache","Asgard\\Cache","Asgard\/Cache\/NullCache.html","","Fake cache class.",1],["ArrayUtils","Asgard\\Common","Asgard\/Common\/ArrayUtils.html","","Array utils.",1],["Bag","Asgard\\Common","Asgard\/Common\/Bag.html","","Bag to manipulate a set of data.",1],["BagInterface","Asgard\\Common","Asgard\/Common\/BagInterface.html","","Bag to manipulate a set of data.",1],["Date","Asgard\\Common","Asgard\/Common\/Date.html"," < Datetime","Date.",1],["Datetime","Asgard\\Common","Asgard\/Common\/Datetime.html"," < DateTime","Datetime.",1],["DatetimeInterface","Asgard\\Common","Asgard\/Common\/DatetimeInterface.html","","Date.",1],["Intl","Asgard\\Common","Asgard\/Common\/Intl.html","","",1],["Paginator","Asgard\\Common","Asgard\/Common\/Paginator.html","","Paginator.",1],["PaginatorFactory","Asgard\\Common","Asgard\/Common\/PaginatorFactory.html","","Paginator factory.",1],["PaginatorFactoryInterface","Asgard\\Common","Asgard\/Common\/PaginatorFactoryInterface.html","","Paginator factory interface.",1],["PaginatorInterface","Asgard\\Common","Asgard\/Common\/PaginatorInterface.html","","Paginator.",1],["Session","Asgard\\Common","Asgard\/Common\/Session.html","","Session.",1],["Time","Asgard\\Common","Asgard\/Common\/Time.html"," < Datetime","Time.",1],["Tools","Asgard\\Common","Asgard\/Common\/Tools.html","","Random util functions.",1],["Zip","Asgard\\Common","Asgard\/Common\/Zip.html","","Class to zip files.",1],["InitCommand","Asgard\\Config\\Commands","Asgard\/Config\/Commands\/InitCommand.html"," < Command","Init config command.",1],["Config","Asgard\\Config","Asgard\/Config\/Config.html"," < Bag","Configuration bag.",1],["ConfigInterface","Asgard\\Config","Asgard\/Config\/ConfigInterface.html","","Configuration bag.",1],["Application","Asgard\\Console","Asgard\/Console\/Application.html"," < Application","The Asgard Console Application",1],["Command","Asgard\\Console","Asgard\/Console\/Command.html"," < Command","Command parent class.",1],["ListCommand","Asgard\\Container\\Commands","Asgard\/Container\/Commands\/ListCommand.html"," < Command","List available services command.",1],["Container","Asgard\\Container","Asgard\/Container\/Container.html","","Services container.",1],["ContainerAwareTrait","Asgard\\Container","Asgard\/Container\/ContainerAwareTrait.html","","Trait for classes using a container.",1],["ContainerInterface","Asgard\\Container","Asgard\/Container\/ContainerInterface.html","","Services container.",1],["Facade","Asgard\\Container","Asgard\/Container\/Facade.html","","Parent for all facades.",1],["Factory","Asgard\\Container","Asgard\/Container\/Factory.html","","Provides an API to generate instances.",1],["Bundle","Asgard\\Core","Asgard\/Core\/Bundle.html"," < BundleLoader","Asgard core bundle.",1],["BundleLoader","Asgard\\Core","Asgard\/Core\/BundleLoader.html","","Bundles parent class.",1],["CompileCommand","Asgard\\Core\\Commands","Asgard\/Core\/Commands\/CompileCommand.html"," < Command","Compile command.",1],["ComposerApplication","Asgard\\Core\\Commands","Asgard\/Core\/Commands\/ComposerApplication.html"," < Application","",1],["ConsoleCommand","Asgard\\Core\\Commands","Asgard\/Core\/Commands\/ConsoleCommand.html"," < Command","Console command.",1],["DeployCommand","Asgard\\Core\\Commands","Asgard\/Core\/Commands\/DeployCommand.html"," < Command","Deploy command.",1],["DownCommand","Asgard\\Core\\Commands","Asgard\/Core\/Commands\/DownCommand.html"," < Command","Maintenance down command.",1],["ExecuteCommand","Asgard\\Core\\Commands","Asgard\/Core\/Commands\/ExecuteCommand.html"," < Command","Execute command.",1],["InstallCommand","Asgard\\Core\\Commands","Asgard\/Core\/Commands\/InstallCommand.html"," < Command","Install a module command.",1],["PublishCommand","Asgard\\Core\\Commands","Asgard\/Core\/Commands\/PublishCommand.html"," < Command","Publish command.",1],["ServerCommand","Asgard\\Core\\Commands","Asgard\/Core\/Commands\/ServerCommand.html"," < Command","PHP built-in server command.",1],["ShowEnvironmentCommand","Asgard\\Core\\Commands","Asgard\/Core\/Commands\/ShowEnvironmentCommand.html"," < Command","Environment command.",1],["SwitchEnvironmentCommand","Asgard\\Core\\Commands","Asgard\/Core\/Commands\/SwitchEnvironmentCommand.html"," < Command","Environment command.",1],["UpCommand","Asgard\\Core\\Commands","Asgard\/Core\/Commands\/UpCommand.html"," < Command","Maintenance up command.",1],["VersionCommand","Asgard\\Core\\Commands","Asgard\/Core\/Commands\/VersionCommand.html"," < Command","Show version command.",1],["Kernel","Asgard\\Core","Asgard\/Core\/Kernel.html","","Asgard kernel class.",1],["Publisher","Asgard\\Core","Asgard\/Core\/Publisher.html","","Publish bundle assets.",1],["CreateCommand","Asgard\\Db\\Commands","Asgard\/Db\/Commands\/CreateCommand.html"," < Command","Create the database command.",1],["EmptyCommand","Asgard\\Db\\Commands","Asgard\/Db\/Commands\/EmptyCommand.html"," < Command","Empty the tables command.",1],["InitCommand","Asgard\\Db\\Commands","Asgard\/Db\/Commands\/InitCommand.html"," < Command","Init the database command.",1],["DAL","Asgard\\Db","Asgard\/Db\/DAL.html","","Database Abstraction Layer.",1],["DB","Asgard\\Db","Asgard\/Db\/DB.html","","Database.",1],["DBException","Asgard\\Db","Asgard\/Db\/DBException.html"," < PDOException","Database Exception.",1],["DBInterface","Asgard\\Db","Asgard\/Db\/DBInterface.html","","Database.",1],["MySQL","Asgard\\Db","Asgard\/Db\/MySQL.html","","Util to import and dump mysql files.",1],["Query","Asgard\\Db","Asgard\/Db\/Query.html","","Query objects.",1],["Raw","Asgard\\Db","Asgard\/Db\/Raw.html","","",1],["Schema","Asgard\\Db","Asgard\/Db\/Schema.html","","Schema builder.",1],["SchemaInterface","Asgard\\Db","Asgard\/Db\/SchemaInterface.html","","",1],["SchemaTable","Asgard\\Db","Asgard\/Db\/SchemaTable.html","","Doctrine table adapter.",1],["Debug","Asgard\\Debug","Asgard\/Debug\/Debug.html","","Debugging utils.",1],["ErrorHandler","Asgard\\Debug","Asgard\/Debug\/ErrorHandler.html","","Error handler.",1],["FatalErrorException","Asgard\\Debug","Asgard\/Debug\/FatalErrorException.html"," < ErrorException","For PHP fatal errors only.",1],["PSRException","Asgard\\Debug","Asgard\/Debug\/PSRException.html"," < Exception","Exception for PSR-3.",1],["DriverInterface","Asgard\\Email","Asgard\/Email\/DriverInterface.html","","Interface for email drivers.",1],["FakeEmail","Asgard\\Email","Asgard\/Email\/FakeEmail.html","","A fake email sender.",1],["SwiftEmail","Asgard\\Email","Asgard\/Email\/SwiftEmail.html","","Send email through Swift.",1],["SwiftMessage","Asgard\\Email","Asgard\/Email\/SwiftMessage.html"," < Swift_Message","Extended SwiftMessage class.",1],["Behavior","Asgard\\Entity","Asgard\/Entity\/Behavior.html","","Entity Behavior.",1],["Definition","Asgard\\Entity","Asgard\/Entity\/Definition.html","","Entity definition.",1],["Entity","Asgard\\Entity","Asgard\/Entity\/Entity.html","","Entity.",1],["EntityException","Asgard\\Entity","Asgard\/Entity\/EntityException.html"," < ValidatorException","Exception for entity errors.",1],["EntityManager","Asgard\\Entity","Asgard\/Entity\/EntityManager.html","","Manage entities.",1],["EntityManagerInterface","Asgard\\Entity","Asgard\/Entity\/EntityManagerInterface.html","","Manage entities.",1],["File","Asgard\\Entity","Asgard\/Entity\/File.html"," < File","Entity file.",1],["ManyCollection","Asgard\\Entity","Asgard\/Entity\/ManyCollection.html","","Collection of many elements.",1],["PersistenceBehavior","Asgard\\Entity","Asgard\/Entity\/PersistenceBehavior.html","","Persistence behavior.",1],["BooleanProperty","Asgard\\Entity\\Properties","Asgard\/Entity\/Properties\/BooleanProperty.html"," < Property","Boolean Property.",1],["CountryProperty","Asgard\\Entity\\Properties","Asgard\/Entity\/Properties\/CountryProperty.html"," < Property","Country Property.",1],["DateProperty","Asgard\\Entity\\Properties","Asgard\/Entity\/Properties\/DateProperty.html"," < Property","Date Property.",1],["DatetimeProperty","Asgard\\Entity\\Properties","Asgard\/Entity\/Properties\/DatetimeProperty.html"," < Property","Datetime Property.",1],["DecimalProperty","Asgard\\Entity\\Properties","Asgard\/Entity\/Properties\/DecimalProperty.html"," < Property","Decimal Property.",1],["EmailProperty","Asgard\\Entity\\Properties","Asgard\/Entity\/Properties\/EmailProperty.html"," < TextProperty","Email Property.",1],["EntityProperty","Asgard\\Entity\\Properties","Asgard\/Entity\/Properties\/EntityProperty.html"," < Property","Entity Property.",1],["FileProperty","Asgard\\Entity\\Properties","Asgard\/Entity\/Properties\/FileProperty.html"," < Property","File Property.",1],["IntegerProperty","Asgard\\Entity\\Properties","Asgard\/Entity\/Properties\/IntegerProperty.html"," < Property","Integer Property.",1],["PasswordProperty","Asgard\\Entity\\Properties","Asgard\/Entity\/Properties\/PasswordProperty.html"," < Property","Password Property.",1],["StringProperty","Asgard\\Entity\\Properties","Asgard\/Entity\/Properties\/StringProperty.html"," < Property","String Property.",1],["TextProperty","Asgard\\Entity\\Properties","Asgard\/Entity\/Properties\/TextProperty.html"," < Property","Text Property.",1],["Property","Asgard\\Entity","Asgard\/Entity\/Property.html","","Entity definition property.",1],["RelationsBehavior","Asgard\\Entity","Asgard\/Entity\/RelationsBehavior.html","","Behavior to handle relations.",1],["Serializer","Asgard\\Entity","Asgard\/Entity\/Serializer.html","","",1],["EntityFieldSolver","Asgard\\Entityform","Asgard\/Entityform\/EntityFieldSolver.html","","Solve form fields from entity properties.",1],["EntityFieldSolverInterface","Asgard\\Entityform","Asgard\/Entityform\/EntityFieldSolverInterface.html","","Solve form fields from entity properties.",1],["EntityForm","Asgard\\Entityform","Asgard\/Entityform\/EntityForm.html"," < Form","Create form from an entity.",1],["EntityFormInterface","Asgard\\Entityform","Asgard\/Entityform\/EntityFormInterface.html","","Create form from an entity.",1],["File","Asgard\\File","Asgard\/File\/File.html","","File instance.",1],["FileSystem","Asgard\\File","Asgard\/File\/FileSystem.html","","File system.",1],["Extension","Asgard\\File\\Rules","Asgard\/File\/Rules\/Extension.html"," < Rule","Check that the file's extension is allowed.",1],["Image","Asgard\\File\\Rules","Asgard\/File\/Rules\/Image.html"," < Rule","Check that the file is an image.",1],["DynamicGroup","Asgard\\Form","Asgard\/Form\/DynamicGroup.html"," < Group","Group with undefined number of fields.",1],["Field","Asgard\\Form","Asgard\/Form\/Field.html","","Field.",1],["BooleanField","Asgard\\Form\\Fields","Asgard\/Form\/Fields\/BooleanField.html"," < Field","Boolean field.",1],["CSRFField","Asgard\\Form\\Fields","Asgard\/Form\/Fields\/CSRFField.html"," < HiddenField","CSRF field.",1],["CountryField","Asgard\\Form\\Fields","Asgard\/Form\/Fields\/CountryField.html"," < SelectField","Country field.",1],["DateField","Asgard\\Form\\Fields","Asgard\/Form\/Fields\/DateField.html"," < Field","Date field.",1],["DatetimeField","Asgard\\Form\\Fields","Asgard\/Form\/Fields\/DatetimeField.html"," < Field","Datetime field.",1],["DayField","Asgard\\Form\\Fields","Asgard\/Form\/Fields\/DayField.html"," < SelectField","Day field.",1],["FileField","Asgard\\Form\\Fields","Asgard\/Form\/Fields\/FileField.html"," < Field","File field.",1],["HiddenField","Asgard\\Form\\Fields","Asgard\/Form\/Fields\/HiddenField.html"," < Field","Hidden field.",1],["MonthField","Asgard\\Form\\Fields","Asgard\/Form\/Fields\/MonthField.html"," < SelectField","Month field.",1],["MultipleSelectField","Asgard\\Form\\Fields","Asgard\/Form\/Fields\/MultipleSelectField.html"," < Field","Multiple select field.",1],["SelectField","Asgard\\Form\\Fields","Asgard\/Form\/Fields\/SelectField.html"," < Field","Select field.",1],["TextField","Asgard\\Form\\Fields","Asgard\/Form\/Fields\/TextField.html"," < Field","Text field.",1],["TimeField","Asgard\\Form\\Fields","Asgard\/Form\/Fields\/TimeField.html"," < Field","Time field.",1],["YearField","Asgard\\Form\\Fields","Asgard\/Form\/Fields\/YearField.html"," < SelectField","Year field.",1],["Form","Asgard\\Form","Asgard\/Form\/Form.html"," < Group","Form.",1],["FormException","Asgard\\Form","Asgard\/Form\/FormException.html"," < ValidatorException","Exception for form errors.",1],["FormInterface","Asgard\\Form","Asgard\/Form\/FormInterface.html","","Form.",1],["Group","Asgard\\Form","Asgard\/Form\/Group.html","","Group of fieldsor sub-groups.",1],["GroupInterface","Asgard\\Form","Asgard\/Form\/GroupInterface.html","","Group of fieldsor sub-groups.",1],["HTMLHelper","Asgard\\Form","Asgard\/Form\/HTMLHelper.html","","Helper to create HTML tags.",1],["Widget","Asgard\\Form","Asgard\/Form\/Widget.html","","Widget.",1],["WidgetFactoryInterface","Asgard\\Form","Asgard\/Form\/WidgetFactoryInterface.html","","",1],["WidgetManager","Asgard\\Form","Asgard\/Form\/WidgetManager.html","","Manage widgets available for form fields.",1],["WidgetManagerInterface","Asgard\\Form","Asgard\/Form\/WidgetManagerInterface.html","","Manage widgets available for form fields.",1],["CallbackWidget","Asgard\\Form\\Widgets","Asgard\/Form\/Widgets\/CallbackWidget.html"," < Widget","Callback widget.",1],["CheckboxWidget","Asgard\\Form\\Widgets","Asgard\/Form\/Widgets\/CheckboxWidget.html"," < Widget","Checkbox widget.",1],["CheckboxesWidget","Asgard\\Form\\Widgets","Asgard\/Form\/Widgets\/CheckboxesWidget.html"," < Widget","Checkboxes widget.",1],["DateWidget","Asgard\\Form\\Widgets","Asgard\/Form\/Widgets\/DateWidget.html"," < Widget","Dage widget.",1],["DatetimeWidget","Asgard\\Form\\Widgets","Asgard\/Form\/Widgets\/DatetimeWidget.html"," < Widget","Datetime widget.",1],["FileWidget","Asgard\\Form\\Widgets","Asgard\/Form\/Widgets\/FileWidget.html"," < Widget","File widget.",1],["HiddenWidget","Asgard\\Form\\Widgets","Asgard\/Form\/Widgets\/HiddenWidget.html"," < Widget","Hidden widget.",1],["MultipleselectWidget","Asgard\\Form\\Widgets","Asgard\/Form\/Widgets\/MultipleselectWidget.html"," < Widget","Multiple select widget.",1],["PasswordWidget","Asgard\\Form\\Widgets","Asgard\/Form\/Widgets\/PasswordWidget.html"," < Widget","Password widget.",1],["RadioWidget","Asgard\\Form\\Widgets","Asgard\/Form\/Widgets\/RadioWidget.html"," < Widget","Radio widget.",1],["RadiosWidget","Asgard\\Form\\Widgets","Asgard\/Form\/Widgets\/RadiosWidget.html"," < Widget","Radios widget.",1],["SelectWidget","Asgard\\Form\\Widgets","Asgard\/Form\/Widgets\/SelectWidget.html"," < Widget","Select widget.",1],["SubmitWidget","Asgard\\Form\\Widgets","Asgard\/Form\/Widgets\/SubmitWidget.html"," < Widget","Submit widget.",1],["TextWidget","Asgard\\Form\\Widgets","Asgard\/Form\/Widgets\/TextWidget.html"," < Widget","Text widget.",1],["TextareaWidget","Asgard\\Form\\Widgets","Asgard\/Form\/Widgets\/TextareaWidget.html"," < Widget","Textarea widget.",1],["TimeWidget","Asgard\\Form\\Widgets","Asgard\/Form\/Widgets\/TimeWidget.html"," < Widget","Time widget.",1],["AbstractGenerator","Asgard\\Generator","Asgard\/Generator\/AbstractGenerator.html","","",1],["GenerateCommand","Asgard\\Generator\\Commands","Asgard\/Generator\/Commands\/GenerateCommand.html"," < Command","Generate command.",1],["DefaultGenerator","Asgard\\Generator","Asgard\/Generator\/DefaultGenerator.html"," < AbstractGenerator","",1],["GeneratorEngine","Asgard\\Generator","Asgard\/Generator\/GeneratorEngine.html","","Generator.",1],["GeneratorEngineInterface","Asgard\\Generator","Asgard\/Generator\/GeneratorEngineInterface.html","","",1],["AnnotationReader","Asgard\\Hook","Asgard\/Hook\/AnnotationReader.html","","Annotations reader.",1],["Hook","Asgard\\Hook\\Annotations","Asgard\/Hook\/Annotations\/Hook.html","","",1],["Chain","Asgard\\Hook","Asgard\/Hook\/Chain.html","","Chain of hooks to be executed.",1],["HookContainer","Asgard\\Hook","Asgard\/Hook\/HookContainer.html","","Hooks container.",1],["HookManager","Asgard\\Hook","Asgard\/Hook\/HookManager.html","","The hooks manager.",1],["HookManagerInterface","Asgard\\Hook","Asgard\/Hook\/HookManagerInterface.html","","Hooks Manager.",1],["HookableTrait","Asgard\\Hook","Asgard\/Hook\/HookableTrait.html","","Extend \"Hookable\" to make hookable instances.",1],["AnnotationReader","Asgard\\Http","Asgard\/Http\/AnnotationReader.html","","Annotations reader.",1],["Prefix","Asgard\\Http\\Annotations","Asgard\/Http\/Annotations\/Prefix.html","","",1],["Route","Asgard\\Http\\Annotations","Asgard\/Http\/Annotations\/Route.html","","",1],["Browser","Asgard\\Http\\Browser","Asgard\/Http\/Browser\/Browser.html","","Browser.",1],["BrowserInterface","Asgard\\Http\\Browser","Asgard\/Http\/Browser\/BrowserInterface.html","","Browser.",1],["Field","Asgard\\Http\\Browser","Asgard\/Http\/Browser\/Field.html","","Form field.",1],["FormParser","Asgard\\Http\\Browser","Asgard\/Http\/Browser\/FormParser.html","","Form parser.",1],["BrowserCommand","Asgard\\Http\\Commands","Asgard\/Http\/Commands\/BrowserCommand.html"," < Command","Browser command.",1],["RoutesCommand","Asgard\\Http\\Commands","Asgard\/Http\/Commands\/RoutesCommand.html"," < Command","Routes command.",1],["Controller","Asgard\\Http","Asgard\/Http\/Controller.html","","Controller parent class.",1],["ControllerException","Asgard\\Http","Asgard\/Http\/ControllerException.html"," < PSRException","Controller exception.",1],["CookieManager","Asgard\\Http","Asgard\/Http\/CookieManager.html","","To manage cookies.",1],["NotFoundException","Asgard\\Http\\Exceptions","Asgard\/Http\/Exceptions\/NotFoundException.html"," < ControllerException","NotFound (404) exceptions.",1],["Filter","Asgard\\Http","Asgard\/Http\/Filter.html","","Action filter.",1],["PageLayout","Asgard\\Http\\Filters","Asgard\/Http\/Filters\/PageLayout.html"," < Filter","Page layout filter.",1],["HttpFile","Asgard\\Http","Asgard\/Http\/HttpFile.html"," < File","Http file.",1],["HttpKernel","Asgard\\Http","Asgard\/Http\/HttpKernel.html","","HTTP Kernel.",1],["HttpKernelInterface","Asgard\\Http","Asgard\/Http\/HttpKernelInterface.html","","HTTP Kernel.",1],["LambdaController","Asgard\\Http","Asgard\/Http\/LambdaController.html"," < Controller","Controller for actions without a controller.",1],["Request","Asgard\\Http","Asgard\/Http\/Request.html","","Request class.",1],["Resolver","Asgard\\Http","Asgard\/Http\/Resolver.html","","Resolve routes to actions.",1],["ResolverInterface","Asgard\\Http","Asgard\/Http\/ResolverInterface.html","","Resolve routes to actions.",1],["Response","Asgard\\Http","Asgard\/Http\/Response.html","","Response.",1],["Route","Asgard\\Http","Asgard\/Http\/Route.html","","Route.",1],["Test","Asgard\\Http","Asgard\/Http\/Test.html"," < PHPUnit_Framework_TestCase","Test parent class.",1],["URL","Asgard\\Http","Asgard\/Http\/URL.html","","URL class.",1],["URLInterface","Asgard\\Http","Asgard\/Http\/URLInterface.html","","URL class.",1],["Flash","Asgard\\Http\\Utils","Asgard\/Http\/Utils\/Flash.html","","Store messages in the container and display them on",1],["HTML","Asgard\\Http\\Utils","Asgard\/Http\/Utils\/HTML.html","","HTML helper.",1],["HTMLInterface","Asgard\\Http\\Utils","Asgard\/Http\/Utils\/HTMLInterface.html","","HTML helper.",1],["AddCommand","Asgard\\Migration\\Commands","Asgard\/Migration\/Commands\/AddCommand.html"," < Command","Add a migration command.",1],["CreateCommand","Asgard\\Migration\\Commands","Asgard\/Migration\/Commands\/CreateCommand.html"," < Command","Create a migration command.",1],["ListCommand","Asgard\\Migration\\Commands","Asgard\/Migration\/Commands\/ListCommand.html"," < Command","List migrations command.",1],["MigrateCommand","Asgard\\Migration\\Commands","Asgard\/Migration\/Commands\/MigrateCommand.html"," < Command","Migrate command.",1],["MigrateOneCommand","Asgard\\Migration\\Commands","Asgard\/Migration\/Commands\/MigrateOneCommand.html"," < Command","Migrate a migration command.",1],["RefreshCommand","Asgard\\Migration\\Commands","Asgard\/Migration\/Commands\/RefreshCommand.html"," < Command","Refresh migrations command.",1],["RemoveCommand","Asgard\\Migration\\Commands","Asgard\/Migration\/Commands\/RemoveCommand.html"," < Command","Remove a migration command.",1],["RollbackCommand","Asgard\\Migration\\Commands","Asgard\/Migration\/Commands\/RollbackCommand.html"," < Command","Rollback command.",1],["UnmigrateCommand","Asgard\\Migration\\Commands","Asgard\/Migration\/Commands\/UnmigrateCommand.html"," < Command","Unmigrate command.",1],["DBMigration","Asgard\\Migration","Asgard\/Migration\/DBMigration.html"," < Migration","Migration class for database",1],["Migration","Asgard\\Migration","Asgard\/Migration\/Migration.html","","Migration class",1],["MigrationManager","Asgard\\Migration","Asgard\/Migration\/MigrationManager.html","","Manage the migrations.",1],["MigrationManagerInterface","Asgard\\Migration","Asgard\/Migration\/MigrationManagerInterface.html","","Manage the migrations.",1],["Tracker","Asgard\\Migration","Asgard\/Migration\/Tracker.html","","Tracker class to track migrations statuses.",1],["CollectionORM","Asgard\\Orm","Asgard\/Orm\/CollectionORM.html"," < ORM","ORM for related entities.",1],["CollectionORMFactory","Asgard\\Orm","Asgard\/Orm\/CollectionORMFactory.html","","CollectionORM factory.",1],["CollectionORMFactoryInterface","Asgard\\Orm","Asgard\/Orm\/CollectionORMFactoryInterface.html","","CollectionORM factory interface.",1],["CollectionORMInterface","Asgard\\Orm","Asgard\/Orm\/CollectionORMInterface.html","","ORM for related entities.",1],["AutoMigrateCommand","Asgard\\Orm\\Commands","Asgard\/Orm\/Commands\/AutoMigrateCommand.html"," < Command","Automigrate command.",1],["GenerateMigrationCommand","Asgard\\Orm\\Commands","Asgard\/Orm\/Commands\/GenerateMigrationCommand.html"," < Command","Generate migration command.",1],["DataMapper","Asgard\\Orm","Asgard\/Orm\/DataMapper.html","","Handle database storage of entities.",1],["DataMapperInterface","Asgard\\Orm","Asgard\/Orm\/DataMapperInterface.html","","Handle database storage of entities.",1],["EntityRelation","Asgard\\Orm","Asgard\/Orm\/EntityRelation.html","","Define relation between entities.",1],["ORM","Asgard\\Orm","Asgard\/Orm\/ORM.html","","Helps performing operations like selection, deletion",1],["ORMBehavior","Asgard\\Orm","Asgard\/Orm\/ORMBehavior.html"," < Behavior","ORM Behavior.",1],["ORMFactory","Asgard\\Orm","Asgard\/Orm\/ORMFactory.html","","ORM factory.",1],["ORMFactoryInterface","Asgard\\Orm","Asgard\/Orm\/ORMFactoryInterface.html","","ORM factory interface.",1],["ORMInterface","Asgard\\Orm","Asgard\/Orm\/ORMInterface.html","","Helps performing operations like selection, deletion",1],["ORMMigrations","Asgard\\Orm","Asgard\/Orm\/ORMMigrations.html","","Handle the migrations for the ORM.",1],["PolymorphicCollectionORM","Asgard\\Orm","Asgard\/Orm\/PolymorphicCollectionORM.html","","ORM for related entities.",1],["Ormhaslessthan","Asgard\\Orm\\Rules","Asgard\/Orm\/Rules\/Ormhaslessthan.html"," < Rule","Verify that there are less than x entities.",1],["Ormhasmorethan","Asgard\\Orm\\Rules","Asgard\/Orm\/Rules\/Ormhasmorethan.html"," < Rule","Verify that there more less than x entities.",1],["Ormrequired","Asgard\\Orm\\Rules","Asgard\/Orm\/Rules\/Ormrequired.html"," < Rule","Verify that there is at least 1 entity.",1],["Unique","Asgard\\Orm\\Rules","Asgard\/Orm\/Rules\/Unique.html"," < Rule","Verify that there is no other entity with the same",1],["Scope","Asgard\\Orm","Asgard\/Orm\/Scope.html","","",1],["PHPTemplate","Asgard\\Templating","Asgard\/Templating\/PHPTemplate.html","","Template using PHP for formatting",1],["TemplateEngineFactoryInterface","Asgard\\Templating","Asgard\/Templating\/TemplateEngineFactoryInterface.html","","Template engine factory interface.",1],["TemplateEngineInterface","Asgard\\Templating","Asgard\/Templating\/TemplateEngineInterface.html","","Interface for template engines",1],["TemplateInterface","Asgard\\Templating","Asgard\/Templating\/TemplateInterface.html","","Interface for templates",1],["ViewableTrait","Asgard\\Templating","Asgard\/Templating\/ViewableTrait.html","","Trait for classes using templates.",1],["Bag","Asgard\\Tester","Asgard\/Tester\/Bag.html"," < Bag","",1],["Browser","Asgard\\Tester","Asgard\/Tester\/Browser.html"," < Browser","",1],["CoverageCommand","Asgard\\Tester\\Commands","Asgard\/Tester\/Commands\/CoverageCommand.html"," < Command","Tester curl command.",1],["CurlCommand","Asgard\\Tester\\Commands","Asgard\/Tester\/Commands\/CurlCommand.html"," < Command","Tester curl command.",1],["GenerateTestsCommand","Asgard\\Tester\\Commands","Asgard\/Tester\/Commands\/GenerateTestsCommand.html"," < Command","Generate tests command.",1],["RunCommand","Asgard\\Tester\\Commands","Asgard\/Tester\/Commands\/RunCommand.html"," < Command","Run tester command.",1],["Config","Asgard\\Tester","Asgard\/Tester\/Config.html","","",1],["Coverage","Asgard\\Tester","Asgard\/Tester\/Coverage.html","","",1],["Crawler","Asgard\\Tester","Asgard\/Tester\/Crawler.html","","",1],["CurlConverter","Asgard\\Tester","Asgard\/Tester\/CurlConverter.html","","",1],["Fixtures","Asgard\\Tester","Asgard\/Tester\/Fixtures.html","","",1],["Form","Asgard\\Tester","Asgard\/Tester\/Form.html","","",1],["TestsGenerator","Asgard\\Tester\\Generator","Asgard\/Tester\/Generator\/TestsGenerator.html","","HTTP tests generator.",1],["Results","Asgard\\Tester","Asgard\/Tester\/Results.html","","",1],["TestBuilder","Asgard\\Tester","Asgard\/Tester\/TestBuilder.html","","",1],["TestBuilderInterface","Asgard\\Tester","Asgard\/Tester\/TestBuilderInterface.html","","",1],["TestsGenerator","Asgard\\Tester","Asgard\/Tester\/TestsGenerator.html"," < AbstractGenerator","",1],["ExportCsvCommand","Asgard\\Translation\\Commands","Asgard\/Translation\/Commands\/ExportCsvCommand.html"," < Command","Transltion csv export command.",1],["ExportYamlCommand","Asgard\\Translation\\Commands","Asgard\/Translation\/Commands\/ExportYamlCommand.html"," < Command","Translation yaml export command.",1],["ImportCommand","Asgard\\Translation\\Commands","Asgard\/Translation\/Commands\/ImportCommand.html"," < Command","Translation import command.",1],["Extractor","Asgard\\Translation","Asgard\/Translation\/Extractor.html","","",1],["Translation","Asgard\\Translation","Asgard\/Translation\/Translation.html","","",1],["InputBag","Asgard\\Validation","Asgard\/Validation\/InputBag.html","","Contains and manipulates inputs for validation.",1],["Report","Asgard\\Validation","Asgard\/Validation\/Report.html","","Errors container.",1],["Rule","Asgard\\Validation","Asgard\/Validation\/Rule.html","","Rule parent class.",1],["RulesRegistry","Asgard\\Validation","Asgard\/Validation\/RulesRegistry.html","","Contains the rules for validation.",1],["RulesRegistryInterface","Asgard\\Validation","Asgard\/Validation\/RulesRegistryInterface.html","","Contains the rules for validation.",1],["All","Asgard\\Validation\\Rules","Asgard\/Validation\/Rules\/All.html"," < Rule","Check if all the rules validates the input.",1],["Allin","Asgard\\Validation\\Rules","Asgard\/Validation\/Rules\/Allin.html"," < Rule","Check that the whole input is in a given array.",1],["Any","Asgard\\Validation\\Rules","Asgard\/Validation\/Rules\/Any.html"," < Rule","Check if any of the validator validates the input.",1],["Callback","Asgard\\Validation\\Rules","Asgard\/Validation\/Rules\/Callback.html"," < Rule","Perform a callback validation.",1],["Contains","Asgard\\Validation\\Rules","Asgard\/Validation\/Rules\/Contains.html"," < Rule","Check that the input contains a given element.",1],["Date","Asgard\\Validation\\Rules","Asgard\/Validation\/Rules\/Date.html"," < Rule","Check that the input has a date format.",1],["Each","Asgard\\Validation\\Rules","Asgard\/Validation\/Rules\/Each.html"," < Rule","Check that each element of the iterable input validates",1],["Email","Asgard\\Validation\\Rules","Asgard\/Validation\/Rules\/Email.html"," < Rule","Check that the input is an email address.",1],["Equal","Asgard\\Validation\\Rules","Asgard\/Validation\/Rules\/Equal.html"," < Rule","Check that the input is equal to a given value.",1],["Haslessthan","Asgard\\Validation\\Rules","Asgard\/Validation\/Rules\/Haslessthan.html"," < Rule","Check that the input contains less than a given number.",1],["Hasmorethan","Asgard\\Validation\\Rules","Asgard\/Validation\/Rules\/Hasmorethan.html"," < Rule","Check that the input countains more than a given number.",1],["In","Asgard\\Validation\\Rules","Asgard\/Validation\/Rules\/In.html"," < Rule","Check that the input is in a given array.",1],["Isinstanceof","Asgard\\Validation\\Rules","Asgard\/Validation\/Rules\/Isinstanceof.html"," < Rule","Check if the object is instance of a class.",1],["Isinteger","Asgard\\Validation\\Rules","Asgard\/Validation\/Rules\/Isinteger.html"," < Rule","Check that the input is an integer.",1],["Length","Asgard\\Validation\\Rules","Asgard\/Validation\/Rules\/Length.html"," < Rule","Check that the input length is equal to a given number.",1],["Lengthbetween","Asgard\\Validation\\Rules","Asgard\/Validation\/Rules\/Lengthbetween.html"," < Rule","Check that the input length is between two given numbers.",1],["Max","Asgard\\Validation\\Rules","Asgard\/Validation\/Rules\/Max.html"," < Rule","Check that the input is equal or less than the given",1],["Maxlength","Asgard\\Validation\\Rules","Asgard\/Validation\/Rules\/Maxlength.html"," < Rule","Check that the input length is less or equal to the",1],["Min","Asgard\\Validation\\Rules","Asgard\/Validation\/Rules\/Min.html"," < Rule","Check that the input is equal or greater than the given",1],["Minlength","Asgard\\Validation\\Rules","Asgard\/Validation\/Rules\/Minlength.html"," < Rule","Check that the string length is greater or equal to",1],["Regex","Asgard\\Validation\\Rules","Asgard\/Validation\/Rules\/Regex.html"," < Rule","Check that the input matches the given pattern.",1],["Same","Asgard\\Validation\\Rules","Asgard\/Validation\/Rules\/Same.html"," < Rule","Check if the input is the same as another attribute.",1],["Validator","Asgard\\Validation","Asgard\/Validation\/Validator.html","","Validator.",1],["ValidatorException","Asgard\\Validation","Asgard\/Validation\/ValidatorException.html"," < Exception","Validator exception.",1],["ValidatorFactory","Asgard\\Validation","Asgard\/Validation\/ValidatorFactory.html","","Validator factory.",1],["ValidatorFactoryInterface","Asgard\\Validation","Asgard\/Validation\/ValidatorFactoryInterface.html","","Validator factory interface.",1],["ValidatorInterface","Asgard\\Validation","Asgard\/Validation\/ValidatorInterface.html","","Validator.",1],["Cache::__construct","Asgard\\Cache\\Cache","Asgard\/Cache\/Cache.html#method___construct","(<abbr title=\"Asgard\\Cache\\Doctrine\\Common\\Cache\\Cache\">Cache<\/abbr> $driver = null)","Constructor.",2],["Cache::__call","Asgard\\Cache\\Cache","Asgard\/Cache\/Cache.html#method___call","(string $name, array $args)","__call magic method.",2],["Cache::setDriver","Asgard\\Cache\\Cache","Asgard\/Cache\/Cache.html#method_setDriver","(<abbr title=\"Asgard\\Cache\\Doctrine\\Common\\Cache\\Cache\">Cache<\/abbr> $driver)","Set the driver",2],["Cache::deleteAll","Asgard\\Cache\\Cache","Asgard\/Cache\/Cache.html#method_deleteAll","()","",2],["Cache::fetch","Asgard\\Cache\\Cache","Asgard\/Cache\/Cache.html#method_fetch","(string $id, mixed $default = false)","Fetch a value.",2],["Cache::contains","Asgard\\Cache\\Cache","Asgard\/Cache\/Cache.html#method_contains","(string $id)","Check if contains a key.",2],["Cache::save","Asgard\\Cache\\Cache","Asgard\/Cache\/Cache.html#method_save","(string $id, mixed $data, integer $lifeTime)","Save a key-value.",2],["Cache::delete","Asgard\\Cache\\Cache","Asgard\/Cache\/Cache.html#method_delete","(string $id)","Delete a key.",2],["Cache::getStats","Asgard\\Cache\\Cache","Asgard\/Cache\/Cache.html#method_getStats","()","Return cache statistics.",2],["Cache::offsetSet","Asgard\\Cache\\Cache","Asgard\/Cache\/Cache.html#method_offsetSet","(integer $offset, mixed $value)","Array set method",2],["Cache::offsetExists","Asgard\\Cache\\Cache","Asgard\/Cache\/Cache.html#method_offsetExists","(integer $offset)","Array exists method",2],["Cache::offsetUnset","Asgard\\Cache\\Cache","Asgard\/Cache\/Cache.html#method_offsetUnset","(integer $offset)","Array unset method",2],["Cache::offsetGet","Asgard\\Cache\\Cache","Asgard\/Cache\/Cache.html#method_offsetGet","(integer $offset)","Array get method",2],["ClearCommand::__construct","Asgard\\Cache\\Commands\\ClearCommand","Asgard\/Cache\/Commands\/ClearCommand.html#method___construct","(<abbr title=\"Asgard\\Cache\\Commands\\Doctrine\\Common\\Cache\\Cache\">Cache<\/abbr> $cache)","Constructor.",2],["NullCache::fetch","Asgard\\Cache\\NullCache","Asgard\/Cache\/NullCache.html#method_fetch","(string $id, mixed $default = false)","Return the default value.",2],["NullCache::contains","Asgard\\Cache\\NullCache","Asgard\/Cache\/NullCache.html#method_contains","(string $id)","Always return false as NullCache can't contain values.",2],["NullCache::save","Asgard\\Cache\\NullCache","Asgard\/Cache\/NullCache.html#method_save","(string $id, mixed $data, integer $lifeTime)","Do nothing.",2],["NullCache::delete","Asgard\\Cache\\NullCache","Asgard\/Cache\/NullCache.html#method_delete","(string $id)","Do nothing.",2],["NullCache::getStats","Asgard\\Cache\\NullCache","Asgard\/Cache\/NullCache.html#method_getStats","()","Return nothing.",2],["ArrayUtils::get","Asgard\\Common\\ArrayUtils","Asgard\/Common\/ArrayUtils.html#method_get","(array $arr, string $str_path, mixed $default = null)","Get element from array, with a path.",2],["ArrayUtils::set","Asgard\\Common\\ArrayUtils","Asgard\/Common\/ArrayUtils.html#method_set","(array $arr, string $str_path, mixed $value)","Set element in array, with a path.",2],["ArrayUtils::append","Asgard\\Common\\ArrayUtils","Asgard\/Common\/ArrayUtils.html#method_append","(array $arr, string $str_path, mixed $value)","Add element in array, with a path.",2],["ArrayUtils::has","Asgard\\Common\\ArrayUtils","Asgard\/Common\/ArrayUtils.html#method_has","(array $arr, string $str_path)","Check if element in array exists.",2],["ArrayUtils::delete","Asgard\\Common\\ArrayUtils","Asgard\/Common\/ArrayUtils.html#method_delete","(array $arr, string $str_path)","Unset element in array.",2],["ArrayUtils::array_set","Asgard\\Common\\ArrayUtils","Asgard\/Common\/ArrayUtils.html#method_array_set","(array $arr, string|array $path, mixed $value)","Set element in array.",2],["ArrayUtils::array_append","Asgard\\Common\\ArrayUtils","Asgard\/Common\/ArrayUtils.html#method_array_append","(array $arr, string|array $path, mixed $value)","Add element in array.",2],["ArrayUtils::array_get","Asgard\\Common\\ArrayUtils","Asgard\/Common\/ArrayUtils.html#method_array_get","(array $arr, string|array $path, mixed $default = null)","Get element in array.",2],["ArrayUtils::array_has","Asgard\\Common\\ArrayUtils","Asgard\/Common\/ArrayUtils.html#method_array_has","(array $arr, string|array $path)","Check if element exists in array.",2],["ArrayUtils::array_delete","Asgard\\Common\\ArrayUtils","Asgard\/Common\/ArrayUtils.html#method_array_delete","(array $arr, string|array $path)","Unset element in array.",2],["ArrayUtils::flatten","Asgard\\Common\\ArrayUtils","Asgard\/Common\/ArrayUtils.html#method_flatten","(array $arr)","Flatten an array.",2],["ArrayUtils::before","Asgard\\Common\\ArrayUtils","Asgard\/Common\/ArrayUtils.html#method_before","(array $arr, integer $i)","Return all ements before a given position.",2],["ArrayUtils::after","Asgard\\Common\\ArrayUtils","Asgard\/Common\/ArrayUtils.html#method_after","(array $arr, integer $i)","Return all ements after a given position.",2],["Bag::__construct","Asgard\\Common\\Bag","Asgard\/Common\/Bag.html#method___construct","(array $data = array())","Constructor.",2],["Bag::all","Asgard\\Common\\Bag","Asgard\/Common\/Bag.html#method_all","()","Return all data.",2],["Bag::clear","Asgard\\Common\\Bag","Asgard\/Common\/Bag.html#method_clear","()","Clear data.",2],["Bag::count","Asgard\\Common\\Bag","Asgard\/Common\/Bag.html#method_count","()","Return number of elements.",2],["Bag::setAll","Asgard\\Common\\Bag","Asgard\/Common\/Bag.html#method_setAll","(array $data)","Set all elements.",2],["Bag::set","Asgard\\Common\\Bag","Asgard\/Common\/Bag.html#method_set","(string|array $path, mixed $value = null)","Set a value.",2],["Bag::get","Asgard\\Common\\Bag","Asgard\/Common\/Bag.html#method_get","(string $path, mixed $default = null)","Get a value.",2],["Bag::has","Asgard\\Common\\Bag","Asgard\/Common\/Bag.html#method_has","(string $path)","Check if has element.",2],["Bag::delete","Asgard\\Common\\Bag","Asgard\/Common\/Bag.html#method_delete","(string $path)","Delete an element.",2],["Bag::offsetSet","Asgard\\Common\\Bag","Asgard\/Common\/Bag.html#method_offsetSet","(integer $offset, mixed $value)","Array set implementation.",2],["Bag::offsetExists","Asgard\\Common\\Bag","Asgard\/Common\/Bag.html#method_offsetExists","(integer $offset)","Array exists implementation.",2],["Bag::offsetUnset","Asgard\\Common\\Bag","Asgard\/Common\/Bag.html#method_offsetUnset","(integer $offset)","Array unset implementation.",2],["Bag::offsetGet","Asgard\\Common\\Bag","Asgard\/Common\/Bag.html#method_offsetGet","(integer $offset)","Array get implementation.",2],["BagInterface::all","Asgard\\Common\\BagInterface","Asgard\/Common\/BagInterface.html#method_all","()","Return all data.",2],["BagInterface::clear","Asgard\\Common\\BagInterface","Asgard\/Common\/BagInterface.html#method_clear","()","Clear data.",2],["BagInterface::count","Asgard\\Common\\BagInterface","Asgard\/Common\/BagInterface.html#method_count","()","Return number of elements.",2],["BagInterface::setAll","Asgard\\Common\\BagInterface","Asgard\/Common\/BagInterface.html#method_setAll","(array $data)","Set all elements.",2],["BagInterface::set","Asgard\\Common\\BagInterface","Asgard\/Common\/BagInterface.html#method_set","(string|array $path, mixed $value = null)","Set a value.",2],["BagInterface::get","Asgard\\Common\\BagInterface","Asgard\/Common\/BagInterface.html#method_get","(string $path, mixed $default = null)","Get a value.",2],["BagInterface::has","Asgard\\Common\\BagInterface","Asgard\/Common\/BagInterface.html#method_has","(string $path)","Check if has element.",2],["BagInterface::delete","Asgard\\Common\\BagInterface","Asgard\/Common\/BagInterface.html#method_delete","(string $path)","Delete an element.",2],["Date::__toString","Asgard\\Common\\Date","Asgard\/Common\/Date.html#method___toString","()","Returns a date string.",2],["Datetime::__construct","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method___construct","(string $time = null, <a href=\"http:\/\/php.net\/DateTimeZone\"><abbr title=\"DateTimeZone\">DateTimeZone<\/abbr><\/a>|string $tz = null)","Constructor.",2],["Datetime::setTimestamp","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_setTimestamp","($time)","",2],["Datetime::modify","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_modify","($modify)","",2],["Datetime::setISODate","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_setISODate","($year, $month, $day = 1)","",2],["Datetime::__clone","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method___clone","()","Object cloning.",2],["Datetime::createFromCarbon","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_createFromCarbon","(<abbr title=\"Asgard\\Common\\Carbon\\Carbon\">Carbon<\/abbr> $carbon)","Create a new Datetime object from a carbon object.",2],["Datetime::getCarbon","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_getCarbon","()","Return the carbon instance equivalent.",2],["Datetime::setCarbon","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_setCarbon","(<abbr title=\"Asgard\\Common\\Carbon\\Carbon\">Carbon<\/abbr> $carbon)","Return the carbon instance equivalent.",2],["Datetime::diff","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_diff","(<abbr title=\"Asgard\\Common\\$datetime2\">$datetime2<\/abbr> $datetime2, boolean $absolute = null)","Return the difference.",2],["Datetime::sub","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_sub","(<abbr title=\"Asgard\\Common\\$interval\">$interval<\/abbr> $interval)","Subtracts an amount of days, months, years, hours,",2],["Datetime::format","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_format","(string $format)","Return a formatted string.",2],["Datetime::getOffset","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_getOffset","()","Return the offset.",2],["Datetime::getTimestamp","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_getTimestamp","()","Return the timestamp.",2],["Datetime::getTimezone","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_getTimezone","()","Return the timezone.",2],["Datetime::__wakeup","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method___wakeup","()","__wakeup magic method.",2],["Datetime::instance","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_instance","(<abbr title=\"Asgard\\Common\\DateTime\">DateTime<\/abbr> $dt)","Create a DatetimeInterface instance from a DateTime",2],["Datetime::parse","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_parse","(string $time = null, <a href=\"http:\/\/php.net\/DateTimeZone\"><abbr title=\"DateTimeZone\">DateTimeZone<\/abbr><\/a>|string $tz = null)","Create a DatetimeInterface instance from a string.",2],["Datetime::now","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_now","(<a href=\"http:\/\/php.net\/DateTimeZone\"><abbr title=\"DateTimeZone\">DateTimeZone<\/abbr><\/a>|string $tz = null)","Get a DatetimeInterface instance for the current date",2],["Datetime::today","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_today","(<a href=\"http:\/\/php.net\/DateTimeZone\"><abbr title=\"DateTimeZone\">DateTimeZone<\/abbr><\/a>|string $tz = null)","Create a DatetimeInterface instance for today",2],["Datetime::tomorrow","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_tomorrow","(<a href=\"http:\/\/php.net\/DateTimeZone\"><abbr title=\"DateTimeZone\">DateTimeZone<\/abbr><\/a>|string $tz = null)","Create a DatetimeInterface instance for tomorrow",2],["Datetime::yesterday","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_yesterday","(<a href=\"http:\/\/php.net\/DateTimeZone\"><abbr title=\"DateTimeZone\">DateTimeZone<\/abbr><\/a>|string $tz = null)","Create a DatetimeInterface instance for yesterday",2],["Datetime::maxValue","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_maxValue","()","Create a DatetimeInterface instance for the greatest",2],["Datetime::minValue","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_minValue","()","Create a DateTimeInterface instance for the lowest",2],["Datetime::create","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_create","(integer $year = null, integer $month = null, integer $day = null, integer $hour = null, integer $minute = null, integer $second = null, <a href=\"http:\/\/php.net\/DateTimeZone\"><abbr title=\"DateTimeZone\">DateTimeZone<\/abbr><\/a>|string $tz = null)","Create a new DatetimeInterface instance from a specific",2],["Datetime::createFromDate","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_createFromDate","(integer $year = null, integer $month = null, integer $day = null, <a href=\"http:\/\/php.net\/DateTimeZone\"><abbr title=\"DateTimeZone\">DateTimeZone<\/abbr><\/a>|string $tz = null)","Create a DatetimeInterface instance from just a date.",2],["Datetime::createFromTime","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_createFromTime","(integer $hour = null, integer $minute = null, integer $second = null, <a href=\"http:\/\/php.net\/DateTimeZone\"><abbr title=\"DateTimeZone\">DateTimeZone<\/abbr><\/a>|string $tz = null)","Create a DatetimeInterface instance from just a time.",2],["Datetime::createFromFormat","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_createFromFormat","(string $format, string $time, <a href=\"http:\/\/php.net\/DateTimeZone\"><abbr title=\"DateTimeZone\">DateTimeZone<\/abbr><\/a>|string $tz = null)","Create a DatetimeInterface instance from a specific",2],["Datetime::createFromTimestamp","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_createFromTimestamp","(integer $timestamp, <a href=\"http:\/\/php.net\/DateTimeZone\"><abbr title=\"DateTimeZone\">DateTimeZone<\/abbr><\/a>|string $tz = null)","Create a DatetimeInterface instance from a timestamp",2],["Datetime::createFromTimestampUTC","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_createFromTimestampUTC","(integer $timestamp)","Create a DatetimeInterface instance from an UTC timestamp",2],["Datetime::resetToStringFormat","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_resetToStringFormat","()","Reset the format used to the default when type juggling",2],["Datetime::setToStringFormat","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_setToStringFormat","(string $format)","Set the default format used when type juggling a DatetimeInterface",2],["Datetime::copy","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_copy","()","Get a copy of the instance",2],["Datetime::__get","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method___get","(string $name)","Get a part of the DatetimeInterface object",2],["Datetime::__isset","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method___isset","(string $name)","Check if an attribute exists on the object",2],["Datetime::__set","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method___set","(string $name, string|integer|<abbr title=\"Asgard\\Common\\DateTimeZone\">DateTimeZone<\/abbr> $value)","Set a part of the DatetimeInterface object",2],["Datetime::year","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_year","(integer $value)","Set the instance's year",2],["Datetime::month","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_month","(integer $value)","Set the instance's month",2],["Datetime::day","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_day","(integer $value)","Set the instance's day",2],["Datetime::setDate","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_setDate","(integer $year, integer $month, integer $day)","Set the date all together",2],["Datetime::hour","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_hour","(integer $value)","Set the instance's hour",2],["Datetime::minute","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_minute","(integer $value)","Set the instance's minute",2],["Datetime::second","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_second","(integer $value)","Set the instance's second",2],["Datetime::setTime","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_setTime","(integer $hour, integer $minute, integer $second)","Set the time all together",2],["Datetime::setDateTime","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_setDateTime","(integer $year, integer $month, integer $day, integer $hour, integer $minute, integer $second)","Set the date and time all together",2],["Datetime::timestamp","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_timestamp","(integer $value)","Set the instance's timestamp",2],["Datetime::timezone","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_timezone","(<abbr title=\"Asgard\\Common\\DateTimeZone\">DateTimeZone<\/abbr>|string $value)","Alias for setTimezone()",2],["Datetime::tz","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_tz","(<abbr title=\"Asgard\\Common\\DateTimeZone\">DateTimeZone<\/abbr>|string $value)","Alias for setTimezone()",2],["Datetime::setTimezone","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_setTimezone","(<abbr title=\"Asgard\\Common\\DateTimeZone\">DateTimeZone<\/abbr>|string $value)","Set the instance's timezone from a string or object",2],["Datetime::formatLocalized","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_formatLocalized","(string $format)","Format the instance with the current locale.",2],["Datetime::__toString","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method___toString","()","Format the instance as a string using the set format",2],["Datetime::toDateString","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_toDateString","()","Format the instance as date",2],["Datetime::toFormattedDateString","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_toFormattedDateString","()","Format the instance as a readable date",2],["Datetime::toTimeString","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_toTimeString","()","Format the instance as time",2],["Datetime::toDateTimeString","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_toDateTimeString","()","Format the instance as date and time",2],["Datetime::toDayDateTimeString","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_toDayDateTimeString","()","Format the instance with day, date and time",2],["Datetime::toAtomString","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_toAtomString","()","Format the instance as ATOM",2],["Datetime::toCookieString","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_toCookieString","()","Format the instance as COOKIE",2],["Datetime::toIso8601String","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_toIso8601String","()","Format the instance as ISO8601",2],["Datetime::toRfc822String","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_toRfc822String","()","Format the instance as RFC822",2],["Datetime::toRfc850String","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_toRfc850String","()","Format the instance as RFC850",2],["Datetime::toRfc1036String","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_toRfc1036String","()","Format the instance as RFC1036",2],["Datetime::toRfc1123String","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_toRfc1123String","()","Format the instance as RFC1123",2],["Datetime::toRfc2822String","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_toRfc2822String","()","Format the instance as RFC2822",2],["Datetime::toRfc3339String","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_toRfc3339String","()","Format the instance as RFC3339",2],["Datetime::toRssString","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_toRssString","()","Format the instance as RSS",2],["Datetime::toW3cString","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_toW3cString","()","Format the instance as W3C",2],["Datetime::eq","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_eq","(<a href=\"Asgard\/Common\/DatetimeInterface.html\"><abbr title=\"Asgard\\Common\\DatetimeInterface\">DatetimeInterface<\/abbr><\/a> $dt)","Determines if the instance is equal to another",2],["Datetime::ne","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_ne","(<a href=\"Asgard\/Common\/DatetimeInterface.html\"><abbr title=\"Asgard\\Common\\DatetimeInterface\">DatetimeInterface<\/abbr><\/a> $dt)","Determines if the instance is not equal to another",2],["Datetime::gt","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_gt","(<a href=\"Asgard\/Common\/DatetimeInterface.html\"><abbr title=\"Asgard\\Common\\DatetimeInterface\">DatetimeInterface<\/abbr><\/a> $dt)","Determines if the instance is greater (after) than",2],["Datetime::gte","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_gte","(<a href=\"Asgard\/Common\/DatetimeInterface.html\"><abbr title=\"Asgard\\Common\\DatetimeInterface\">DatetimeInterface<\/abbr><\/a> $dt)","Determines if the instance is greater (after) than",2],["Datetime::lt","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_lt","(<a href=\"Asgard\/Common\/DatetimeInterface.html\"><abbr title=\"Asgard\\Common\\DatetimeInterface\">DatetimeInterface<\/abbr><\/a> $dt)","Determines if the instance is less (before) than another",2],["Datetime::lte","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_lte","(<a href=\"Asgard\/Common\/DatetimeInterface.html\"><abbr title=\"Asgard\\Common\\DatetimeInterface\">DatetimeInterface<\/abbr><\/a> $dt)","Determines if the instance is less (before) or equal",2],["Datetime::between","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_between","(<a href=\"Asgard\/Common\/DatetimeInterface.html\"><abbr title=\"Asgard\\Common\\DatetimeInterface\">DatetimeInterface<\/abbr><\/a> $dt1, <a href=\"Asgard\/Common\/DatetimeInterface.html\"><abbr title=\"Asgard\\Common\\DatetimeInterface\">DatetimeInterface<\/abbr><\/a> $dt2, boolean $equal = true)","Determines if the instance is between two others",2],["Datetime::min","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_min","(<a href=\"Asgard\/Common\/DatetimeInterface.html\"><abbr title=\"Asgard\\Common\\DatetimeInterface\">DatetimeInterface<\/abbr><\/a> $dt = null)","Get the minimum instance between a given instance (default",2],["Datetime::max","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_max","(<a href=\"Asgard\/Common\/DatetimeInterface.html\"><abbr title=\"Asgard\\Common\\DatetimeInterface\">DatetimeInterface<\/abbr><\/a> $dt = null)","Get the maximum instance between a given instance (default",2],["Datetime::isWeekday","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_isWeekday","()","Determines if the instance is a weekday",2],["Datetime::isWeekend","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_isWeekend","()","Determines if the instance is a weekend day",2],["Datetime::isYesterday","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_isYesterday","()","Determines if the instance is yesterday",2],["Datetime::isToday","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_isToday","()","Determines if the instance is today",2],["Datetime::isTomorrow","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_isTomorrow","()","Determines if the instance is tomorrow",2],["Datetime::isFuture","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_isFuture","()","Determines if the instance is in the future, ie.",2],["Datetime::isPast","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_isPast","()","Determines if the instance is in the past, ie.",2],["Datetime::isLeapYear","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_isLeapYear","()","Determines if the instance is a leap year",2],["Datetime::isSameDay","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_isSameDay","(<a href=\"Asgard\/Common\/DatetimeInterface.html\"><abbr title=\"Asgard\\Common\\DatetimeInterface\">DatetimeInterface<\/abbr><\/a> $dt)","Checks if the passed in date is the same day as the",2],["Datetime::addYears","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_addYears","(integer $value)","Add years to the instance.",2],["Datetime::addYear","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_addYear","()","Add a year to the instance",2],["Datetime::subYear","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_subYear","()","Remove a year from the instance",2],["Datetime::subYears","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_subYears","(integer $value)","Remove years from the instance.",2],["Datetime::addMonths","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_addMonths","(integer $value)","Add months to the instance.",2],["Datetime::addMonth","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_addMonth","()","Add a month to the instance",2],["Datetime::subMonth","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_subMonth","()","Remove a month from the instance",2],["Datetime::subMonths","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_subMonths","(integer $value)","Remove months from the instance",2],["Datetime::addDays","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_addDays","(integer $value)","Add days to the instance.",2],["Datetime::addDay","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_addDay","()","Add a day to the instance",2],["Datetime::subDay","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_subDay","()","Remove a day from the instance",2],["Datetime::subDays","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_subDays","(integer $value)","Remove days from the instance",2],["Datetime::addWeekdays","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_addWeekdays","(integer $value)","Add weekdays to the instance.",2],["Datetime::addWeekday","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_addWeekday","()","Add a weekday to the instance",2],["Datetime::subWeekday","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_subWeekday","()","Remove a weekday from the instance",2],["Datetime::subWeekdays","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_subWeekdays","(integer $value)","Remove weekdays from the instance",2],["Datetime::addWeeks","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_addWeeks","(integer $value)","Add weeks to the instance.",2],["Datetime::addWeek","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_addWeek","()","Add a week to the instance",2],["Datetime::subWeek","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_subWeek","()","Remove a week from the instance",2],["Datetime::subWeeks","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_subWeeks","(integer $value)","Remove weeks to the instance",2],["Datetime::addHours","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_addHours","(integer $value)","Add hours to the instance.",2],["Datetime::addHour","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_addHour","()","Add an hour to the instance",2],["Datetime::subHour","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_subHour","()","Remove an hour from the instance",2],["Datetime::subHours","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_subHours","(integer $value)","Remove hours from the instance",2],["Datetime::addMinutes","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_addMinutes","(integer $value)","Add minutes to the instance.",2],["Datetime::addMinute","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_addMinute","()","Add a minute to the instance",2],["Datetime::subMinute","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_subMinute","()","Remove a minute from the instance",2],["Datetime::subMinutes","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_subMinutes","(integer $value)","Remove minutes from the instance",2],["Datetime::addSeconds","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_addSeconds","(integer $value)","Add seconds to the instance.",2],["Datetime::addSecond","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_addSecond","()","Add a second to the instance",2],["Datetime::subSecond","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_subSecond","()","Remove a second from the instance",2],["Datetime::subSeconds","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_subSeconds","(integer $value)","Remove seconds from the instance",2],["Datetime::diffInYears","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_diffInYears","(<a href=\"Asgard\/Common\/DatetimeInterface.html\"><abbr title=\"Asgard\\Common\\DatetimeInterface\">DatetimeInterface<\/abbr><\/a> $dt = null, boolean $abs = true)","Get the difference in years",2],["Datetime::diffInMonths","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_diffInMonths","(<a href=\"Asgard\/Common\/DatetimeInterface.html\"><abbr title=\"Asgard\\Common\\DatetimeInterface\">DatetimeInterface<\/abbr><\/a> $dt = null, boolean $abs = true)","Get the difference in months",2],["Datetime::diffInWeeks","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_diffInWeeks","(<a href=\"Asgard\/Common\/DatetimeInterface.html\"><abbr title=\"Asgard\\Common\\DatetimeInterface\">DatetimeInterface<\/abbr><\/a> $dt = null, boolean $abs = true)","Get the difference in weeks",2],["Datetime::diffInDays","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_diffInDays","(<a href=\"Asgard\/Common\/DatetimeInterface.html\"><abbr title=\"Asgard\\Common\\DatetimeInterface\">DatetimeInterface<\/abbr><\/a> $dt = null, boolean $abs = true)","Get the difference in days",2],["Datetime::diffInDaysFiltered","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_diffInDaysFiltered","(<abbr title=\"Asgard\\Common\\Closure\">Closure<\/abbr> $callback, <a href=\"Asgard\/Common\/DatetimeInterface.html\"><abbr title=\"Asgard\\Common\\DatetimeInterface\">DatetimeInterface<\/abbr><\/a> $dt = null, boolean $abs = true)","Get the difference in days using a filter closure",2],["Datetime::diffInWeekdays","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_diffInWeekdays","(<a href=\"Asgard\/Common\/DatetimeInterface.html\"><abbr title=\"Asgard\\Common\\DatetimeInterface\">DatetimeInterface<\/abbr><\/a> $dt = null, boolean $abs = true)","Get the difference in weekdays",2],["Datetime::diffInWeekendDays","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_diffInWeekendDays","(<a href=\"Asgard\/Common\/DatetimeInterface.html\"><abbr title=\"Asgard\\Common\\DatetimeInterface\">DatetimeInterface<\/abbr><\/a> $dt = null, boolean $abs = true)","Get the difference in weekend days using a filter",2],["Datetime::diffInHours","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_diffInHours","(<a href=\"Asgard\/Common\/DatetimeInterface.html\"><abbr title=\"Asgard\\Common\\DatetimeInterface\">DatetimeInterface<\/abbr><\/a> $dt = null, boolean $abs = true)","",2],["Datetime::diffInMinutes","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_diffInMinutes","(<a href=\"Asgard\/Common\/DatetimeInterface.html\"><abbr title=\"Asgard\\Common\\DatetimeInterface\">DatetimeInterface<\/abbr><\/a> $dt = null, boolean $abs = true)","Get the difference in minutes",2],["Datetime::diffInSeconds","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_diffInSeconds","(<a href=\"Asgard\/Common\/DatetimeInterface.html\"><abbr title=\"Asgard\\Common\\DatetimeInterface\">DatetimeInterface<\/abbr><\/a> $dt = null, boolean $abs = true)","Get the difference in seconds",2],["Datetime::diffForHumans","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_diffForHumans","(<a href=\"Asgard\/Common\/DatetimeInterface.html\"><abbr title=\"Asgard\\Common\\DatetimeInterface\">DatetimeInterface<\/abbr><\/a> $other = null)","Get the difference in a human readable format.",2],["Datetime::startOfDay","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_startOfDay","()","Resets the time to 00:00:00",2],["Datetime::endOfDay","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_endOfDay","()","Resets the time to 23:59:59",2],["Datetime::startOfMonth","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_startOfMonth","()","Resets the date to the first day of the month and the",2],["Datetime::endOfMonth","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_endOfMonth","()","Resets the date to end of the month and time to 23:59:59",2],["Datetime::startOfYear","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_startOfYear","()","Resets the date to the first day of the year and the",2],["Datetime::endOfYear","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_endOfYear","()","Resets the date to end of the year and time to 23:59:59",2],["Datetime::startOfDecade","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_startOfDecade","()","Resets the date to the first day of the decade and",2],["Datetime::endOfDecade","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_endOfDecade","()","Resets the date to end of the decade and time to 23:59:59",2],["Datetime::startOfCentury","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_startOfCentury","()","Resets the date to the first day of the century and",2],["Datetime::endOfCentury","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_endOfCentury","()","Resets the date to end of the century and time to 23:59:59",2],["Datetime::startOfWeek","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_startOfWeek","()","",2],["Datetime::endOfWeek","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_endOfWeek","()","Resets the date to end of the ISO-8601 week (Sunday)",2],["Datetime::next","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_next","(int $dayOfWeek = null)","Modify to the next occurance of a given day of the",2],["Datetime::previous","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_previous","(int $dayOfWeek = null)","Modify to the previous occurance of a given day of",2],["Datetime::firstOfMonth","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_firstOfMonth","(int $dayOfWeek = null)","Modify to the first occurance of a given day of the",2],["Datetime::lastOfMonth","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_lastOfMonth","(int $dayOfWeek = null)","Modify to the last occurance of a given day of the",2],["Datetime::nthOfMonth","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_nthOfMonth","(int $nth, int $dayOfWeek)","Modify to the given occurance of a given day of the",2],["Datetime::firstOfQuarter","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_firstOfQuarter","(int $dayOfWeek = null)","Modify to the first occurance of a given day of the",2],["Datetime::lastOfQuarter","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_lastOfQuarter","(int $dayOfWeek = null)","Modify to the last occurance of a given day of the",2],["Datetime::nthOfQuarter","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_nthOfQuarter","(int $nth, int $dayOfWeek)","Modify to the given occurance of a given day of the",2],["Datetime::firstOfYear","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_firstOfYear","(int $dayOfWeek = null)","Modify to the first occurance of a given day of the",2],["Datetime::lastOfYear","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_lastOfYear","(int $dayOfWeek = null)","Modify to the last occurance of a given day of the",2],["Datetime::nthOfYear","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_nthOfYear","(int $nth, int $dayOfWeek)","Modify to the given occurance of a given day of the",2],["Datetime::average","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_average","(<a href=\"Asgard\/Common\/DatetimeInterface.html\"><abbr title=\"Asgard\\Common\\DatetimeInterface\">DatetimeInterface<\/abbr><\/a> $dt = null)","Modify the current instance to the average of a given",2],["Datetime::isBirthday","Asgard\\Common\\Datetime","Asgard\/Common\/Datetime.html#method_isBirthday","(<a href=\"Asgard\/Common\/DatetimeInterface.html\"><abbr title=\"Asgard\\Common\\DatetimeInterface\">DatetimeInterface<\/abbr><\/a> $dt)","Check if its the birthday.",2],["DatetimeInterface::diff","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_diff","(<abbr title=\"Asgard\\Common\\$datetime2\">$datetime2<\/abbr> $datetime2, boolean $absolute)","Return the difference.",2],["DatetimeInterface::sub","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_sub","(<abbr title=\"Asgard\\Common\\$interval\">$interval<\/abbr> $interval)","Subtracts an amount of days, months, years, hours,",2],["DatetimeInterface::format","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_format","(string $format)","Return a formatted string.",2],["DatetimeInterface::getOffset","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_getOffset","()","Return the offset.",2],["DatetimeInterface::getTimestamp","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_getTimestamp","()","Return the timestamp.",2],["DatetimeInterface::getTimezone","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_getTimezone","()","Return the timezone.",2],["DatetimeInterface::__wakeup","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method___wakeup","()","__wakeup magic method.",2],["DatetimeInterface::instance","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_instance","(<abbr title=\"Asgard\\Common\\DateTime\">DateTime<\/abbr> $dt)","Create a DatetimeInterface instance from a DateTime",2],["DatetimeInterface::parse","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_parse","(string $time = null, <a href=\"http:\/\/php.net\/DateTimeZone\"><abbr title=\"DateTimeZone\">DateTimeZone<\/abbr><\/a>|string $tz = null)","Create a DatetimeInterface instance from a string.",2],["DatetimeInterface::now","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_now","(<a href=\"http:\/\/php.net\/DateTimeZone\"><abbr title=\"DateTimeZone\">DateTimeZone<\/abbr><\/a>|string $tz = null)","Get a DatetimeInterface instance for the current date",2],["DatetimeInterface::today","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_today","(<a href=\"http:\/\/php.net\/DateTimeZone\"><abbr title=\"DateTimeZone\">DateTimeZone<\/abbr><\/a>|string $tz = null)","Create a DatetimeInterface instance for today",2],["DatetimeInterface::tomorrow","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_tomorrow","(<a href=\"http:\/\/php.net\/DateTimeZone\"><abbr title=\"DateTimeZone\">DateTimeZone<\/abbr><\/a>|string $tz = null)","Create a DatetimeInterface instance for tomorrow",2],["DatetimeInterface::yesterday","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_yesterday","(<a href=\"http:\/\/php.net\/DateTimeZone\"><abbr title=\"DateTimeZone\">DateTimeZone<\/abbr><\/a>|string $tz = null)","Create a DatetimeInterface instance for yesterday",2],["DatetimeInterface::maxValue","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_maxValue","()","Create a DatetimeInterface instance for the greatest",2],["DatetimeInterface::minValue","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_minValue","()","Create a DateTimeInterface instance for the lowest",2],["DatetimeInterface::create","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_create","(integer $year = null, integer $month = null, integer $day = null, integer $hour = null, integer $minute = null, integer $second = null, <a href=\"http:\/\/php.net\/DateTimeZone\"><abbr title=\"DateTimeZone\">DateTimeZone<\/abbr><\/a>|string $tz = null)","Create a new DatetimeInterface instance from a specific",2],["DatetimeInterface::createFromDate","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_createFromDate","(integer $year = null, integer $month = null, integer $day = null, <a href=\"http:\/\/php.net\/DateTimeZone\"><abbr title=\"DateTimeZone\">DateTimeZone<\/abbr><\/a>|string $tz = null)","Create a DatetimeInterface instance from just a date.",2],["DatetimeInterface::createFromTime","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_createFromTime","(integer $hour = null, integer $minute = null, integer $second = null, <a href=\"http:\/\/php.net\/DateTimeZone\"><abbr title=\"DateTimeZone\">DateTimeZone<\/abbr><\/a>|string $tz = null)","Create a DatetimeInterface instance from just a time.",2],["DatetimeInterface::createFromFormat","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_createFromFormat","(string $format, string $time, <a href=\"http:\/\/php.net\/DateTimeZone\"><abbr title=\"DateTimeZone\">DateTimeZone<\/abbr><\/a>|string $tz = null)","Create a DatetimeInterface instance from a specific",2],["DatetimeInterface::createFromTimestamp","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_createFromTimestamp","(integer $timestamp, <a href=\"http:\/\/php.net\/DateTimeZone\"><abbr title=\"DateTimeZone\">DateTimeZone<\/abbr><\/a>|string $tz = null)","Create a DatetimeInterface instance from a timestamp",2],["DatetimeInterface::createFromTimestampUTC","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_createFromTimestampUTC","(integer $timestamp)","Create a DatetimeInterface instance from an UTC timestamp",2],["DatetimeInterface::resetToStringFormat","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_resetToStringFormat","()","Reset the format used to the default when type juggling",2],["DatetimeInterface::setToStringFormat","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_setToStringFormat","(string $format)","Set the default format used when type juggling a DatetimeInterface",2],["DatetimeInterface::copy","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_copy","()","Get a copy of the instance",2],["DatetimeInterface::__get","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method___get","(string $name)","Get a part of the DatetimeInterface object",2],["DatetimeInterface::__isset","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method___isset","(string $name)","Check if an attribute exists on the object",2],["DatetimeInterface::__set","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method___set","(string $name, string|integer|<abbr title=\"Asgard\\Common\\DateTimeZone\">DateTimeZone<\/abbr> $value)","Set a part of the DatetimeInterface object",2],["DatetimeInterface::year","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_year","(integer $value)","Set the instance's year",2],["DatetimeInterface::month","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_month","(integer $value)","Set the instance's month",2],["DatetimeInterface::day","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_day","(integer $value)","Set the instance's day",2],["DatetimeInterface::setDate","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_setDate","(integer $year, integer $month, integer $day)","Set the date all together",2],["DatetimeInterface::hour","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_hour","(integer $value)","Set the instance's hour",2],["DatetimeInterface::minute","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_minute","(integer $value)","Set the instance's minute",2],["DatetimeInterface::second","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_second","(integer $value)","Set the instance's second",2],["DatetimeInterface::setTime","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_setTime","(integer $hour, integer $minute, integer $second)","Set the time all together",2],["DatetimeInterface::setDateTime","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_setDateTime","(integer $year, integer $month, integer $day, integer $hour, integer $minute, integer $second)","Set the date and time all together",2],["DatetimeInterface::timestamp","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_timestamp","(integer $value)","Set the instance's timestamp",2],["DatetimeInterface::timezone","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_timezone","(<abbr title=\"Asgard\\Common\\DateTimeZone\">DateTimeZone<\/abbr>|string $value)","Alias for setTimezone()",2],["DatetimeInterface::tz","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_tz","(<abbr title=\"Asgard\\Common\\DateTimeZone\">DateTimeZone<\/abbr>|string $value)","Alias for setTimezone()",2],["DatetimeInterface::setTimezone","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_setTimezone","(<abbr title=\"Asgard\\Common\\DateTimeZone\">DateTimeZone<\/abbr>|string $value)","Set the instance's timezone from a string or object",2],["DatetimeInterface::formatLocalized","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_formatLocalized","(string $format)","Format the instance with the current locale.",2],["DatetimeInterface::__toString","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method___toString","()","Format the instance as a string using the set format",2],["DatetimeInterface::toDateString","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_toDateString","()","Format the instance as date",2],["DatetimeInterface::toFormattedDateString","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_toFormattedDateString","()","Format the instance as a readable date",2],["DatetimeInterface::toTimeString","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_toTimeString","()","Format the instance as time",2],["DatetimeInterface::toDateTimeString","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_toDateTimeString","()","Format the instance as date and time",2],["DatetimeInterface::toDayDateTimeString","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_toDayDateTimeString","()","Format the instance with day, date and time",2],["DatetimeInterface::toAtomString","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_toAtomString","()","Format the instance as ATOM",2],["DatetimeInterface::toCookieString","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_toCookieString","()","Format the instance as COOKIE",2],["DatetimeInterface::toIso8601String","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_toIso8601String","()","Format the instance as ISO8601",2],["DatetimeInterface::toRfc822String","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_toRfc822String","()","Format the instance as RFC822",2],["DatetimeInterface::toRfc850String","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_toRfc850String","()","Format the instance as RFC850",2],["DatetimeInterface::toRfc1036String","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_toRfc1036String","()","Format the instance as RFC1036",2],["DatetimeInterface::toRfc1123String","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_toRfc1123String","()","Format the instance as RFC1123",2],["DatetimeInterface::toRfc2822String","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_toRfc2822String","()","Format the instance as RFC2822",2],["DatetimeInterface::toRfc3339String","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_toRfc3339String","()","Format the instance as RFC3339",2],["DatetimeInterface::toRssString","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_toRssString","()","Format the instance as RSS",2],["DatetimeInterface::toW3cString","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_toW3cString","()","Format the instance as W3C",2],["DatetimeInterface::eq","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_eq","(<a href=\"Asgard\/Common\/DatetimeInterface.html\"><abbr title=\"Asgard\\Common\\DatetimeInterface\">DatetimeInterface<\/abbr><\/a> $dt)","Determines if the instance is equal to another",2],["DatetimeInterface::ne","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_ne","(<a href=\"Asgard\/Common\/DatetimeInterface.html\"><abbr title=\"Asgard\\Common\\DatetimeInterface\">DatetimeInterface<\/abbr><\/a> $dt)","Determines if the instance is not equal to another",2],["DatetimeInterface::gt","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_gt","(<a href=\"Asgard\/Common\/DatetimeInterface.html\"><abbr title=\"Asgard\\Common\\DatetimeInterface\">DatetimeInterface<\/abbr><\/a> $dt)","Determines if the instance is greater (after) than",2],["DatetimeInterface::gte","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_gte","(<a href=\"Asgard\/Common\/DatetimeInterface.html\"><abbr title=\"Asgard\\Common\\DatetimeInterface\">DatetimeInterface<\/abbr><\/a> $dt)","Determines if the instance is greater (after) than",2],["DatetimeInterface::lt","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_lt","(<a href=\"Asgard\/Common\/DatetimeInterface.html\"><abbr title=\"Asgard\\Common\\DatetimeInterface\">DatetimeInterface<\/abbr><\/a> $dt)","Determines if the instance is less (before) than another",2],["DatetimeInterface::lte","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_lte","(<a href=\"Asgard\/Common\/DatetimeInterface.html\"><abbr title=\"Asgard\\Common\\DatetimeInterface\">DatetimeInterface<\/abbr><\/a> $dt)","Determines if the instance is less (before) or equal",2],["DatetimeInterface::between","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_between","(<a href=\"Asgard\/Common\/DatetimeInterface.html\"><abbr title=\"Asgard\\Common\\DatetimeInterface\">DatetimeInterface<\/abbr><\/a> $dt1, <a href=\"Asgard\/Common\/DatetimeInterface.html\"><abbr title=\"Asgard\\Common\\DatetimeInterface\">DatetimeInterface<\/abbr><\/a> $dt2, boolean $equal)","Determines if the instance is between two others",2],["DatetimeInterface::min","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_min","(<a href=\"Asgard\/Common\/DatetimeInterface.html\"><abbr title=\"Asgard\\Common\\DatetimeInterface\">DatetimeInterface<\/abbr><\/a> $dt)","Get the minimum instance between a given instance (default",2],["DatetimeInterface::max","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_max","(<a href=\"Asgard\/Common\/DatetimeInterface.html\"><abbr title=\"Asgard\\Common\\DatetimeInterface\">DatetimeInterface<\/abbr><\/a> $dt)","Get the maximum instance between a given instance (default",2],["DatetimeInterface::isWeekday","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_isWeekday","()","Determines if the instance is a weekday",2],["DatetimeInterface::isWeekend","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_isWeekend","()","Determines if the instance is a weekend day",2],["DatetimeInterface::isYesterday","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_isYesterday","()","Determines if the instance is yesterday",2],["DatetimeInterface::isToday","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_isToday","()","Determines if the instance is today",2],["DatetimeInterface::isTomorrow","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_isTomorrow","()","Determines if the instance is tomorrow",2],["DatetimeInterface::isFuture","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_isFuture","()","Determines if the instance is in the future, ie.",2],["DatetimeInterface::isPast","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_isPast","()","Determines if the instance is in the past, ie.",2],["DatetimeInterface::isLeapYear","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_isLeapYear","()","Determines if the instance is a leap year",2],["DatetimeInterface::isSameDay","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_isSameDay","(<a href=\"Asgard\/Common\/DatetimeInterface.html\"><abbr title=\"Asgard\\Common\\DatetimeInterface\">DatetimeInterface<\/abbr><\/a> $dt)","Checks if the passed in date is the same day as the",2],["DatetimeInterface::addYears","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_addYears","(integer $value)","Add years to the instance.",2],["DatetimeInterface::addYear","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_addYear","()","Add a year to the instance",2],["DatetimeInterface::subYear","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_subYear","()","Remove a year from the instance",2],["DatetimeInterface::subYears","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_subYears","(integer $value)","Remove years from the instance.",2],["DatetimeInterface::addMonths","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_addMonths","(integer $value)","Add months to the instance.",2],["DatetimeInterface::addMonth","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_addMonth","()","Add a month to the instance",2],["DatetimeInterface::subMonth","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_subMonth","()","Remove a month from the instance",2],["DatetimeInterface::subMonths","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_subMonths","(integer $value)","Remove months from the instance",2],["DatetimeInterface::addDays","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_addDays","(integer $value)","Add days to the instance.",2],["DatetimeInterface::addDay","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_addDay","()","Add a day to the instance",2],["DatetimeInterface::subDay","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_subDay","()","Remove a day from the instance",2],["DatetimeInterface::subDays","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_subDays","(integer $value)","Remove days from the instance",2],["DatetimeInterface::addWeekdays","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_addWeekdays","(integer $value)","Add weekdays to the instance.",2],["DatetimeInterface::addWeekday","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_addWeekday","()","Add a weekday to the instance",2],["DatetimeInterface::subWeekday","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_subWeekday","()","Remove a weekday from the instance",2],["DatetimeInterface::subWeekdays","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_subWeekdays","(integer $value)","Remove weekdays from the instance",2],["DatetimeInterface::addWeeks","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_addWeeks","(integer $value)","Add weeks to the instance.",2],["DatetimeInterface::addWeek","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_addWeek","()","Add a week to the instance",2],["DatetimeInterface::subWeek","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_subWeek","()","Remove a week from the instance",2],["DatetimeInterface::subWeeks","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_subWeeks","(integer $value)","Remove weeks to the instance",2],["DatetimeInterface::addHours","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_addHours","(integer $value)","Add hours to the instance.",2],["DatetimeInterface::addHour","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_addHour","()","Add an hour to the instance",2],["DatetimeInterface::subHour","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_subHour","()","Remove an hour from the instance",2],["DatetimeInterface::subHours","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_subHours","(integer $value)","Remove hours from the instance",2],["DatetimeInterface::addMinutes","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_addMinutes","(integer $value)","Add minutes to the instance.",2],["DatetimeInterface::addMinute","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_addMinute","()","Add a minute to the instance",2],["DatetimeInterface::subMinute","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_subMinute","()","Remove a minute from the instance",2],["DatetimeInterface::subMinutes","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_subMinutes","(integer $value)","Remove minutes from the instance",2],["DatetimeInterface::addSeconds","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_addSeconds","(integer $value)","Add seconds to the instance.",2],["DatetimeInterface::addSecond","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_addSecond","()","Add a second to the instance",2],["DatetimeInterface::subSecond","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_subSecond","()","Remove a second from the instance",2],["DatetimeInterface::subSeconds","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_subSeconds","(integer $value)","Remove seconds from the instance",2],["DatetimeInterface::diffInYears","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_diffInYears","(<a href=\"Asgard\/Common\/DatetimeInterface.html\"><abbr title=\"Asgard\\Common\\DatetimeInterface\">DatetimeInterface<\/abbr><\/a> $dt, boolean $abs)","Get the difference in years",2],["DatetimeInterface::diffInMonths","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_diffInMonths","(<a href=\"Asgard\/Common\/DatetimeInterface.html\"><abbr title=\"Asgard\\Common\\DatetimeInterface\">DatetimeInterface<\/abbr><\/a> $dt, boolean $abs)","Get the difference in months",2],["DatetimeInterface::diffInWeeks","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_diffInWeeks","(<a href=\"Asgard\/Common\/DatetimeInterface.html\"><abbr title=\"Asgard\\Common\\DatetimeInterface\">DatetimeInterface<\/abbr><\/a> $dt, boolean $abs)","Get the difference in weeks",2],["DatetimeInterface::diffInDays","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_diffInDays","(<a href=\"Asgard\/Common\/DatetimeInterface.html\"><abbr title=\"Asgard\\Common\\DatetimeInterface\">DatetimeInterface<\/abbr><\/a> $dt, boolean $abs)","Get the difference in days",2],["DatetimeInterface::diffInDaysFiltered","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_diffInDaysFiltered","(<abbr title=\"Asgard\\Common\\Closure\">Closure<\/abbr> $callback, <a href=\"Asgard\/Common\/DatetimeInterface.html\"><abbr title=\"Asgard\\Common\\DatetimeInterface\">DatetimeInterface<\/abbr><\/a> $dt, boolean $abs)","Get the difference in days using a filter closure",2],["DatetimeInterface::diffInWeekdays","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_diffInWeekdays","(<a href=\"Asgard\/Common\/DatetimeInterface.html\"><abbr title=\"Asgard\\Common\\DatetimeInterface\">DatetimeInterface<\/abbr><\/a> $dt, boolean $abs)","Get the difference in weekdays",2],["DatetimeInterface::diffInWeekendDays","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_diffInWeekendDays","(<a href=\"Asgard\/Common\/DatetimeInterface.html\"><abbr title=\"Asgard\\Common\\DatetimeInterface\">DatetimeInterface<\/abbr><\/a> $dt, boolean $abs)","Get the difference in weekend days using a filter",2],["DatetimeInterface::diffInHours","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_diffInHours","(<a href=\"Asgard\/Common\/DatetimeInterface.html\"><abbr title=\"Asgard\\Common\\DatetimeInterface\">DatetimeInterface<\/abbr><\/a> $dt, boolean $abs)","Get the difference in hours",2],["DatetimeInterface::diffInMinutes","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_diffInMinutes","(<a href=\"Asgard\/Common\/DatetimeInterface.html\"><abbr title=\"Asgard\\Common\\DatetimeInterface\">DatetimeInterface<\/abbr><\/a> $dt, boolean $abs)","Get the difference in minutes",2],["DatetimeInterface::diffInSeconds","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_diffInSeconds","(<a href=\"Asgard\/Common\/DatetimeInterface.html\"><abbr title=\"Asgard\\Common\\DatetimeInterface\">DatetimeInterface<\/abbr><\/a> $dt, boolean $abs)","Get the difference in seconds",2],["DatetimeInterface::diffForHumans","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_diffForHumans","(<a href=\"Asgard\/Common\/DatetimeInterface.html\"><abbr title=\"Asgard\\Common\\DatetimeInterface\">DatetimeInterface<\/abbr><\/a> $other)","Get the difference in a human readable format.",2],["DatetimeInterface::startOfDay","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_startOfDay","()","Resets the time to 00:00:00",2],["DatetimeInterface::endOfDay","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_endOfDay","()","Resets the time to 23:59:59",2],["DatetimeInterface::startOfMonth","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_startOfMonth","()","Resets the date to the first day of the month and the",2],["DatetimeInterface::endOfMonth","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_endOfMonth","()","Resets the date to end of the month and time to 23:59:59",2],["DatetimeInterface::startOfYear","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_startOfYear","()","Resets the date to the first day of the year and the",2],["DatetimeInterface::endOfYear","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_endOfYear","()","Resets the date to end of the year and time to 23:59:59",2],["DatetimeInterface::startOfDecade","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_startOfDecade","()","Resets the date to the first day of the decade and",2],["DatetimeInterface::endOfDecade","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_endOfDecade","()","Resets the date to end of the decade and time to 23:59:59",2],["DatetimeInterface::startOfCentury","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_startOfCentury","()","Resets the date to the first day of the century and",2],["DatetimeInterface::endOfCentury","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_endOfCentury","()","Resets the date to end of the century and time to 23:59:59",2],["DatetimeInterface::startOfWeek","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_startOfWeek","()","Resets the date to the first day of the ISO-8601 week",2],["DatetimeInterface::endOfWeek","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_endOfWeek","()","Resets the date to end of the ISO-8601 week (Sunday)",2],["DatetimeInterface::next","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_next","(int $dayOfWeek)","Modify to the next occurance of a given day of the",2],["DatetimeInterface::previous","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_previous","(int $dayOfWeek)","Modify to the previous occurance of a given day of",2],["DatetimeInterface::firstOfMonth","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_firstOfMonth","(int $dayOfWeek)","Modify to the first occurance of a given day of the",2],["DatetimeInterface::lastOfMonth","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_lastOfMonth","(int $dayOfWeek)","Modify to the last occurance of a given day of the",2],["DatetimeInterface::nthOfMonth","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_nthOfMonth","(int $nth, int $dayOfWeek)","Modify to the given occurance of a given day of the",2],["DatetimeInterface::firstOfQuarter","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_firstOfQuarter","(int $dayOfWeek)","Modify to the first occurance of a given day of the",2],["DatetimeInterface::lastOfQuarter","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_lastOfQuarter","(int $dayOfWeek)","Modify to the last occurance of a given day of the",2],["DatetimeInterface::nthOfQuarter","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_nthOfQuarter","(int $nth, int $dayOfWeek)","Modify to the given occurance of a given day of the",2],["DatetimeInterface::firstOfYear","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_firstOfYear","(int $dayOfWeek)","Modify to the first occurance of a given day of the",2],["DatetimeInterface::lastOfYear","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_lastOfYear","(int $dayOfWeek)","Modify to the last occurance of a given day of the",2],["DatetimeInterface::nthOfYear","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_nthOfYear","(int $nth, int $dayOfWeek)","Modify to the given occurance of a given day of the",2],["DatetimeInterface::average","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_average","(<a href=\"Asgard\/Common\/DatetimeInterface.html\"><abbr title=\"Asgard\\Common\\DatetimeInterface\">DatetimeInterface<\/abbr><\/a> $dt)","Modify the current instance to the average of a given",2],["DatetimeInterface::isBirthday","Asgard\\Common\\DatetimeInterface","Asgard\/Common\/DatetimeInterface.html#method_isBirthday","(<a href=\"Asgard\/Common\/DatetimeInterface.html\"><abbr title=\"Asgard\\Common\\DatetimeInterface\">DatetimeInterface<\/abbr><\/a> $dt)","Check if its the birthday.",2],["Intl::singleton","Asgard\\Common\\Intl","Asgard\/Common\/Intl.html#method_singleton","()","",2],["Intl::__construct","Asgard\\Common\\Intl","Asgard\/Common\/Intl.html#method___construct","()","",2],["Intl::setTranslator","Asgard\\Common\\Intl","Asgard\/Common\/Intl.html#method_setTranslator","(<abbr title=\"Asgard\\Common\\Symfony\\Component\\Translation\\TranslatorInterface\">TranslatorInterface<\/abbr> $translator)","",2],["Intl::getCountry","Asgard\\Common\\Intl","Asgard\/Common\/Intl.html#method_getCountry","($code, $def = null)","",2],["Intl::setCountryNames","Asgard\\Common\\Intl","Asgard\/Common\/Intl.html#method_setCountryNames","(array $names)","",2],["Intl::getCountryNames","Asgard\\Common\\Intl","Asgard\/Common\/Intl.html#method_getCountryNames","()","",2],["Paginator::__construct","Asgard\\Common\\Paginator","Asgard\/Common\/Paginator.html#method___construct","(integer $total, integer $page = 1, integer $per_page = 10, <a href=\"Asgard\/Http\/Request.html\"><abbr title=\"Asgard\\Http\\Request\">Request<\/abbr><\/a> $request = null)","Constructor.",2],["Paginator::getPerPage","Asgard\\Common\\Paginator","Asgard\/Common\/Paginator.html#method_getPerPage","()","Get limit.",2],["Paginator::getPages","Asgard\\Common\\Paginator","Asgard\/Common\/Paginator.html#method_getPages","()","Get number of pages.",2],["Paginator::getFirst","Asgard\\Common\\Paginator","Asgard\/Common\/Paginator.html#method_getFirst","()","Get first element position.",2],["Paginator::getLast","Asgard\\Common\\Paginator","Asgard\/Common\/Paginator.html#method_getLast","()","Get last element position.",2],["Paginator::render","Asgard\\Common\\Paginator","Asgard\/Common\/Paginator.html#method_render","()","Render the pagination.",2],["Paginator::hasPrev","Asgard\\Common\\Paginator","Asgard\/Common\/Paginator.html#method_hasPrev","()","Check if has previous page.",2],["Paginator::hasNext","Asgard\\Common\\Paginator","Asgard\/Common\/Paginator.html#method_hasNext","()","Check if has next page.",2],["Paginator::getPrev","Asgard\\Common\\Paginator","Asgard\/Common\/Paginator.html#method_getPrev","()","Get the previous page url.",2],["Paginator::getNext","Asgard\\Common\\Paginator","Asgard\/Common\/Paginator.html#method_getNext","()","Get the next page url.",2],["PaginatorFactory::__construct","Asgard\\Common\\PaginatorFactory","Asgard\/Common\/PaginatorFactory.html#method___construct","(<abbr title=\"Asgard\\Common\\Asgard\\Http\\HttpKernel\">HttpKernel<\/abbr> $httpKernel = null)","Constructor.",2],["PaginatorFactory::create","Asgard\\Common\\PaginatorFactory","Asgard\/Common\/PaginatorFactory.html#method_create","(integer $total, integer $page = 1, integer $per_page = 10, <abbr title=\"Asgard\\Common\\Asgard\\Http\\Request\">Request<\/abbr> $request = null)","Create a new instance.",2],["PaginatorFactoryInterface::create","Asgard\\Common\\PaginatorFactoryInterface","Asgard\/Common\/PaginatorFactoryInterface.html#method_create","(integer $total, integer $page = 1, integer $per_page = 10, <abbr title=\"Asgard\\Common\\Asgard\\Http\\Request\">Request<\/abbr> $request = null)","Create a new instance.",2],["PaginatorInterface::getPerPage","Asgard\\Common\\PaginatorInterface","Asgard\/Common\/PaginatorInterface.html#method_getPerPage","()","Get limit.",2],["PaginatorInterface::getPages","Asgard\\Common\\PaginatorInterface","Asgard\/Common\/PaginatorInterface.html#method_getPages","()","Get number of pages.",2],["PaginatorInterface::getFirst","Asgard\\Common\\PaginatorInterface","Asgard\/Common\/PaginatorInterface.html#method_getFirst","()","Get first element position.",2],["PaginatorInterface::getLast","Asgard\\Common\\PaginatorInterface","Asgard\/Common\/PaginatorInterface.html#method_getLast","()","Get last element position.",2],["PaginatorInterface::render","Asgard\\Common\\PaginatorInterface","Asgard\/Common\/PaginatorInterface.html#method_render","()","Render the pagination.",2],["PaginatorInterface::hasPrev","Asgard\\Common\\PaginatorInterface","Asgard\/Common\/PaginatorInterface.html#method_hasPrev","()","Check if has previous page.",2],["PaginatorInterface::hasNext","Asgard\\Common\\PaginatorInterface","Asgard\/Common\/PaginatorInterface.html#method_hasNext","()","Check if has next page.",2],["PaginatorInterface::getPrev","Asgard\\Common\\PaginatorInterface","Asgard\/Common\/PaginatorInterface.html#method_getPrev","()","Get the previous page url.",2],["PaginatorInterface::getNext","Asgard\\Common\\PaginatorInterface","Asgard\/Common\/PaginatorInterface.html#method_getNext","()","Get the next page url.",2],["Session::singleton","Asgard\\Common\\Session","Asgard\/Common\/Session.html#method_singleton","()","",2],["Session::setSingleton","Asgard\\Common\\Session","Asgard\/Common\/Session.html#method_setSingleton","($singleton)","",2],["Session::__construct","Asgard\\Common\\Session","Asgard\/Common\/Session.html#method___construct","()","Constructor.",2],["Session::all","Asgard\\Common\\Session","Asgard\/Common\/Session.html#method_all","()","Return all session variables.",2],["Session::clear","Asgard\\Common\\Session","Asgard\/Common\/Session.html#method_clear","()","Clear all session variables.",2],["Session::count","Asgard\\Common\\Session","Asgard\/Common\/Session.html#method_count","()","Return the number of session variables.",2],["Session::setAll","Asgard\\Common\\Session","Asgard\/Common\/Session.html#method_setAll","(array $data)","Set all session variables.",2],["Session::has","Asgard\\Common\\Session","Asgard\/Common\/Session.html#method_has","(string $path)","Check if the session has a variable.",2],["Session::delete","Asgard\\Common\\Session","Asgard\/Common\/Session.html#method_delete","(string $path)","Delete a session variable.",2],["Session::get","Asgard\\Common\\Session","Asgard\/Common\/Session.html#method_get","(string $path, mixed $default = null)","Get a session variable.",2],["Session::set","Asgard\\Common\\Session","Asgard\/Common\/Session.html#method_set","(array|string $path, mixed $value = null)","Set a session variable.",2],["Session::offsetSet","Asgard\\Common\\Session","Asgard\/Common\/Session.html#method_offsetSet","(string $offset, mixed $value)","Array set implementation.",2],["Session::offsetExists","Asgard\\Common\\Session","Asgard\/Common\/Session.html#method_offsetExists","(string $offset)","Array exists implementation.",2],["Session::offsetUnset","Asgard\\Common\\Session","Asgard\/Common\/Session.html#method_offsetUnset","(string $offset)","Array unset implementation.",2],["Session::offsetGet","Asgard\\Common\\Session","Asgard\/Common\/Session.html#method_offsetGet","(string $offset)","Array get implementation.",2],["Time::__toString","Asgard\\Common\\Time","Asgard\/Common\/Time.html#method___toString","()","Returns a date string.",2],["Tools::truncateHTML","Asgard\\Common\\Tools","Asgard\/Common\/Tools.html#method_truncateHTML","(string $html, integer $maxLength, string $trailing = &#039;...&#039;)","Truncate HTML code.",2],["Tools::truncate","Asgard\\Common\\Tools","Asgard\/Common\/Tools.html#method_truncate","(string $str, integer $length, string $trailing = &#039;...&#039;)","Truncate a string.",2],["Tools::truncateWords","Asgard\\Common\\Tools","Asgard\/Common\/Tools.html#method_truncateWords","(string $str, integer $length, string $trailing = &#039;...&#039;)","Truncate a string by words.",2],["Tools::removeAccents","Asgard\\Common\\Tools","Asgard\/Common\/Tools.html#method_removeAccents","(string $str, string $charset = &#039;utf-8&#039;)","Remove accents.",2],["Tools::randstr","Asgard\\Common\\Tools","Asgard\/Common\/Tools.html#method_randstr","(integer $length = 10, string $validCharacters = &#039;abcdefghijklmnopqrstuxyvwzABCDEFGHIJKLMNOPQRSTUXYVWZ0123456789&#039;)","Generate a random string.",2],["Tools::loadClassFile","Asgard\\Common\\Tools","Asgard\/Common\/Tools.html#method_loadClassFile","(string $file)","Load a file and return the class contained in the file.",2],["Zip::zip","Asgard\\Common\\Zip","Asgard\/Common\/Zip.html#method_zip","(string $source, string $destination)","Zipper.",2],["InitCommand::__construct","Asgard\\Config\\Commands\\InitCommand","Asgard\/Config\/Commands\/InitCommand.html#method___construct","(string $dir)","Constructor.",2],["Config::__construct","Asgard\\Config\\Config","Asgard\/Config\/Config.html#method___construct","($cache = null)","Constructor.",2],["Config::loadDir","Asgard\\Config\\Config","Asgard\/Config\/Config.html#method_loadDir","(string $dir, string $env = null)","Load a directory.",2],["Config::loadFile","Asgard\\Config\\Config","Asgard\/Config\/Config.html#method_loadFile","(string $filename)","Load a file.",2],["ConfigInterface::loadDir","Asgard\\Config\\ConfigInterface","Asgard\/Config\/ConfigInterface.html#method_loadDir","(string $dir, string $env = null)","Load a directory.",2],["ConfigInterface::loadFile","Asgard\\Config\\ConfigInterface","Asgard\/Config\/ConfigInterface.html#method_loadFile","(string $filename)","Load a file.",2],["Application::__construct","Asgard\\Console\\Application","Asgard\/Console\/Application.html#method___construct","(string $name, string $version = null, <abbr title=\"Asgard\\Console\\Asgard\\Container\\ContainerInterface\">ContainerInterface<\/abbr> $container = null)","Constructor.",2],["Command::__construct","Asgard\\Console\\Command","Asgard\/Console\/Command.html#method___construct","()","Constructor.",2],["Command::run","Asgard\\Console\\Command","Asgard\/Console\/Command.html#method_run","(<abbr title=\"Symfony\\Component\\Console\\Input\\InputInterface\">InputInterface<\/abbr> $input, <abbr title=\"Symfony\\Component\\Console\\Output\\OutputInterface\">OutputInterface<\/abbr> $output)","Run the command.",2],["Command::call","Asgard\\Console\\Command","Asgard\/Console\/Command.html#method_call","(string $command, array $arguments = array())","Call another command.",2],["Command::callSilent","Asgard\\Console\\Command","Asgard\/Console\/Command.html#method_callSilent","(string $command, array $arguments = array())","Call another command silently.",2],["Command::confirm","Asgard\\Console\\Command","Asgard\/Console\/Command.html#method_confirm","(string $questionStr)","Prompt user for confirmation.",2],["Command::info","Asgard\\Console\\Command","Asgard\/Console\/Command.html#method_info","(string $msg)","Output information message.",2],["Command::error","Asgard\\Console\\Command","Asgard\/Console\/Command.html#method_error","(string $msg)","Output error message.",2],["Command::comment","Asgard\\Console\\Command","Asgard\/Console\/Command.html#method_comment","(string $msg)","Output comment message.",2],["Command::question","Asgard\\Console\\Command","Asgard\/Console\/Command.html#method_question","(string $msg)","Output question message.",2],["Command::getOutput","Asgard\\Console\\Command","Asgard\/Console\/Command.html#method_getOutput","()","",2],["ListCommand::__construct","Asgard\\Container\\Commands\\ListCommand","Asgard\/Container\/Commands\/ListCommand.html#method___construct","(string $root)","Constructor.",2],["Container::__construct","Asgard\\Container\\Container","Asgard\/Container\/Container.html#method___construct","(array $instances = array())","Constructor.",2],["Container::setParentClass","Asgard\\Container\\Container","Asgard\/Container\/Container.html#method_setParentClass","(string $name, string $parent, boolean $force = false)","Set a service parent class.",2],["Container::getParentClass","Asgard\\Container\\Container","Asgard\/Container\/Container.html#method_getParentClass","(string $name)","Return the parent class.",2],["Container::getRegistry","Asgard\\Container\\Container","Asgard\/Container\/Container.html#method_getRegistry","()","Get the registry.",2],["Container::getInstances","Asgard\\Container\\Container","Asgard\/Container\/Container.html#method_getInstances","()","Get the instances.",2],["Container::singleton","Asgard\\Container\\Container","Asgard\/Container\/Container.html#method_singleton","()","Get the default instance.",2],["Container::setInstance","Asgard\\Container\\Container","Asgard\/Container\/Container.html#method_setInstance","(<a href=\"Asgard\/Container\/ContainerInterface.html\"><abbr title=\"Asgard\\Container\\ContainerInterface\">ContainerInterface<\/abbr><\/a> $instance)","Set the default instance.",2],["Container::setAutofacade","Asgard\\Container\\Container","Asgard\/Container\/Container.html#method_setAutofacade","(boolean $facade)","Set autofacade to true or false.",2],["Container::get","Asgard\\Container\\Container","Asgard\/Container\/Container.html#method_get","(string $name)","Get a service.",2],["Container::set","Asgard\\Container\\Container","Asgard\/Container\/Container.html#method_set","(string $name, mixed $value)","Set a service.",2],["Container::has","Asgard\\Container\\Container","Asgard\/Container\/Container.html#method_has","(string $name)","Check if has a service.",2],["Container::remove","Asgard\\Container\\Container","Asgard\/Container\/Container.html#method_remove","(string $name)","Remove a service.",2],["Container::register","Asgard\\Container\\Container","Asgard\/Container\/Container.html#method_register","(string $name, callable $callback, boolean $persist = true)","Register a service.",2],["Container::make","Asgard\\Container\\Container","Asgard\/Container\/Container.html#method_make","(string $name, array $params = array(), mixed $default = null)","Make a service.",2],["Container::registered","Asgard\\Container\\Container","Asgard\/Container\/Container.html#method_registered","(string $name)","Check if a service was registered.",2],["Container::createFactory","Asgard\\Container\\Container","Asgard\/Container\/Container.html#method_createFactory","(string|callable $what)","Create a factory.",2],["Container::offsetSet","Asgard\\Container\\Container","Asgard\/Container\/Container.html#method_offsetSet","($offset, $value)","{@inheritDoc}",2],["Container::offsetExists","Asgard\\Container\\Container","Asgard\/Container\/Container.html#method_offsetExists","($offset)","{@inheritDoc}",2],["Container::offsetUnset","Asgard\\Container\\Container","Asgard\/Container\/Container.html#method_offsetUnset","($offset)","{@inheritDoc}",2],["Container::offsetGet","Asgard\\Container\\Container","Asgard\/Container\/Container.html#method_offsetGet","($offset)","{@inheritDoc}",2],["Container::__wakeup","Asgard\\Container\\Container","Asgard\/Container\/Container.html#method___wakeup","()","__wakeup magic method",2],["ContainerAwareTrait::setContainer","Asgard\\Container\\ContainerAwareTrait","Asgard\/Container\/ContainerAwareTrait.html#method_setContainer","(<a href=\"Asgard\/Container\/ContainerInterface.html\"><abbr title=\"Asgard\\Container\\ContainerInterface\">ContainerInterface<\/abbr><\/a> $container = null)","Set the container.",2],["ContainerAwareTrait::getContainer","Asgard\\Container\\ContainerAwareTrait","Asgard\/Container\/ContainerAwareTrait.html#method_getContainer","()","Get the container.",2],["ContainerInterface::setParentClass","Asgard\\Container\\ContainerInterface","Asgard\/Container\/ContainerInterface.html#method_setParentClass","(string $name, string $parent, boolean $force = false)","Set a service parent class.",2],["ContainerInterface::getParentClass","Asgard\\Container\\ContainerInterface","Asgard\/Container\/ContainerInterface.html#method_getParentClass","(string $name)","Return the parent class.",2],["ContainerInterface::getRegistry","Asgard\\Container\\ContainerInterface","Asgard\/Container\/ContainerInterface.html#method_getRegistry","()","Get the registry.",2],["ContainerInterface::getInstances","Asgard\\Container\\ContainerInterface","Asgard\/Container\/ContainerInterface.html#method_getInstances","()","Get the instances.",2],["ContainerInterface::setAutofacade","Asgard\\Container\\ContainerInterface","Asgard\/Container\/ContainerInterface.html#method_setAutofacade","(boolean $facade)","Set autofacade to true or false.",2],["ContainerInterface::get","Asgard\\Container\\ContainerInterface","Asgard\/Container\/ContainerInterface.html#method_get","(string $name)","Get a service.",2],["ContainerInterface::set","Asgard\\Container\\ContainerInterface","Asgard\/Container\/ContainerInterface.html#method_set","(string $name, mixed $value)","Set a service.",2],["ContainerInterface::has","Asgard\\Container\\ContainerInterface","Asgard\/Container\/ContainerInterface.html#method_has","(string $name)","Check if has a service.",2],["ContainerInterface::remove","Asgard\\Container\\ContainerInterface","Asgard\/Container\/ContainerInterface.html#method_remove","(string $name)","Remove a service.",2],["ContainerInterface::register","Asgard\\Container\\ContainerInterface","Asgard\/Container\/ContainerInterface.html#method_register","(string $name, callable $callback, boolean $persist = true)","Register a service.",2],["ContainerInterface::make","Asgard\\Container\\ContainerInterface","Asgard\/Container\/ContainerInterface.html#method_make","(string $name, array $params = array(), mixed $default = null)","Make a service.",2],["ContainerInterface::registered","Asgard\\Container\\ContainerInterface","Asgard\/Container\/ContainerInterface.html#method_registered","(string $name)","Check if a service was registered.",2],["ContainerInterface::createFactory","Asgard\\Container\\ContainerInterface","Asgard\/Container\/ContainerInterface.html#method_createFactory","(string|callable $what)","Create a factory.",2],["ContainerInterface::__wakeup","Asgard\\Container\\ContainerInterface","Asgard\/Container\/ContainerInterface.html#method___wakeup","()","__wakeup magic method",2],["Facade::__callStatic","Asgard\\Container\\Facade","Asgard\/Container\/Facade.html#method___callStatic","(string $name, array $args)","__callStatic magic method.",2],["Facade::inst","Asgard\\Container\\Facade","Asgard\/Container\/Facade.html#method_inst","()","Return the instance.",2],["Factory::__construct","Asgard\\Container\\Factory","Asgard\/Container\/Factory.html#method___construct","(callable $callback, <a href=\"Asgard\/Container\/ContainerInterface.html\"><abbr title=\"Asgard\\Container\\ContainerInterface\">ContainerInterface<\/abbr><\/a> $container = null)","Constructor.",2],["Factory::create","Asgard\\Container\\Factory","Asgard\/Container\/Factory.html#method_create","(array $params = array())","Create an instance.",2],["Bundle::buildContainer","Asgard\\Core\\Bundle","Asgard\/Core\/Bundle.html#method_buildContainer","(<abbr title=\"Asgard\\Core\\Asgard\\Container\\ContainerInterface\">ContainerInterface<\/abbr> $container)","Register services.",2],["Bundle::run","Asgard\\Core\\Bundle","Asgard\/Core\/Bundle.html#method_run","(<abbr title=\"Asgard\\Core\\Asgard\\Container\\ContainerInterface\">ContainerInterface<\/abbr> $container)","Run the bundle.",2],["BundleLoader::__construct","Asgard\\Core\\BundleLoader","Asgard\/Core\/BundleLoader.html#method___construct","()","Constructor.",2],["BundleLoader::setHooksAnnotationReader","Asgard\\Core\\BundleLoader","Asgard\/Core\/BundleLoader.html#method_setHooksAnnotationReader","(<a href=\"Asgard\/Hook\/AnnotationReader.html\"><abbr title=\"Asgard\\Hook\\AnnotationReader\">AnnotationReader<\/abbr><\/a> $hooksAnnotationReader)","Set hooks annotations reader dependency.",2],["BundleLoader::setControllersAnnotationReader","Asgard\\Core\\BundleLoader","Asgard\/Core\/BundleLoader.html#method_setControllersAnnotationReader","(<a href=\"Asgard\/Http\/AnnotationReader.html\"><abbr title=\"Asgard\\Http\\AnnotationReader\">AnnotationReader<\/abbr><\/a> $controllersAnnotationReader)","Set controllers annotations reader dependency.",2],["BundleLoader::setPath","Asgard\\Core\\BundleLoader","Asgard\/Core\/BundleLoader.html#method_setPath","(string $path)","Set bundle path.",2],["BundleLoader::getPath","Asgard\\Core\\BundleLoader","Asgard\/Core\/BundleLoader.html#method_getPath","()","Get bundle path.",2],["BundleLoader::buildContainer","Asgard\\Core\\BundleLoader","Asgard\/Core\/BundleLoader.html#method_buildContainer","(<abbr title=\"Asgard\\Core\\Asgard\\Container\\ContainerInterface\">ContainerInterface<\/abbr> $container)","Register services.",2],["BundleLoader::run","Asgard\\Core\\BundleLoader","Asgard\/Core\/BundleLoader.html#method_run","(<abbr title=\"Asgard\\Core\\Asgard\\Container\\ContainerInterface\">ContainerInterface<\/abbr> $container)","Run the bundle.",2],["InstallCommand::__construct","Asgard\\Core\\Commands\\InstallCommand","Asgard\/Core\/Commands\/InstallCommand.html#method___construct","(<abbr title=\"Asgard\\Core\\Commands\\Asgard\\Db\\DBInterface\">DBInterface<\/abbr> $db = null, <abbr title=\"Asgard\\Core\\Commands\\Asgard\\Db\\SchemaInterface\">SchemaInterface<\/abbr> $schema = null)","Constructor.",2],["PublishCommand::__construct","Asgard\\Core\\Commands\\PublishCommand","Asgard\/Core\/Commands\/PublishCommand.html#method___construct","(<abbr title=\"Asgard\\Core\\Commands\\Asgard\\Db\\DBInterface\">DBInterface<\/abbr> $db = null, <abbr title=\"Asgard\\Core\\Commands\\Asgard\\Db\\SchemaInterface\">SchemaInterface<\/abbr> $schema = null)","Constructor.",2],["ShowEnvironmentCommand::__construct","Asgard\\Core\\Commands\\ShowEnvironmentCommand","Asgard\/Core\/Commands\/ShowEnvironmentCommand.html#method___construct","(<abbr title=\"Asgard\\Core\\Commands\\Asgard\\Core\\Kernel\">Kernel<\/abbr> $kernel)","Constructor.",2],["SwitchEnvironmentCommand::__construct","Asgard\\Core\\Commands\\SwitchEnvironmentCommand","Asgard\/Core\/Commands\/SwitchEnvironmentCommand.html#method___construct","(<abbr title=\"Asgard\\Core\\Commands\\Asgard\\Core\\Kernel\">Kernel<\/abbr> $kernel)","Constructor.",2],["Kernel::__construct","Asgard\\Core\\Kernel","Asgard\/Core\/Kernel.html#method___construct","(string $root = null, string $env = null)","Constructor.",2],["Kernel::setCache","Asgard\\Core\\Kernel","Asgard\/Core\/Kernel.html#method_setCache","($cache)","",2],["Kernel::getContainer","Asgard\\Core\\Kernel","Asgard\/Core\/Kernel.html#method_getContainer","()","Get the services container.",2],["Kernel::setConfig","Asgard\\Core\\Kernel","Asgard\/Core\/Kernel.html#method_setConfig","(<abbr title=\"Asgard\\Core\\Asgard\\Config\\ConfigInterface\">ConfigInterface<\/abbr> $config)","Set the config dependency.",2],["Kernel::getConfig","Asgard\\Core\\Kernel","Asgard\/Core\/Kernel.html#method_getConfig","()","Get the config dependency.",2],["Kernel::setRoot","Asgard\\Core\\Kernel","Asgard\/Core\/Kernel.html#method_setRoot","(string $root)","Set the application root.",2],["Kernel::setEnv","Asgard\\Core\\Kernel","Asgard\/Core\/Kernel.html#method_setEnv","(string $env)","Set the environment.",2],["Kernel::getEnv","Asgard\\Core\\Kernel","Asgard\/Core\/Kernel.html#method_getEnv","()","Get the environment.",2],["Kernel::load","Asgard\\Core\\Kernel","Asgard\/Core\/Kernel.html#method_load","()","Load the kernel.",2],["Kernel::getCache","Asgard\\Core\\Kernel","Asgard\/Core\/Kernel.html#method_getCache","()","Get the cache dependency.",2],["Kernel::getAllBundles","Asgard\\Core\\Kernel","Asgard\/Core\/Kernel.html#method_getAllBundles","()","Get all the bundles.",2],["Kernel::getHooksAnnotationReader","Asgard\\Core\\Kernel","Asgard\/Core\/Kernel.html#method_getHooksAnnotationReader","()","Get the hooks annotations reader dependency.",2],["Kernel::getControllersAnnotationReader","Asgard\\Core\\Kernel","Asgard\/Core\/Kernel.html#method_getControllersAnnotationReader","()","Get the controllers annotations reader dependency.",2],["Kernel::addBundles","Asgard\\Core\\Kernel","Asgard\/Core\/Kernel.html#method_addBundles","(array $bundles)","Add bundles.",2],["Kernel::getVersion","Asgard\\Core\\Kernel","Asgard\/Core\/Kernel.html#method_getVersion","()","Get the kernel version.",2],["Kernel::get","Asgard\\Core\\Kernel","Asgard\/Core\/Kernel.html#method_get","(string $name)","Get a parameter.",2],["Kernel::set","Asgard\\Core\\Kernel","Asgard\/Core\/Kernel.html#method_set","(string $name, mixed $value)","Set a parameter.",2],["Kernel::offsetSet","Asgard\\Core\\Kernel","Asgard\/Core\/Kernel.html#method_offsetSet","(integer $offset, mixed $value)","Array set implementation.",2],["Kernel::offsetExists","Asgard\\Core\\Kernel","Asgard\/Core\/Kernel.html#method_offsetExists","(integer $offset)","Array exists implementation.",2],["Kernel::offsetUnset","Asgard\\Core\\Kernel","Asgard\/Core\/Kernel.html#method_offsetUnset","(integer $offset)","Array unset implementation.",2],["Kernel::offsetGet","Asgard\\Core\\Kernel","Asgard\/Core\/Kernel.html#method_offsetGet","(integer $offset)","Array get implementation.",2],["Publisher::__construct","Asgard\\Core\\Publisher","Asgard\/Core\/Publisher.html#method___construct","(<abbr title=\"Asgard\\Core\\Asgard\\Db\\DBInterface\">DBInterface<\/abbr> $db, <abbr title=\"Asgard\\Core\\Asgard\\Db\\SchemaInterface\">SchemaInterface<\/abbr> $schema, <abbr title=\"Asgard\\Core\\Symfony\\Component\\Console\\Output\\OutputInterface\">OutputInterface<\/abbr> $output, <abbr title=\"Asgard\\Core\\Asgard\\Container\\ContainerInterface\">ContainerInterface<\/abbr> $container)","Constructor.",2],["Publisher::publish","Asgard\\Core\\Publisher","Asgard\/Core\/Publisher.html#method_publish","(string $src, string $dstDir)","Publish assets from a directory to another.",2],["Publisher::publishTests","Asgard\\Core\\Publisher","Asgard\/Core\/Publisher.html#method_publishTests","(string $src, string $dstDir)","Publish tests from a directory to another.",2],["Publisher::publishMigrations","Asgard\\Core\\Publisher","Asgard\/Core\/Publisher.html#method_publishMigrations","(string $src, string $dstDir, boolean $migrate)","Publish migration files.",2],["Publisher::copy","Asgard\\Core\\Publisher","Asgard\/Core\/Publisher.html#method_copy","(string $src, string $dst)","Copy files.",2],["CreateCommand::__construct","Asgard\\Db\\Commands\\CreateCommand","Asgard\/Db\/Commands\/CreateCommand.html#method___construct","(<abbr title=\"Asgard\\Db\\Commands\\Asgard\\Db\\DB\">DB<\/abbr> $db)","Constructor.",2],["EmptyCommand::__construct","Asgard\\Db\\Commands\\EmptyCommand","Asgard\/Db\/Commands\/EmptyCommand.html#method___construct","(<abbr title=\"Asgard\\Db\\Commands\\Asgard\\Db\\DBInterface\">DBInterface<\/abbr> $db)","Constructor.",2],["InitCommand::__construct","Asgard\\Db\\Commands\\InitCommand","Asgard\/Db\/Commands\/InitCommand.html#method___construct","(string $dir)","Constructor.",2],["DAL::__construct","Asgard\\Db\\DAL","Asgard\/Db\/DAL.html#method___construct","(<a href=\"Asgard\/Db\/DBInterface.html\"><abbr title=\"Asgard\\Db\\DBInterface\">DBInterface<\/abbr><\/a> $db, string $tables = null)","Constructor.",2],["DAL::reverse","Asgard\\Db\\DAL","Asgard\/Db\/DAL.html#method_reverse","()","Reverse the query order.",2],["DAL::last","Asgard\\Db\\DAL","Asgard\/Db\/DAL.html#method_last","()","Return the last row.",2],["DAL::raw","Asgard\\Db\\DAL","Asgard\/Db\/DAL.html#method_raw","(string $sql)","Return a raw SQL object.",2],["DAL::getParameters","Asgard\\Db\\DAL","Asgard\/Db\/DAL.html#method_getParameters","()","Return the DAL parameters.",2],["DAL::from","Asgard\\Db\\DAL","Asgard\/Db\/DAL.html#method_from","(string|array|<abbr title=\"Asgard\\Db\\dal\">dal<\/abbr> $tables, string $alias = null)","Set FROM tables.",2],["DAL::into","Asgard\\Db\\DAL","Asgard\/Db\/DAL.html#method_into","(string $table)","INTO table.",2],["DAL::addFrom","Asgard\\Db\\DAL","Asgard\/Db\/DAL.html#method_addFrom","(string|array|<abbr title=\"Asgard\\Db\\dal\">dal<\/abbr> $tables)","Add FROM tables.",2],["DAL::removeFrom","Asgard\\Db\\DAL","Asgard\/Db\/DAL.html#method_removeFrom","(string $what)","Remove a FROM table.",2],["DAL::join","Asgard\\Db\\DAL","Asgard\/Db\/DAL.html#method_join","(string $type, string|array $table, string|array $conditions = null)","Create a jointure.",2],["DAL::leftjoin","Asgard\\Db\\DAL","Asgard\/Db\/DAL.html#method_leftjoin","(string|array $table, string|array $conditions = null)","Add a LEFT jointure.",2],["DAL::rightjoin","Asgard\\Db\\DAL","Asgard\/Db\/DAL.html#method_rightjoin","(string|array $table, string|array $conditions = null)","Add a RIGHT jointure.",2],["DAL::innerjoin","Asgard\\Db\\DAL","Asgard\/Db\/DAL.html#method_innerjoin","(string|array $table, string|array $conditions = null)","Add an INNER jointure.",2],["DAL::next","Asgard\\Db\\DAL","Asgard\/Db\/DAL.html#method_next","()","Return the next row.",2],["DAL::current","Asgard\\Db\\DAL","Asgard\/Db\/DAL.html#method_current","()","",2],["DAL::rewind","Asgard\\Db\\DAL","Asgard\/Db\/DAL.html#method_rewind","()","",2],["DAL::key","Asgard\\Db\\DAL","Asgard\/Db\/DAL.html#method_key","()","",2],["DAL::valid","Asgard\\Db\\DAL","Asgard\/Db\/DAL.html#method_valid","()","",2],["DAL::reset","Asgard\\Db\\DAL","Asgard\/Db\/DAL.html#method_reset","()","Reset all parameters.",2],["DAL::query","Asgard\\Db\\DAL","Asgard\/Db\/DAL.html#method_query","(string $sql = null, array $params = array())","Execute a query.",2],["DAL::first","Asgard\\Db\\DAL","Asgard\/Db\/DAL.html#method_first","()","Return the first row only.",2],["DAL::get","Asgard\\Db\\DAL","Asgard\/Db\/DAL.html#method_get","()","Return selected rows.",2],["DAL::paginate","Asgard\\Db\\DAL","Asgard\/Db\/DAL.html#method_paginate","(integer $page, integer $per_page = 10)","Paginate the results.",2],["DAL::setPaginatorFactory","Asgard\\Db\\DAL","Asgard\/Db\/DAL.html#method_setPaginatorFactory","(<abbr title=\"Asgard\\Db\\Asgard\\Common\\PaginatorFactoryInterface\">PaginatorFactoryInterface<\/abbr> $paginatorFactory)","Set the paginator factory.",2],["DAL::getPaginator","Asgard\\Db\\DAL","Asgard\/Db\/DAL.html#method_getPaginator","()","Get a paginator instance.",2],["DAL::select","Asgard\\Db\\DAL","Asgard\/Db\/DAL.html#method_select","(string|array $columns)","Set SELECT columns.",2],["DAL::addSelect","Asgard\\Db\\DAL","Asgard\/Db\/DAL.html#method_addSelect","(string|array $columns)","Add SELECT columns.",2],["DAL::removeSelect","Asgard\\Db\\DAL","Asgard\/Db\/DAL.html#method_removeSelect","(string $what)","Remove a SELECT column.",2],["DAL::offset","Asgard\\Db\\DAL","Asgard\/Db\/DAL.html#method_offset","(integer $offset)","Set offset.",2],["DAL::limit","Asgard\\Db\\DAL","Asgard\/Db\/DAL.html#method_limit","(integer $limit)","Set limit.",2],["DAL::orderBy","Asgard\\Db\\DAL","Asgard\/Db\/DAL.html#method_orderBy","(string $orderBy)","Set order by.",2],["DAL::groupBy","Asgard\\Db\\DAL","Asgard\/Db\/DAL.html#method_groupBy","(string $groupBy)","Set group by.",2],["DAL::where","Asgard\\Db\\DAL","Asgard\/Db\/DAL.html#method_where","(array|string $conditions, mixed $values = null)","Add WHERE conditions.",2],["DAL::having","Asgard\\Db\\DAL","Asgard\/Db\/DAL.html#method_having","($conditions, $values = null)","",2],["DAL::removeJointure","Asgard\\Db\\DAL","Asgard\/Db\/DAL.html#method_removeJointure","(string $alias)","Remove a jointure.",2],["DAL::isIdentifier","Asgard\\Db\\DAL","Asgard\/Db\/DAL.html#method_isIdentifier","(string $str)","Check if string is an identifier.",2],["DAL::buildSQL","Asgard\\Db\\DAL","Asgard\/Db\/DAL.html#method_buildSQL","($union = false)","Build a SELECT SQL query.",2],["DAL::buildUpdateSQL","Asgard\\Db\\DAL","Asgard\/Db\/DAL.html#method_buildUpdateSQL","(array $values)","Build an UPDATE SQL query.",2],["DAL::buildDeleteSQL","Asgard\\Db\\DAL","Asgard\/Db\/DAL.html#method_buildDeleteSQL","(array $del_tables = array())","Build a DELETE SQL query.",2],["DAL::replaceTableInConditions","Asgard\\Db\\DAL","Asgard\/Db\/DAL.html#method_replaceTableInConditions","(array $conditions, string $oldTable, string $newTable)","Replace an alias in conditions.",2],["DAL::replaceTable","Asgard\\Db\\DAL","Asgard\/Db\/DAL.html#method_replaceTable","(string $oldTable, string $newTable)","Replace an alias with a new one in the conditions,",2],["DAL::buildInsertSQL","Asgard\\Db\\DAL","Asgard\/Db\/DAL.html#method_buildInsertSQL","(array $values)","Build an INSERT SQL query.",2],["DAL::values","Asgard\\Db\\DAL","Asgard\/Db\/DAL.html#method_values","(string $column)","Return all values of a column.",2],["DAL::update","Asgard\\Db\\DAL","Asgard\/Db\/DAL.html#method_update","(array $values)","Update rows.",2],["DAL::insert","Asgard\\Db\\DAL","Asgard\/Db\/DAL.html#method_insert","(array $values)","Insert rows.",2],["DAL::delete","Asgard\\Db\\DAL","Asgard\/Db\/DAL.html#method_delete","(array $tables = array())","Delete rows.",2],["DAL::count","Asgard\\Db\\DAL","Asgard\/Db\/DAL.html#method_count","(string $what = null, string $group_by = null)","Count number of rows.",2],["DAL::min","Asgard\\Db\\DAL","Asgard\/Db\/DAL.html#method_min","(string $what, string $group_by = null)","Return the minimum value.",2],["DAL::max","Asgard\\Db\\DAL","Asgard\/Db\/DAL.html#method_max","(string $what, string $group_by = null)","Return the maximum value.",2],["DAL::avg","Asgard\\Db\\DAL","Asgard\/Db\/DAL.html#method_avg","(string $what, string $group_by = null)","Return the average value.",2],["DAL::sum","Asgard\\Db\\DAL","Asgard\/Db\/DAL.html#method_sum","(string $what, string $group_by = null)","Return the sum.",2],["DAL::dbgSelect","Asgard\\Db\\DAL","Asgard\/Db\/DAL.html#method_dbgSelect","()","Compute the sql query for debugging.",2],["DAL::dbgUpdate","Asgard\\Db\\DAL","Asgard\/Db\/DAL.html#method_dbgUpdate","(array $values)","Compute the update sql query for debugging.",2],["DAL::dbgInsert","Asgard\\Db\\DAL","Asgard\/Db\/DAL.html#method_dbgInsert","(array $values)","Conpute the insert sql query for debugging.",2],["DAL::dbgDelete","Asgard\\Db\\DAL","Asgard\/Db\/DAL.html#method_dbgDelete","()","Compute the delete sql query for debugging.",2],["DAL::union","Asgard\\Db\\DAL","Asgard\/Db\/DAL.html#method_union","(array|<a href=\"Asgard\/Db\/DAL.html\"><abbr title=\"Asgard\\Db\\DAL\">DAL<\/abbr><\/a> $dals)","Add UNIONs.",2],["DB::__construct","Asgard\\Db\\DB","Asgard\/Db\/DB.html#method___construct","(array $config, <abbr title=\"Asgard\\Db\\PDO\">PDO<\/abbr> $pdo = null)","Constructor.",2],["DB::dal","Asgard\\Db\\DB","Asgard\/Db\/DB.html#method_dal","()","Return a DAL instance.",2],["DB::buildPDO","Asgard\\Db\\DB","Asgard\/Db\/DB.html#method_buildPDO","(array $config = null)","Build the PDO instance.",2],["DB::getPDO","Asgard\\Db\\DB","Asgard\/Db\/DB.html#method_getPDO","()","Get the PDO instance.",2],["DB::getConfig","Asgard\\Db\\DB","Asgard\/Db\/DB.html#method_getConfig","()","Return the configuration.",2],["DB::query","Asgard\\Db\\DB","Asgard\/Db\/DB.html#method_query","(string $sql, array $args = array())","Execute an SQL query.",2],["DB::id","Asgard\\Db\\DB","Asgard\/Db\/DB.html#method_id","()","Return the last inserted id.",2],["DB::beginTransaction","Asgard\\Db\\DB","Asgard\/Db\/DB.html#method_beginTransaction","()","Start a new SQL transaction.",2],["DB::commit","Asgard\\Db\\DB","Asgard\/Db\/DB.html#method_commit","()","Commit the SQL transaction.",2],["DB::rollback","Asgard\\Db\\DB","Asgard\/Db\/DB.html#method_rollback","()","Roll back the SQL transaction.",2],["DB::close","Asgard\\Db\\DB","Asgard\/Db\/DB.html#method_close","()","{@inheritDoc}",2],["DB::getSchema","Asgard\\Db\\DB","Asgard\/Db\/DB.html#method_getSchema","()","",2],["DB::getConn","Asgard\\Db\\DB","Asgard\/Db\/DB.html#method_getConn","()","",2],["DBInterface::dal","Asgard\\Db\\DBInterface","Asgard\/Db\/DBInterface.html#method_dal","()","Return a DAL instance.",2],["DBInterface::getConfig","Asgard\\Db\\DBInterface","Asgard\/Db\/DBInterface.html#method_getConfig","()","Return the configuration.",2],["DBInterface::getPDO","Asgard\\Db\\DBInterface","Asgard\/Db\/DBInterface.html#method_getPDO","()","Return the database instance.",2],["DBInterface::query","Asgard\\Db\\DBInterface","Asgard\/Db\/DBInterface.html#method_query","(string $sql, array $args = array())","Execute an SQL query.",2],["DBInterface::id","Asgard\\Db\\DBInterface","Asgard\/Db\/DBInterface.html#method_id","()","Return the last inserted id.",2],["DBInterface::beginTransaction","Asgard\\Db\\DBInterface","Asgard\/Db\/DBInterface.html#method_beginTransaction","()","Start a new SQL transaction.",2],["DBInterface::commit","Asgard\\Db\\DBInterface","Asgard\/Db\/DBInterface.html#method_commit","()","Commit the SQL transaction.",2],["DBInterface::rollback","Asgard\\Db\\DBInterface","Asgard\/Db\/DBInterface.html#method_rollback","()","Roll back the SQL transaction.",2],["MySQL::__construct","Asgard\\Db\\MySQL","Asgard\/Db\/MySQL.html#method___construct","(array $config)","Constructor.",2],["MySQL::import","Asgard\\Db\\MySQL","Asgard\/Db\/MySQL.html#method_import","(string $src)","Import an SQL file.",2],["MySQL::dump","Asgard\\Db\\MySQL","Asgard\/Db\/MySQL.html#method_dump","(string $dst)","Dump an SQL file.",2],["Query::__construct","Asgard\\Db\\Query","Asgard\/Db\/Query.html#method___construct","(<abbr title=\"Asgard\\Db\\PDO\">PDO<\/abbr> $pdo, string $sql, array $args = array())","Constructor.",2],["Query::next","Asgard\\Db\\Query","Asgard\/Db\/Query.html#method_next","()","Return the next row.",2],["Query::affected","Asgard\\Db\\Query","Asgard\/Db\/Query.html#method_affected","()","Return the number of affected rows.",2],["Query::count","Asgard\\Db\\Query","Asgard\/Db\/Query.html#method_count","()","Count the results.",2],["Query::first","Asgard\\Db\\Query","Asgard\/Db\/Query.html#method_first","()","Return the first row only.",2],["Query::all","Asgard\\Db\\Query","Asgard\/Db\/Query.html#method_all","()","Return all rows at once.",2],["Raw::__construct","Asgard\\Db\\Raw","Asgard\/Db\/Raw.html#method___construct","(string $sql)","Constructor.",2],["Raw::__toString","Asgard\\Db\\Raw","Asgard\/Db\/Raw.html#method___toString","()","__toString magic method.",2],["Schema::__construct","Asgard\\Db\\Schema","Asgard\/Db\/Schema.html#method___construct","(<a href=\"Asgard\/Db\/DBInterface.html\"><abbr title=\"Asgard\\Db\\DBInterface\">DBInterface<\/abbr><\/a> $db)","Constructor.",2],["Schema::emptyAll","Asgard\\Db\\Schema","Asgard\/Db\/Schema.html#method_emptyAll","()","Empty all tables.",2],["Schema::dropAll","Asgard\\Db\\Schema","Asgard\/Db\/Schema.html#method_dropAll","()","Drop all tables.",2],["Schema::listTables","Asgard\\Db\\Schema","Asgard\/Db\/Schema.html#method_listTables","()","",2],["Schema::hasTable","Asgard\\Db\\Schema","Asgard\/Db\/Schema.html#method_hasTable","($table)","",2],["Schema::create","Asgard\\Db\\Schema","Asgard\/Db\/Schema.html#method_create","(string $tableName, callable $cb)","Create a table.",2],["Schema::emptyTable","Asgard\\Db\\Schema","Asgard\/Db\/Schema.html#method_emptyTable","(string $tableName)","Empty a table.",2],["Schema::drop","Asgard\\Db\\Schema","Asgard\/Db\/Schema.html#method_drop","(string $table)","Drop a table.",2],["Schema::rename","Asgard\\Db\\Schema","Asgard\/Db\/Schema.html#method_rename","(string $from, string $to)","Rename a table.",2],["Schema::table","Asgard\\Db\\Schema","Asgard\/Db\/Schema.html#method_table","(string $tableName, callable $cb = null)","Update a table.",2],["Schema::renameColumn","Asgard\\Db\\Schema","Asgard\/Db\/Schema.html#method_renameColumn","(string $table, string $old, string $new, string $type = null)","Rename a column.",2],["Schema::getConn","Asgard\\Db\\Schema","Asgard\/Db\/Schema.html#method_getConn","()","Return a doctrine connection instance.",2],["Schema::getPlatform","Asgard\\Db\\Schema","Asgard\/Db\/Schema.html#method_getPlatform","()","Return a doctrine platform.",2],["Schema::getSchemaManager","Asgard\\Db\\Schema","Asgard\/Db\/Schema.html#method_getSchemaManager","()","Return a doctrine schema manager.",2],["SchemaInterface::emptyAll","Asgard\\Db\\SchemaInterface","Asgard\/Db\/SchemaInterface.html#method_emptyAll","()","Empty all tables.",2],["SchemaInterface::dropAll","Asgard\\Db\\SchemaInterface","Asgard\/Db\/SchemaInterface.html#method_dropAll","()","Drop all tables.",2],["SchemaInterface::create","Asgard\\Db\\SchemaInterface","Asgard\/Db\/SchemaInterface.html#method_create","(string $tableName, callable $cb)","Create a table.",2],["SchemaInterface::emptyTable","Asgard\\Db\\SchemaInterface","Asgard\/Db\/SchemaInterface.html#method_emptyTable","(string $tableName)","Empty a table.",2],["SchemaInterface::drop","Asgard\\Db\\SchemaInterface","Asgard\/Db\/SchemaInterface.html#method_drop","(string $table)","Drop a table.",2],["SchemaInterface::rename","Asgard\\Db\\SchemaInterface","Asgard\/Db\/SchemaInterface.html#method_rename","(string $from, string $to)","Rename a table.",2],["SchemaInterface::table","Asgard\\Db\\SchemaInterface","Asgard\/Db\/SchemaInterface.html#method_table","(string $tableName, callable $cb)","Update a table.",2],["SchemaInterface::renameColumn","Asgard\\Db\\SchemaInterface","Asgard\/Db\/SchemaInterface.html#method_renameColumn","(string $table, string $old, string $new, string $type = null)","Rename a column.",2],["SchemaInterface::getConn","Asgard\\Db\\SchemaInterface","Asgard\/Db\/SchemaInterface.html#method_getConn","()","Return a doctrine connection instance.",2],["SchemaInterface::getPlatform","Asgard\\Db\\SchemaInterface","Asgard\/Db\/SchemaInterface.html#method_getPlatform","()","Return a doctrine platform.",2],["SchemaInterface::getSchemaManager","Asgard\\Db\\SchemaInterface","Asgard\/Db\/SchemaInterface.html#method_getSchemaManager","()","Return a doctrine schema manager.",2],["SchemaTable::__construct","Asgard\\Db\\SchemaTable","Asgard\/Db\/SchemaTable.html#method___construct","($table)","",2],["SchemaTable::__call","Asgard\\Db\\SchemaTable","Asgard\/Db\/SchemaTable.html#method___call","($name, $args)","",2],["SchemaTable::getTable","Asgard\\Db\\SchemaTable","Asgard\/Db\/SchemaTable.html#method_getTable","()","",2],["SchemaTable::getRenamedColumns","Asgard\\Db\\SchemaTable","Asgard\/Db\/SchemaTable.html#method_getRenamedColumns","()","",2],["SchemaTable::rename","Asgard\\Db\\SchemaTable","Asgard\/Db\/SchemaTable.html#method_rename","($oldName, $newName)","",2],["SchemaTable::addColumn","Asgard\\Db\\SchemaTable","Asgard\/Db\/SchemaTable.html#method_addColumn","($name, $type, $params = array())","",2],["SchemaTable::changeColumn","Asgard\\Db\\SchemaTable","Asgard\/Db\/SchemaTable.html#method_changeColumn","($name, $params)","",2],["Debug::d","Asgard\\Debug\\Debug","Asgard\/Debug\/Debug.html#method_d","()","Create the backtrace and forward it to dWithTrace.",2],["Debug::dWithTrace","Asgard\\Debug\\Debug","Asgard\/Debug\/Debug.html#method_dWithTrace","(array $trace)","Print out the backtrace and the given arguments.",2],["Debug::setURL","Asgard\\Debug\\Debug","Asgard\/Debug\/Debug.html#method_setURL","(string $url)","Set the URL dependency.",2],["Debug::setFormat","Asgard\\Debug\\Debug","Asgard\/Debug\/Debug.html#method_setFormat","(string $format)","Output format.",2],["Debug::getReport","Asgard\\Debug\\Debug","Asgard\/Debug\/Debug.html#method_getReport","(array $backtrace)","Return the HTML or CLI debug report.",2],["Debug::getHTMLBacktrace","Asgard\\Debug\\Debug","Asgard\/Debug\/Debug.html#method_getHTMLBacktrace","(<abbr title=\"Asgard\\Debug\\Asgard\\Http\\Request\">Request<\/abbr> $request, array $backtrace = null)","Format the backtrace in HTML.",2],["Debug::getCLIBacktrace","Asgard\\Debug\\Debug","Asgard\/Debug\/Debug.html#method_getCLIBacktrace","(array $backtrace = null)","Return the backtrace formatted for CLI.",2],["Debug::getHTMLRequest","Asgard\\Debug\\Debug","Asgard\/Debug\/Debug.html#method_getHTMLRequest","(<abbr title=\"Asgard\\Debug\\Asgard\\Http\\Request\">Request<\/abbr> $r)","Return the request formatted for HTML.",2],["ErrorHandler::__construct","Asgard\\Debug\\ErrorHandler","Asgard\/Debug\/ErrorHandler.html#method___construct","()","",2],["ErrorHandler::setDebug","Asgard\\Debug\\ErrorHandler","Asgard\/Debug\/ErrorHandler.html#method_setDebug","(boolean $debug)","Set debug flag.",2],["ErrorHandler::register","Asgard\\Debug\\ErrorHandler","Asgard\/Debug\/ErrorHandler.html#method_register","()","Register the PHP error handler.",2],["ErrorHandler::shutdownFunction","Asgard\\Debug\\ErrorHandler","Asgard\/Debug\/ErrorHandler.html#method_shutdownFunction","()","Called on shutdown.",2],["ErrorHandler::ignoreDir","Asgard\\Debug\\ErrorHandler","Asgard\/Debug\/ErrorHandler.html#method_ignoreDir","(string $dir)","Ignore PHP errors from a directory.",2],["ErrorHandler::getBacktraceFromException","Asgard\\Debug\\ErrorHandler","Asgard\/Debug\/ErrorHandler.html#method_getBacktraceFromException","(<abbr title=\"Asgard\\Debug\\Exception\">Exception<\/abbr> $e)","Return backtrace from an exception.",2],["ErrorHandler::setLogPHPErrors","Asgard\\Debug\\ErrorHandler","Asgard\/Debug\/ErrorHandler.html#method_setLogPHPErrors","(boolean $log)","To log PHP errors.",2],["ErrorHandler::phpErrorHandler","Asgard\\Debug\\ErrorHandler","Asgard\/Debug\/ErrorHandler.html#method_phpErrorHandler","(integer $errno, string $errstr, string $errfile, integer $errline)","PHP Error handler.",2],["ErrorHandler::exceptionHandler","Asgard\\Debug\\ErrorHandler","Asgard\/Debug\/ErrorHandler.html#method_exceptionHandler","(<abbr title=\"Asgard\\Debug\\Exception\">Exception<\/abbr> $e, boolean $kill = true)","Exception handler.",2],["ErrorHandler::logException","Asgard\\Debug\\ErrorHandler","Asgard\/Debug\/ErrorHandler.html#method_logException","(<abbr title=\"Asgard\\Debug\\Exception\">Exception<\/abbr> $e)","Log an exception.",2],["ErrorHandler::log","Asgard\\Debug\\ErrorHandler","Asgard\/Debug\/ErrorHandler.html#method_log","(integer $severity, string $message, string $file, integer $line, <a href=\"http:\/\/php.net\/Exception\"><abbr title=\"Exception\">Exception<\/abbr><\/a> $exception = null, array $trace = null)","Log an error.",2],["ErrorHandler::isLogging","Asgard\\Debug\\ErrorHandler","Asgard\/Debug\/ErrorHandler.html#method_isLogging","()","Check if is logging.",2],["ErrorHandler::setLogger","Asgard\\Debug\\ErrorHandler","Asgard\/Debug\/ErrorHandler.html#method_setLogger","(<abbr title=\"Asgard\\Debug\\Psr\\Log\\LoggerInterface\">LoggerInterface<\/abbr> $logger)","Set a logger dependency.",2],["ErrorHandler::getPHPErrorSeverity","Asgard\\Debug\\ErrorHandler","Asgard\/Debug\/ErrorHandler.html#method_getPHPErrorSeverity","(integer $code)","Return error severity from error code.",2],["ErrorHandler::getPHPError","Asgard\\Debug\\ErrorHandler","Asgard\/Debug\/ErrorHandler.html#method_getPHPError","(integer $code)","Get PHP error type from code.",2],["PSRException::__construct","Asgard\\Debug\\PSRException","Asgard\/Debug\/PSRException.html#method___construct","(string $message = null, integer $severity = null)","Constructor.",2],["PSRException::setSeverity","Asgard\\Debug\\PSRException","Asgard\/Debug\/PSRException.html#method_setSeverity","(integer $severity)","Set the severity.",2],["PSRException::getSeverity","Asgard\\Debug\\PSRException","Asgard\/Debug\/PSRException.html#method_getSeverity","()","Get the severity.",2],["DriverInterface::transport","Asgard\\Email\\DriverInterface","Asgard\/Email\/DriverInterface.html#method_transport","(mixed $transport)","Set the email transport options.",2],["DriverInterface::send","Asgard\\Email\\DriverInterface","Asgard\/Email\/DriverInterface.html#method_send","(callable $cb)","Send an email.",2],["FakeEmail::transport","Asgard\\Email\\FakeEmail","Asgard\/Email\/FakeEmail.html#method_transport","(mixed $transport)","Set the email transport options.",2],["FakeEmail::send","Asgard\\Email\\FakeEmail","Asgard\/Email\/FakeEmail.html#method_send","(callable $cb)","Send an email.",2],["SwiftEmail::transport","Asgard\\Email\\SwiftEmail","Asgard\/Email\/SwiftEmail.html#method_transport","(mixed $transport)","Set the email transport options.",2],["SwiftEmail::send","Asgard\\Email\\SwiftEmail","Asgard\/Email\/SwiftEmail.html#method_send","(callable $cb)","Send an email.",2],["SwiftMessage::subject","Asgard\\Email\\SwiftMessage","Asgard\/Email\/SwiftMessage.html#method_subject","(string $subject)","Set the subject.",2],["SwiftMessage::to","Asgard\\Email\\SwiftMessage","Asgard\/Email\/SwiftMessage.html#method_to","(array|string $to)","Set the destinator.",2],["SwiftMessage::from","Asgard\\Email\\SwiftMessage","Asgard\/Email\/SwiftMessage.html#method_from","(string $from)","Set the sender.",2],["SwiftMessage::cc","Asgard\\Email\\SwiftMessage","Asgard\/Email\/SwiftMessage.html#method_cc","(array|string $cc)","Set the cc.",2],["SwiftMessage::bcc","Asgard\\Email\\SwiftMessage","Asgard\/Email\/SwiftMessage.html#method_bcc","(array|string $bcc)","Set the bcc.",2],["SwiftMessage::html","Asgard\\Email\\SwiftMessage","Asgard\/Email\/SwiftMessage.html#method_html","(string $html)","Set the hml content.",2],["SwiftMessage::text","Asgard\\Email\\SwiftMessage","Asgard\/Email\/SwiftMessage.html#method_text","(string $text)","Set the text content.",2],["SwiftMessage::htmlTemplate","Asgard\\Email\\SwiftMessage","Asgard\/Email\/SwiftMessage.html#method_htmlTemplate","(string $template, array $data = array())","Use a template for the html content.",2],["SwiftMessage::textTemplate","Asgard\\Email\\SwiftMessage","Asgard\/Email\/SwiftMessage.html#method_textTemplate","(string $template, array $data = array())","Use a template for the html content.",2],["SwiftMessage::attachFile","Asgard\\Email\\SwiftMessage","Asgard\/Email\/SwiftMessage.html#method_attachFile","(string $file, array $options = array())","Attach a file to the email.",2],["SwiftMessage::attachData","Asgard\\Email\\SwiftMessage","Asgard\/Email\/SwiftMessage.html#method_attachData","(string $data, array $options = array())","Attach data as a file to the email.",2],["SwiftMessage::embedFile","Asgard\\Email\\SwiftMessage","Asgard\/Email\/SwiftMessage.html#method_embedFile","(string $file, array $options = array())","Embed a file in the email.",2],["SwiftMessage::embedData","Asgard\\Email\\SwiftMessage","Asgard\/Email\/SwiftMessage.html#method_embedData","(string $data, array $options = array())","Embed data as a file in the email.",2],["Behavior::__construct","Asgard\\Entity\\Behavior","Asgard\/Entity\/Behavior.html#method___construct","(mixed $params = null)","Constructor.",2],["Behavior::__sleep","Asgard\\Entity\\Behavior","Asgard\/Entity\/Behavior.html#method___sleep","()","__sleep magic method.",2],["Behavior::getContainer","Asgard\\Entity\\Behavior","Asgard\/Entity\/Behavior.html#method_getContainer","()","Get entity definition container.",2],["Behavior::setDefinition","Asgard\\Entity\\Behavior","Asgard\/Entity\/Behavior.html#method_setDefinition","(<a href=\"Asgard\/Entity\/Definition.html\"><abbr title=\"Asgard\\Entity\\Definition\">Definition<\/abbr><\/a> $definition)","Set entity definition.",2],["Behavior::load","Asgard\\Entity\\Behavior","Asgard\/Entity\/Behavior.html#method_load","(<a href=\"Asgard\/Entity\/Definition.html\"><abbr title=\"Asgard\\Entity\\Definition\">Definition<\/abbr><\/a> $definition)","Load the bahavior.",2],["Definition::__construct","Asgard\\Entity\\Definition","Asgard\/Entity\/Definition.html#method___construct","(string $entityClass, <a href=\"Asgard\/Entity\/EntityManagerInterface.html\"><abbr title=\"Asgard\\Entity\\EntityManagerInterface\">EntityManagerInterface<\/abbr><\/a> $entityManager, <abbr title=\"Asgard\\Entity\\Asgard\\Hook\\HookManagerInterface\">HookManagerInterface<\/abbr> $generalHookManager = null)","Constructor.",2],["Definition::getContainer","Asgard\\Entity\\Definition","Asgard\/Entity\/Definition.html#method_getContainer","()","Return the services container.",2],["Definition::__sleep","Asgard\\Entity\\Definition","Asgard\/Entity\/Definition.html#method___sleep","()","__sleep magic method.",2],["Definition::__set","Asgard\\Entity\\Definition","Asgard\/Entity\/Definition.html#method___set","(string $name, mixed $value)","__set magic method.",2],["Definition::__call","Asgard\\Entity\\Definition","Asgard\/Entity\/Definition.html#method___call","(string $name, array $arguments)","__call magic method.",2],["Definition::call","Asgard\\Entity\\Definition","Asgard\/Entity\/Definition.html#method_call","(<a href=\"Asgard\/Entity\/Entity.html\"><abbr title=\"Asgard\\Entity\\Entity\">Entity<\/abbr><\/a> $entity, string $name, array $arguments)","Handle a custom call.",2],["Definition::callStatic","Asgard\\Entity\\Definition","Asgard\/Entity\/Definition.html#method_callStatic","(string $name, array $arguments)","Handle a custom static call.",2],["Definition::setEntityManager","Asgard\\Entity\\Definition","Asgard\/Entity\/Definition.html#method_setEntityManager","(<a href=\"Asgard\/Entity\/EntityManagerInterface.html\"><abbr title=\"Asgard\\Entity\\EntityManagerInterface\">EntityManagerInterface<\/abbr><\/a> $entityManager)","Set the entityManager dependency.",2],["Definition::setGeneralHookManager","Asgard\\Entity\\Definition","Asgard\/Entity\/Definition.html#method_setGeneralHookManager","(<a href=\"Asgard\/Hook\/HookManagerInterface.html\"><abbr title=\"Asgard\\Hook\\HookManagerInterface\">HookManagerInterface<\/abbr><\/a> $generalHookManager)","Set the general hooks manager dependency.",2],["Definition::getEntityManager","Asgard\\Entity\\Definition","Asgard\/Entity\/Definition.html#method_getEntityManager","()","Return the entityManager dependency.",2],["Definition::loadBehaviors","Asgard\\Entity\\Definition","Asgard\/Entity\/Definition.html#method_loadBehaviors","(array $behaviors)","Load the bahaviors.",2],["Definition::loadBehavior","Asgard\\Entity\\Definition","Asgard\/Entity\/Definition.html#method_loadBehavior","(mixed $behavior)","Load a behavior.",2],["Definition::getClass","Asgard\\Entity\\Definition","Asgard\/Entity\/Definition.html#method_getClass","()","Return the entity class.",2],["Definition::addProperty","Asgard\\Entity\\Definition","Asgard\/Entity\/Definition.html#method_addProperty","(string $name, string|array|<a href=\"Asgard\/Entity\/Property.html\"><abbr title=\"Asgard\\Entity\\Property\">Property<\/abbr><\/a> $property = null)","Add a property.",2],["Definition::hasProperty","Asgard\\Entity\\Definition","Asgard\/Entity\/Definition.html#method_hasProperty","(string $name)","Check if definition has a property.",2],["Definition::property","Asgard\\Entity\\Definition","Asgard\/Entity\/Definition.html#method_property","(string $name)","Return a property.",2],["Definition::properties","Asgard\\Entity\\Definition","Asgard\/Entity\/Definition.html#method_properties","()","Return all properties.",2],["Definition::messages","Asgard\\Entity\\Definition","Asgard\/Entity\/Definition.html#method_messages","()","Return all validation messages.",2],["Definition::hasBehavior","Asgard\\Entity\\Definition","Asgard\/Entity\/Definition.html#method_hasBehavior","(string $class)","Check if has a behavior.",2],["Definition::set","Asgard\\Entity\\Definition","Asgard\/Entity\/Definition.html#method_set","(string $name, mixed $value)","Set a meta data.",2],["Definition::has","Asgard\\Entity\\Definition","Asgard\/Entity\/Definition.html#method_has","(string $name)","Check if a meta data exists.",2],["Definition::get","Asgard\\Entity\\Definition","Asgard\/Entity\/Definition.html#method_get","(string $name)","Return a meta data.",2],["Definition::isI18N","Asgard\\Entity\\Definition","Asgard\/Entity\/Definition.html#method_isI18N","()","Check if contains i18n properties.",2],["Definition::getShortName","Asgard\\Entity\\Definition","Asgard\/Entity\/Definition.html#method_getShortName","()","Get the entity short name.",2],["Definition::processPreSet","Asgard\\Entity\\Definition","Asgard\/Entity\/Definition.html#method_processPreSet","(<a href=\"Asgard\/Entity\/Entity.html\"><abbr title=\"Asgard\\Entity\\Entity\">Entity<\/abbr><\/a> $entity, string $name, mixed $value, string $locale = null, boolean $hook = true)","Process values before entity set.",2],["Definition::processPreAdd","Asgard\\Entity\\Definition","Asgard\/Entity\/Definition.html#method_processPreAdd","(<a href=\"Asgard\/Entity\/Entity.html\"><abbr title=\"Asgard\\Entity\\Entity\">Entity<\/abbr><\/a> $entity, string $name, mixed $value, string $locale = null, boolean $hook = true)","Process values before adding to a ManyCollection.",2],["Definition::make","Asgard\\Entity\\Definition","Asgard\/Entity\/Definition.html#method_make","(array $attrs = null, string $locale = null)","Make a new entity.",2],["Entity::__construct","Asgard\\Entity\\Entity","Asgard\/Entity\/Entity.html#method___construct","(array $attrs = null, string $locale = null)","Constructor.",2],["Entity::getLocale","Asgard\\Entity\\Entity","Asgard\/Entity\/Entity.html#method_getLocale","()","Return the default locale.",2],["Entity::setEntityManager","Asgard\\Entity\\Entity","Asgard\/Entity\/Entity.html#method_setEntityManager","(<a href=\"Asgard\/Entity\/EntityManager.html\"><abbr title=\"Asgard\\Entity\\EntityManager\">EntityManager<\/abbr><\/a> $em)","Set the entity manager.",2],["Entity::setLocale","Asgard\\Entity\\Entity","Asgard\/Entity\/Entity.html#method_setLocale","(string $locale)","Set the default locale.",2],["Entity::__sleep","Asgard\\Entity\\Entity","Asgard\/Entity\/Entity.html#method___sleep","()","",2],["Entity::__set","Asgard\\Entity\\Entity","Asgard\/Entity\/Entity.html#method___set","(string $name, mixed $value)","__set magic method.",2],["Entity::__get","Asgard\\Entity\\Entity","Asgard\/Entity\/Entity.html#method___get","(string $name)","__get magic method.",2],["Entity::__isset","Asgard\\Entity\\Entity","Asgard\/Entity\/Entity.html#method___isset","(string $name)","__isset magic method.",2],["Entity::__unset","Asgard\\Entity\\Entity","Asgard\/Entity\/Entity.html#method___unset","(string $name)","__unset magic method.",2],["Entity::__callStatic","Asgard\\Entity\\Entity","Asgard\/Entity\/Entity.html#method___callStatic","(string $name, array $arguments)","__callStatic magic method.",2],["Entity::__call","Asgard\\Entity\\Entity","Asgard\/Entity\/Entity.html#method___call","(string $name, array $arguments)","__call magic method.",2],["Entity::definition","Asgard\\Entity\\Entity","Asgard\/Entity\/Entity.html#method_definition","(<a href=\"Asgard\/Entity\/Definition.html\"><abbr title=\"Asgard\\Entity\\Definition\">Definition<\/abbr><\/a> $Definition)","Initialize the configuration.",2],["Entity::getDefinition","Asgard\\Entity\\Entity","Asgard\/Entity\/Entity.html#method_getDefinition","()","Return the definition.",2],["Entity::getStaticDefinition","Asgard\\Entity\\Entity","Asgard\/Entity\/Entity.html#method_getStaticDefinition","()","Return a static definition, if entity used like active-record.",2],["Entity::loadDefault","Asgard\\Entity\\Entity","Asgard\/Entity\/Entity.html#method_loadDefault","()","Load default data.",2],["Entity::isNew","Asgard\\Entity\\Entity","Asgard\/Entity\/Entity.html#method_isNew","()","Check if the entity has no id.",2],["Entity::isOld","Asgard\\Entity\\Entity","Asgard\/Entity\/Entity.html#method_isOld","()","Check if the entity has an id.",2],["Entity::getValidator","Asgard\\Entity\\Entity","Asgard\/Entity\/Entity.html#method_getValidator","(array $locales = array())","Get a validator.",2],["Entity::prepareValidator","Asgard\\Entity\\Entity","Asgard\/Entity\/Entity.html#method_prepareValidator","(<abbr title=\"Asgard\\Entity\\Asgard\\Validation\\ValidatorInterface\">ValidatorInterface<\/abbr> $validator, array $locales = array())","Prepare the validator.",2],["Entity::valid","Asgard\\Entity\\Entity","Asgard\/Entity\/Entity.html#method_valid","(array $groups = array())","Check if entity is valid.",2],["Entity::errors","Asgard\\Entity\\Entity","Asgard\/Entity\/Entity.html#method_errors","(array|string|null $groups = array())","Return entity errors.",2],["Entity::_set","Asgard\\Entity\\Entity","Asgard\/Entity\/Entity.html#method__set","(array|string $name, mixed $value = null, string $locale = null, boolean $change = true)","Hard set data.",2],["Entity::set","Asgard\\Entity\\Entity","Asgard\/Entity\/Entity.html#method_set","(array|string $name, mixed $value = null, string $locale = null, boolean $hook = true, boolean $change = true)","Soft set data.",2],["Entity::_get","Asgard\\Entity\\Entity","Asgard\/Entity\/Entity.html#method__get","(string $name, string|array $locale = null)","Hard get data.",2],["Entity::get","Asgard\\Entity\\Entity","Asgard\/Entity\/Entity.html#method_get","(string $name, string|array $locale = null, boolean $hook = true)","Hard get data.",2],["Entity::toArrayRaw","Asgard\\Entity\\Entity","Asgard\/Entity\/Entity.html#method_toArrayRaw","(integer $depth)","Convert entity to a raw array.",2],["Entity::toArray","Asgard\\Entity\\Entity","Asgard\/Entity\/Entity.html#method_toArray","(integer $depth)","Convert entity to a formatted array.",2],["Entity::toJSON","Asgard\\Entity\\Entity","Asgard\/Entity\/Entity.html#method_toJSON","(integer $depth)","Convert entity to json.",2],["Entity::translate","Asgard\\Entity\\Entity","Asgard\/Entity\/Entity.html#method_translate","(string $locale)","Return entity in another language.",2],["Entity::getLocales","Asgard\\Entity\\Entity","Asgard\/Entity\/Entity.html#method_getLocales","()","Get entity locales.",2],["Entity::toArrayRawI18N","Asgard\\Entity\\Entity","Asgard\/Entity\/Entity.html#method_toArrayRawI18N","(array $locales = array(), integer $depth)","Convert entity to a raw array with translations.",2],["Entity::toArrayI18N","Asgard\\Entity\\Entity","Asgard\/Entity\/Entity.html#method_toArrayI18N","(array $locales = array(), integer $depth)","Convert entity to a formatted array with translations.",2],["Entity::toJSONI18N","Asgard\\Entity\\Entity","Asgard\/Entity\/Entity.html#method_toJSONI18N","(array $locales = array(), integer $depth)","Convert entity to JSON with translations.",2],["Entity::validI18N","Asgard\\Entity\\Entity","Asgard\/Entity\/Entity.html#method_validI18N","(array $locales = array(), array $groups = array())","Check if entity and translations are valid.",2],["Entity::errorsI18N","Asgard\\Entity\\Entity","Asgard\/Entity\/Entity.html#method_errorsI18N","(array $locales = array(), array $groups = array())","Return errors for entity and translations.",2],["Entity::getchanged","Asgard\\Entity\\Entity","Asgard\/Entity\/Entity.html#method_getchanged","()","",2],["Entity::getchangedI18N","Asgard\\Entity\\Entity","Asgard\/Entity\/Entity.html#method_getchangedI18N","(string $locale = null)","Get the changed i18n properties.",2],["Entity::resetchanged","Asgard\\Entity\\Entity","Asgard\/Entity\/Entity.html#method_resetchanged","()","",2],["EntityManager::__construct","Asgard\\Entity\\EntityManager","Asgard\/Entity\/EntityManager.html#method___construct","(<abbr title=\"Asgard\\Entity\\Asgard\\Container\\ContainerInterface\">ContainerInterface<\/abbr> $container = null)","Constructor.",2],["EntityManager::setSerializer","Asgard\\Entity\\EntityManager","Asgard\/Entity\/EntityManager.html#method_setSerializer","(<a href=\"Asgard\/Entity\/Serializer.html\"><abbr title=\"Asgard\\Entity\\Serializer\">Serializer<\/abbr><\/a> $serializer)","Set a serializer dependency.",2],["EntityManager::getSerializer","Asgard\\Entity\\EntityManager","Asgard\/Entity\/EntityManager.html#method_getSerializer","()","Return a serializer.",2],["EntityManager::getHookManager","Asgard\\Entity\\EntityManager","Asgard\/Entity\/EntityManager.html#method_getHookManager","()","Return the hooks manager.",2],["EntityManager::setHookManager","Asgard\\Entity\\EntityManager","Asgard\/Entity\/EntityManager.html#method_setHookManager","(<abbr title=\"Asgard\\Entity\\Asgard\\Hook\\HookManagerInterface\">HookManagerInterface<\/abbr> $HookManager)","Set the hooks manager.",2],["EntityManager::setValidatorFactory","Asgard\\Entity\\EntityManager","Asgard\/Entity\/EntityManager.html#method_setValidatorFactory","(<abbr title=\"Asgard\\Entity\\Asgard\\Validation\\ValidatorFactoryInterface\">ValidatorFactoryInterface<\/abbr> $validatorFactory)","Set the validator factory.",2],["EntityManager::createValidator","Asgard\\Entity\\EntityManager","Asgard\/Entity\/EntityManager.html#method_createValidator","()","Create a validator.",2],["EntityManager::setCache","Asgard\\Entity\\EntityManager","Asgard\/Entity\/EntityManager.html#method_setCache","(<abbr title=\"Asgard\\Entity\\Asgard\\Cache\\CacheInterface\">CacheInterface<\/abbr> $cache)","Set the cache dependency.",2],["EntityManager::getCache","Asgard\\Entity\\EntityManager","Asgard\/Entity\/EntityManager.html#method_getCache","()","Get the cache dependency.",2],["EntityManager::singleton","Asgard\\Entity\\EntityManager","Asgard\/Entity\/EntityManager.html#method_singleton","()","Return the default instance.",2],["EntityManager::setInstance","Asgard\\Entity\\EntityManager","Asgard\/Entity\/EntityManager.html#method_setInstance","(<a href=\"Asgard\/Entity\/EntityManagerInterface.html\"><abbr title=\"Asgard\\Entity\\EntityManagerInterface\">EntityManagerInterface<\/abbr><\/a> $instance)","Set default instance.",2],["EntityManager::setDefaultLocale","Asgard\\Entity\\EntityManager","Asgard\/Entity\/EntityManager.html#method_setDefaultLocale","(string $defaultLocale)","Set default locale.",2],["EntityManager::getDefaultLocale","Asgard\\Entity\\EntityManager","Asgard\/Entity\/EntityManager.html#method_getDefaultLocale","()","Get default locale.",2],["EntityManager::get","Asgard\\Entity\\EntityManager","Asgard\/Entity\/EntityManager.html#method_get","(string $entityClass)","Get an entity definition.",2],["EntityManager::has","Asgard\\Entity\\EntityManager","Asgard\/Entity\/EntityManager.html#method_has","(string $entityClass)","Check if has an entity definition.",2],["EntityManager::getDefinitions","Asgard\\Entity\\EntityManager","Asgard\/Entity\/EntityManager.html#method_getDefinitions","()","Return all definitions.",2],["EntityManager::make","Asgard\\Entity\\EntityManager","Asgard\/Entity\/EntityManager.html#method_make","(string $entityClass, array $attrs = null, string $locale = null)","Make a new entity.",2],["EntityManagerInterface::getHookManager","Asgard\\Entity\\EntityManagerInterface","Asgard\/Entity\/EntityManagerInterface.html#method_getHookManager","()","Return the hooks manager.",2],["EntityManagerInterface::setHookManager","Asgard\\Entity\\EntityManagerInterface","Asgard\/Entity\/EntityManagerInterface.html#method_setHookManager","(<abbr title=\"Asgard\\Entity\\Asgard\\Hook\\HookManagerInterface\">HookManagerInterface<\/abbr> $HookManager)","Set the hooks manager.",2],["EntityManagerInterface::setValidatorFactory","Asgard\\Entity\\EntityManagerInterface","Asgard\/Entity\/EntityManagerInterface.html#method_setValidatorFactory","(<abbr title=\"Asgard\\Entity\\Asgard\\Validation\\ValidatorFactoryInterface\">ValidatorFactoryInterface<\/abbr> $validatorFactory)","Set the validator factory.",2],["EntityManagerInterface::createValidator","Asgard\\Entity\\EntityManagerInterface","Asgard\/Entity\/EntityManagerInterface.html#method_createValidator","()","Create a validator.",2],["EntityManagerInterface::setCache","Asgard\\Entity\\EntityManagerInterface","Asgard\/Entity\/EntityManagerInterface.html#method_setCache","(<abbr title=\"Asgard\\Entity\\Asgard\\Cache\\CacheInterface\">CacheInterface<\/abbr> $cache)","Set the cache dependency.",2],["EntityManagerInterface::getCache","Asgard\\Entity\\EntityManagerInterface","Asgard\/Entity\/EntityManagerInterface.html#method_getCache","()","Get the cache dependency.",2],["EntityManagerInterface::setDefaultLocale","Asgard\\Entity\\EntityManagerInterface","Asgard\/Entity\/EntityManagerInterface.html#method_setDefaultLocale","(string $defaultLocale)","Set default locale.",2],["EntityManagerInterface::getDefaultLocale","Asgard\\Entity\\EntityManagerInterface","Asgard\/Entity\/EntityManagerInterface.html#method_getDefaultLocale","()","Get default locale.",2],["EntityManagerInterface::get","Asgard\\Entity\\EntityManagerInterface","Asgard\/Entity\/EntityManagerInterface.html#method_get","(string $entityClass)","Get an entity definition.",2],["EntityManagerInterface::has","Asgard\\Entity\\EntityManagerInterface","Asgard\/Entity\/EntityManagerInterface.html#method_has","(string $entityClass)","Check if has an entity definition.",2],["EntityManagerInterface::getDefinitions","Asgard\\Entity\\EntityManagerInterface","Asgard\/Entity\/EntityManagerInterface.html#method_getDefinitions","()","Return all definitions.",2],["EntityManagerInterface::make","Asgard\\Entity\\EntityManagerInterface","Asgard\/Entity\/EntityManagerInterface.html#method_make","(string $entityClass, array $attrs = null, string $locale = null)","Make a new entity.",2],["File::toDelete","Asgard\\Entity\\File","Asgard\/Entity\/File.html#method_toDelete","(boolean $toDelete = true)","Set toDelete flag.",2],["File::shouldDelete","Asgard\\Entity\\File","Asgard\/Entity\/File.html#method_shouldDelete","()","Check if should delete the file.",2],["File::save","Asgard\\Entity\\File","Asgard\/Entity\/File.html#method_save","()","Save the file.",2],["File::__toString","Asgard\\Entity\\File","Asgard\/Entity\/File.html#method___toString","()","__toString magic method.",2],["File::isWeb","Asgard\\Entity\\File","Asgard\/Entity\/File.html#method_isWeb","()","Check if file is accessible from web.",2],["File::setWeb","Asgard\\Entity\\File","Asgard\/Entity\/File.html#method_setWeb","(boolean $web)","Set web flag.",2],["File::setUrl","Asgard\\Entity\\File","Asgard\/Entity\/File.html#method_setUrl","(<a href=\"Asgard\/Http\/URLInterface.html\"><abbr title=\"Asgard\\Http\\URLInterface\">URLInterface<\/abbr><\/a> $url)","Set URL dependency.",2],["File::url","Asgard\\Entity\\File","Asgard\/Entity\/File.html#method_url","(string $default = null)","Return the file url.",2],["File::setWebDir","Asgard\\Entity\\File","Asgard\/Entity\/File.html#method_setWebDir","(string $webDir)","Set web directory.",2],["File::relativeToWebDir","Asgard\\Entity\\File","Asgard\/Entity\/File.html#method_relativeToWebDir","()","Return relative path from web directory.",2],["File::setDir","Asgard\\Entity\\File","Asgard\/Entity\/File.html#method_setDir","(string $dir)","Set destination directory.",2],["ManyCollection::__construct","Asgard\\Entity\\ManyCollection","Asgard\/Entity\/ManyCollection.html#method___construct","(<a href=\"Asgard\/Entity\/Entity.html\"><abbr title=\"Asgard\\Entity\\Entity\">Entity<\/abbr><\/a> $entity, string $name)","Constructor.",2],["ManyCollection::count","Asgard\\Entity\\ManyCollection","Asgard\/Entity\/ManyCollection.html#method_count","()","Return number of elements.",2],["ManyCollection::all","Asgard\\Entity\\ManyCollection","Asgard\/Entity\/ManyCollection.html#method_all","()","Return all elements.",2],["ManyCollection::add","Asgard\\Entity\\ManyCollection","Asgard\/Entity\/ManyCollection.html#method_add","(mixed $element)","Add an element.",2],["ManyCollection::setAll","Asgard\\Entity\\ManyCollection","Asgard\/Entity\/ManyCollection.html#method_setAll","(array $elements)","Set all elements\/",2],["ManyCollection::remove","Asgard\\Entity\\ManyCollection","Asgard\/Entity\/ManyCollection.html#method_remove","(integer $offset)","Remove an element.",2],["ManyCollection::get","Asgard\\Entity\\ManyCollection","Asgard\/Entity\/ManyCollection.html#method_get","(integer $offset)","Return an element.",2],["ManyCollection::offsetSet","Asgard\\Entity\\ManyCollection","Asgard\/Entity\/ManyCollection.html#method_offsetSet","(integer $offset, mixed $value)","Array set implementation.",2],["ManyCollection::offsetExists","Asgard\\Entity\\ManyCollection","Asgard\/Entity\/ManyCollection.html#method_offsetExists","(integer $offset)","Array exists implementation.",2],["ManyCollection::offsetUnset","Asgard\\Entity\\ManyCollection","Asgard\/Entity\/ManyCollection.html#method_offsetUnset","(integer $offset)","Array unset implementation.",2],["ManyCollection::offsetGet","Asgard\\Entity\\ManyCollection","Asgard\/Entity\/ManyCollection.html#method_offsetGet","(integer $offset)","Array get implementation.",2],["ManyCollection::valid","Asgard\\Entity\\ManyCollection","Asgard\/Entity\/ManyCollection.html#method_valid","()","Iterator valid implementation.",2],["ManyCollection::rewind","Asgard\\Entity\\ManyCollection","Asgard\/Entity\/ManyCollection.html#method_rewind","()","Iterator rewind implementation.",2],["ManyCollection::current","Asgard\\Entity\\ManyCollection","Asgard\/Entity\/ManyCollection.html#method_current","()","Iterator current implementation.",2],["ManyCollection::key","Asgard\\Entity\\ManyCollection","Asgard\/Entity\/ManyCollection.html#method_key","()","Iterator key implementation.",2],["ManyCollection::next","Asgard\\Entity\\ManyCollection","Asgard\/Entity\/ManyCollection.html#method_next","()","Iterator next implementation.",2],["PersistenceBehavior::static_orm","Asgard\\Entity\\PersistenceBehavior","Asgard\/Entity\/PersistenceBehavior.html#method_static_orm","()","Article::orm()",2],["PersistenceBehavior::static_loadBy","Asgard\\Entity\\PersistenceBehavior","Asgard\/Entity\/PersistenceBehavior.html#method_static_loadBy","(<a href=\"Asgard\/Entity\/Property.html\"><abbr title=\"Asgard\\Entity\\Property\">Property<\/abbr><\/a> $property, mixed $value)","Article::loadBy('title', 'hello world')",2],["PersistenceBehavior::static_load","Asgard\\Entity\\PersistenceBehavior","Asgard\/Entity\/PersistenceBehavior.html#method_static_load","(integer $id)","Article::load(2)",2],["PersistenceBehavior::static_destroyAll","Asgard\\Entity\\PersistenceBehavior","Asgard\/Entity\/PersistenceBehavior.html#method_static_destroyAll","()","Article::destroyAll()",2],["PersistenceBehavior::static_destroyOne","Asgard\\Entity\\PersistenceBehavior","Asgard\/Entity\/PersistenceBehavior.html#method_static_destroyOne","(integer $id)","Article::destroyOne()",2],["PersistenceBehavior::static_create","Asgard\\Entity\\PersistenceBehavior","Asgard\/Entity\/PersistenceBehavior.html#method_static_create","(array $attrs = array(), boolean $validate = true)","Article::create()",2],["PersistenceBehavior::call_save","Asgard\\Entity\\PersistenceBehavior","Asgard\/Entity\/PersistenceBehavior.html#method_call_save","(<a href=\"Asgard\/Entity\/Entity.html\"><abbr title=\"Asgard\\Entity\\Entity\">Entity<\/abbr><\/a> $entity, array $attrs = null, boolean $validate = true)","$article->save()",2],["PersistenceBehavior::call_destroy","Asgard\\Entity\\PersistenceBehavior","Asgard\/Entity\/PersistenceBehavior.html#method_call_destroy","(<a href=\"Asgard\/Entity\/Entity.html\"><abbr title=\"Asgard\\Entity\\Entity\">Entity<\/abbr><\/a> $entity)","$article->destroy()",2],["BooleanProperty::prepareValidator","Asgard\\Entity\\Properties\\BooleanProperty","Asgard\/Entity\/Properties\/BooleanProperty.html#method_prepareValidator","(<abbr title=\"Asgard\\Entity\\Properties\\Asgard\\Validation\\ValidatorInterface\">ValidatorInterface<\/abbr> $validator)","Prepare the validator.",2],["BooleanProperty::getORMParameters","Asgard\\Entity\\Properties\\BooleanProperty","Asgard\/Entity\/Properties\/BooleanProperty.html#method_getORMParameters","()","{@inheritDoc}",2],["BooleanProperty::_getDefault","Asgard\\Entity\\Properties\\BooleanProperty","Asgard\/Entity\/Properties\/BooleanProperty.html#method__getDefault","()","{@inheritDoc}",2],["BooleanProperty::getFormField","Asgard\\Entity\\Properties\\BooleanProperty","Asgard\/Entity\/Properties\/BooleanProperty.html#method_getFormField","()","{@inheritDoc}",2],["BooleanProperty::toString","Asgard\\Entity\\Properties\\BooleanProperty","Asgard\/Entity\/Properties\/BooleanProperty.html#method_toString","($val)","{@inheritDoc}",2],["CountryProperty::getFormParameters","Asgard\\Entity\\Properties\\CountryProperty","Asgard\/Entity\/Properties\/CountryProperty.html#method_getFormParameters","()","",2],["CountryProperty::prepareValidator","Asgard\\Entity\\Properties\\CountryProperty","Asgard\/Entity\/Properties\/CountryProperty.html#method_prepareValidator","(<abbr title=\"Asgard\\Entity\\Properties\\Asgard\\Validation\\ValidatorInterface\">ValidatorInterface<\/abbr> $validator)","Prepare the validator.",2],["CountryProperty::seIntl","Asgard\\Entity\\Properties\\CountryProperty","Asgard\/Entity\/Properties\/CountryProperty.html#method_seIntl","($intl)","",2],["CountryProperty::getIntl","Asgard\\Entity\\Properties\\CountryProperty","Asgard\/Entity\/Properties\/CountryProperty.html#method_getIntl","()","",2],["CountryProperty::getORMParameters","Asgard\\Entity\\Properties\\CountryProperty","Asgard\/Entity\/Properties\/CountryProperty.html#method_getORMParameters","()","{@inheritDoc}",2],["DateProperty::prepareValidator","Asgard\\Entity\\Properties\\DateProperty","Asgard\/Entity\/Properties\/DateProperty.html#method_prepareValidator","(<abbr title=\"Asgard\\Entity\\Properties\\Asgard\\Validation\\ValidatorInterface\">ValidatorInterface<\/abbr> $validator)","Prepare the validator.",2],["DateProperty::getMessages","Asgard\\Entity\\Properties\\DateProperty","Asgard\/Entity\/Properties\/DateProperty.html#method_getMessages","()","Return the validation messages.",2],["DateProperty::_getDefault","Asgard\\Entity\\Properties\\DateProperty","Asgard\/Entity\/Properties\/DateProperty.html#method__getDefault","()","{@inheritDoc}",2],["DateProperty::doSet","Asgard\\Entity\\Properties\\DateProperty","Asgard\/Entity\/Properties\/DateProperty.html#method_doSet","(mixed $val, <abbr title=\"Asgard\\Entity\\Properties\\Asgard\\Entity\\Entity\">Entity<\/abbr> $entity, string $name)","Actually pre-process value for a single element.",2],["DateProperty::getORMParameters","Asgard\\Entity\\Properties\\DateProperty","Asgard\/Entity\/Properties\/DateProperty.html#method_getORMParameters","()","{@inheritDoc}",2],["DateProperty::toString","Asgard\\Entity\\Properties\\DateProperty","Asgard\/Entity\/Properties\/DateProperty.html#method_toString","($obj)","{@inheritDoc}",2],["DateProperty::getFormField","Asgard\\Entity\\Properties\\DateProperty","Asgard\/Entity\/Properties\/DateProperty.html#method_getFormField","()","{@inheritDoc}",2],["DatetimeProperty::prepareValidator","Asgard\\Entity\\Properties\\DatetimeProperty","Asgard\/Entity\/Properties\/DatetimeProperty.html#method_prepareValidator","(<abbr title=\"Asgard\\Entity\\Properties\\Asgard\\Validation\\ValidatorInterface\">ValidatorInterface<\/abbr> $validator)","Prepare the validator.",2],["DatetimeProperty::getMessages","Asgard\\Entity\\Properties\\DatetimeProperty","Asgard\/Entity\/Properties\/DatetimeProperty.html#method_getMessages","()","Return the validation messages.",2],["DatetimeProperty::_getDefault","Asgard\\Entity\\Properties\\DatetimeProperty","Asgard\/Entity\/Properties\/DatetimeProperty.html#method__getDefault","()","{@inheritDoc}",2],["DatetimeProperty::doSet","Asgard\\Entity\\Properties\\DatetimeProperty","Asgard\/Entity\/Properties\/DatetimeProperty.html#method_doSet","(mixed $val, <abbr title=\"Asgard\\Entity\\Properties\\Asgard\\Entity\\Entity\">Entity<\/abbr> $entity, string $name)","Actually pre-process value for a single element.",2],["DatetimeProperty::getORMParameters","Asgard\\Entity\\Properties\\DatetimeProperty","Asgard\/Entity\/Properties\/DatetimeProperty.html#method_getORMParameters","()","{@inheritDoc}",2],["DatetimeProperty::getFormField","Asgard\\Entity\\Properties\\DatetimeProperty","Asgard\/Entity\/Properties\/DatetimeProperty.html#method_getFormField","()","{@inheritDoc}",2],["DecimalProperty::getORMParameters","Asgard\\Entity\\Properties\\DecimalProperty","Asgard\/Entity\/Properties\/DecimalProperty.html#method_getORMParameters","()","{@inheritDoc}",2],["EmailProperty::getORMParameters","Asgard\\Entity\\Properties\\EmailProperty","Asgard\/Entity\/Properties\/EmailProperty.html#method_getORMParameters","()","{@inheritDoc}",2],["EmailProperty::prepareValidator","Asgard\\Entity\\Properties\\EmailProperty","Asgard\/Entity\/Properties\/EmailProperty.html#method_prepareValidator","(<abbr title=\"Asgard\\Entity\\Properties\\Asgard\\Validation\\ValidatorInterface\">ValidatorInterface<\/abbr> $validator)","Prepare the validator.",2],["EntityProperty::getDefault","Asgard\\Entity\\Properties\\EntityProperty","Asgard\/Entity\/Properties\/EntityProperty.html#method_getDefault","(<a href=\"Asgard\/Entity\/Entity.html\"><abbr title=\"Asgard\\Entity\\Entity\">Entity<\/abbr><\/a> $entity, <abbr title=\"Asgard\\Entity\\strng\">strng<\/abbr> $name)","Return the default value.",2],["EntityProperty::prepareValidator","Asgard\\Entity\\Properties\\EntityProperty","Asgard\/Entity\/Properties\/EntityProperty.html#method_prepareValidator","(<abbr title=\"Asgard\\Entity\\Properties\\Asgard\\Validation\\ValidatorInterface\">ValidatorInterface<\/abbr> $validator)","Prepare the validator.",2],["EntityProperty::doSet","Asgard\\Entity\\Properties\\EntityProperty","Asgard\/Entity\/Properties\/EntityProperty.html#method_doSet","(mixed $val, <abbr title=\"Asgard\\Entity\\Properties\\Asgard\\Entity\\Entity\">Entity<\/abbr> $entity, string $name)","Actually pre-process value for a single element.",2],["FileProperty::setWebDir","Asgard\\Entity\\Properties\\FileProperty","Asgard\/Entity\/Properties\/FileProperty.html#method_setWebDir","(string $webDir)","Set the web directory.",2],["FileProperty::setUrl","Asgard\\Entity\\Properties\\FileProperty","Asgard\/Entity\/Properties\/FileProperty.html#method_setUrl","(<abbr title=\"Asgard\\Entity\\Properties\\Asgard\\Http\\URLInterface\">URLInterface<\/abbr> $url)","Set the URL dependency.",2],["FileProperty::__construct","Asgard\\Entity\\Properties\\FileProperty","Asgard\/Entity\/Properties\/FileProperty.html#method___construct","(array $params)","Constructor.",2],["FileProperty::prepareValidator","Asgard\\Entity\\Properties\\FileProperty","Asgard\/Entity\/Properties\/FileProperty.html#method_prepareValidator","(<abbr title=\"Asgard\\Entity\\Properties\\Asgard\\Validation\\ValidatorInterface\">ValidatorInterface<\/abbr> $validator)","Prepare the validator.",2],["FileProperty::getORMParameters","Asgard\\Entity\\Properties\\FileProperty","Asgard\/Entity\/Properties\/FileProperty.html#method_getORMParameters","()","{@inheritDoc}",2],["FileProperty::doSet","Asgard\\Entity\\Properties\\FileProperty","Asgard\/Entity\/Properties\/FileProperty.html#method_doSet","(mixed $val, <abbr title=\"Asgard\\Entity\\Properties\\Asgard\\Entity\\Entity\">Entity<\/abbr> $entity, string $name)","Actually pre-process value for a single element.",2],["FileProperty::getFormField","Asgard\\Entity\\Properties\\FileProperty","Asgard\/Entity\/Properties\/FileProperty.html#method_getFormField","()","{@inheritDoc}",2],["IntegerProperty::getORMParameters","Asgard\\Entity\\Properties\\IntegerProperty","Asgard\/Entity\/Properties\/IntegerProperty.html#method_getORMParameters","()","{@inheritDoc}",2],["PasswordProperty::getORMParameters","Asgard\\Entity\\Properties\\PasswordProperty","Asgard\/Entity\/Properties\/PasswordProperty.html#method_getORMParameters","()","{@inheritDoc}",2],["PasswordProperty::getFormParameters","Asgard\\Entity\\Properties\\PasswordProperty","Asgard\/Entity\/Properties\/PasswordProperty.html#method_getFormParameters","()","",2],["PasswordProperty::doSet","Asgard\\Entity\\Properties\\PasswordProperty","Asgard\/Entity\/Properties\/PasswordProperty.html#method_doSet","(mixed $val, <abbr title=\"Asgard\\Entity\\Properties\\Asgard\\Entity\\Entity\">Entity<\/abbr> $entity, string $name)","Actually pre-process value for a single element.",2],["StringProperty::__construct","Asgard\\Entity\\Properties\\StringProperty","Asgard\/Entity\/Properties\/StringProperty.html#method___construct","(array $params)","Constructor.",2],["StringProperty::getORMParameters","Asgard\\Entity\\Properties\\StringProperty","Asgard\/Entity\/Properties\/StringProperty.html#method_getORMParameters","()","{@inheritDoc}",2],["TextProperty::__construct","Asgard\\Entity\\Properties\\TextProperty","Asgard\/Entity\/Properties\/TextProperty.html#method___construct","(array $params)","Constructor.",2],["TextProperty::getORMParameters","Asgard\\Entity\\Properties\\TextProperty","Asgard\/Entity\/Properties\/TextProperty.html#method_getORMParameters","()","{@inheritDoc}",2],["Property::__construct","Asgard\\Entity\\Property","Asgard\/Entity\/Property.html#method___construct","(array $params)","Constructor.",2],["Property::getFormParameters","Asgard\\Entity\\Property","Asgard\/Entity\/Property.html#method_getFormParameters","()","",2],["Property::__sleep","Asgard\\Entity\\Property","Asgard\/Entity\/Property.html#method___sleep","()","__sleep magic method.",2],["Property::setPosition","Asgard\\Entity\\Property","Asgard\/Entity\/Property.html#method_setPosition","(integer $position)","Set property position.",2],["Property::getPosition","Asgard\\Entity\\Property","Asgard\/Entity\/Property.html#method_getPosition","()","Get the property position.",2],["Property::setName","Asgard\\Entity\\Property","Asgard\/Entity\/Property.html#method_setName","(string $name)","Set the name.",2],["Property::setDefinition","Asgard\\Entity\\Property","Asgard\/Entity\/Property.html#method_setDefinition","(<a href=\"Asgard\/Entity\/Definition.html\"><abbr title=\"Asgard\\Entity\\Definition\">Definition<\/abbr><\/a> $definition)","Set the definition.",2],["Property::required","Asgard\\Entity\\Property","Asgard\/Entity\/Property.html#method_required","()","Check if entity is required.",2],["Property::get","Asgard\\Entity\\Property","Asgard\/Entity\/Property.html#method_get","(string $path, mixed $default = null)","Get a parameter.",2],["Property::set","Asgard\\Entity\\Property","Asgard\/Entity\/Property.html#method_set","(string $path, mixed $value)","Set a parameter.",2],["Property::has","Asgard\\Entity\\Property","Asgard\/Entity\/Property.html#method_has","(string $path)","Check if has a parameter.",2],["Property::getParams","Asgard\\Entity\\Property","Asgard\/Entity\/Property.html#method_getParams","()","Return parameters.",2],["Property::getName","Asgard\\Entity\\Property","Asgard\/Entity\/Property.html#method_getName","()","Return the name.",2],["Property::__toString","Asgard\\Entity\\Property","Asgard\/Entity\/Property.html#method___toString","()","__toString magic method.",2],["Property::getDefault","Asgard\\Entity\\Property","Asgard\/Entity\/Property.html#method_getDefault","(<a href=\"Asgard\/Entity\/Entity.html\"><abbr title=\"Asgard\\Entity\\Entity\">Entity<\/abbr><\/a> $entity, <abbr title=\"Asgard\\Entity\\strng\">strng<\/abbr> $name)","Return the default value.",2],["Property::prepareValidator","Asgard\\Entity\\Property","Asgard\/Entity\/Property.html#method_prepareValidator","(<abbr title=\"Asgard\\Entity\\Asgard\\Validation\\ValidatorInterface\">ValidatorInterface<\/abbr> $validator)","Prepare the validator.",2],["Property::getMessages","Asgard\\Entity\\Property","Asgard\/Entity\/Property.html#method_getMessages","()","Return the validation messages.",2],["Property::serialize","Asgard\\Entity\\Property","Asgard\/Entity\/Property.html#method_serialize","(mixed $val)","Serialize the value.",2],["Property::unserialize","Asgard\\Entity\\Property","Asgard\/Entity\/Property.html#method_unserialize","(string $str, <a href=\"Asgard\/Entity\/Entity.html\"><abbr title=\"Asgard\\Entity\\Entity\">Entity<\/abbr><\/a> $entity, string $name)","Unserialize a string.",2],["Property::setDecorator","Asgard\\Entity\\Property","Asgard\/Entity\/Property.html#method_setDecorator","(mixed $val, <a href=\"Asgard\/Entity\/Entity.html\"><abbr title=\"Asgard\\Entity\\Entity\">Entity<\/abbr><\/a> $entity, string $name)","Pre-process value before passing it to entity.",2],["Property::doSet","Asgard\\Entity\\Property","Asgard\/Entity\/Property.html#method_doSet","(mixed $val, <a href=\"Asgard\/Entity\/Entity.html\"><abbr title=\"Asgard\\Entity\\Entity\">Entity<\/abbr><\/a> $entity, string $name)","Actually pre-process value for a single element.",2],["RelationsBehavior::static_relations","Asgard\\Entity\\RelationsBehavior","Asgard\/Entity\/RelationsBehavior.html#method_static_relations","()","Article::relations()",2],["RelationsBehavior::static_relation","Asgard\\Entity\\RelationsBehavior","Asgard\/Entity\/RelationsBehavior.html#method_static_relation","(string $name)","Article::relation('parent')",2],["RelationsBehavior::static_hasRelation","Asgard\\Entity\\RelationsBehavior","Asgard\/Entity\/RelationsBehavior.html#method_static_hasRelation","(string $name)","Article::hasRelation('parent')",2],["RelationsBehavior::call_related","Asgard\\Entity\\RelationsBehavior","Asgard\/Entity\/RelationsBehavior.html#method_call_related","(<abbr title=\"Asgard\\Entity\\Asgard\\Entity\\Entity\">Entity<\/abbr> $entity, string $relation)","$article->relation('category')",2],["Serializer::singleton","Asgard\\Entity\\Serializer","Asgard\/Entity\/Serializer.html#method_singleton","()","",2],["Serializer::toArrayRaw","Asgard\\Entity\\Serializer","Asgard\/Entity\/Serializer.html#method_toArrayRaw","(<a href=\"Asgard\/Entity\/Entity.html\"><abbr title=\"Asgard\\Entity\\Entity\">Entity<\/abbr><\/a> $entity, integer $depth)","Convert entity to a raw array.",2],["Serializer::toArray","Asgard\\Entity\\Serializer","Asgard\/Entity\/Serializer.html#method_toArray","(<a href=\"Asgard\/Entity\/Entity.html\"><abbr title=\"Asgard\\Entity\\Entity\">Entity<\/abbr><\/a> $entity, integer $depth)","Convert entity to a formatted array.",2],["Serializer::toJSON","Asgard\\Entity\\Serializer","Asgard\/Entity\/Serializer.html#method_toJSON","(<a href=\"Asgard\/Entity\/Entity.html\"><abbr title=\"Asgard\\Entity\\Entity\">Entity<\/abbr><\/a> $entity, integer $depth)","Convert entity to json.",2],["Serializer::toArrayRawI18N","Asgard\\Entity\\Serializer","Asgard\/Entity\/Serializer.html#method_toArrayRawI18N","(<a href=\"Asgard\/Entity\/Entity.html\"><abbr title=\"Asgard\\Entity\\Entity\">Entity<\/abbr><\/a> $entity, array $locales = array(), integer $depth)","Convert entity to a raw array with translations.",2],["Serializer::toArrayI18N","Asgard\\Entity\\Serializer","Asgard\/Entity\/Serializer.html#method_toArrayI18N","(<a href=\"Asgard\/Entity\/Entity.html\"><abbr title=\"Asgard\\Entity\\Entity\">Entity<\/abbr><\/a> $entity, array $locales = array(), integer $depth)","Convert entity to a formatted array with translations.",2],["Serializer::toJSONI18N","Asgard\\Entity\\Serializer","Asgard\/Entity\/Serializer.html#method_toJSONI18N","(<a href=\"Asgard\/Entity\/Entity.html\"><abbr title=\"Asgard\\Entity\\Entity\">Entity<\/abbr><\/a> $entity, array $locales = array(), integer $depth)","Convert entity to JSON with translations.",2],["Serializer::arrayToJSONI18N","Asgard\\Entity\\Serializer","Asgard\/Entity\/Serializer.html#method_arrayToJSONI18N","(array $entities, array $locales = array(), integer $depth)","Convert many entities to JSON with translations.",2],["Serializer::arrayToJSON","Asgard\\Entity\\Serializer","Asgard\/Entity\/Serializer.html#method_arrayToJSON","(array $entities, integer $depth)","Convert an array of entities to json.",2],["EntityFieldSolver::__construct","Asgard\\Entityform\\EntityFieldSolver","Asgard\/Entityform\/EntityFieldSolver.html#method___construct","(array $solvers = array())","Constructor.",2],["EntityFieldSolver::addSolver","Asgard\\Entityform\\EntityFieldSolver","Asgard\/Entityform\/EntityFieldSolver.html#method_addSolver","(<a href=\"Asgard\/Entityform\/EntityFieldSolverInterface.html\"><abbr title=\"Asgard\\Entityform\\EntityFieldSolverInterface\">EntityFieldSolverInterface<\/abbr><\/a> $solver)","Add a nested solver.",2],["EntityFieldSolver::add","Asgard\\Entityform\\EntityFieldSolver","Asgard\/Entityform\/EntityFieldSolver.html#method_add","(callable $cb)","Add a callback.",2],["EntityFieldSolver::addMany","Asgard\\Entityform\\EntityFieldSolver","Asgard\/Entityform\/EntityFieldSolver.html#method_addMany","(callable $cb)","Add a \"many\" callback.",2],["EntityFieldSolver::solve","Asgard\\Entityform\\EntityFieldSolver","Asgard\/Entityform\/EntityFieldSolver.html#method_solve","(<abbr title=\"Asgard\\Entityform\\Asgard\\Entity\\Property\">Property<\/abbr> $property)","Solve a property.",2],["EntityFieldSolver::doSolve","Asgard\\Entityform\\EntityFieldSolver","Asgard\/Entityform\/EntityFieldSolver.html#method_doSolve","(<abbr title=\"Asgard\\Entityform\\Asgard\\Entity\\Property\">Property<\/abbr> $property)","Actually solve a \"single\" property.",2],["EntityFieldSolver::doSolveMany","Asgard\\Entityform\\EntityFieldSolver","Asgard\/Entityform\/EntityFieldSolver.html#method_doSolveMany","(<abbr title=\"Asgard\\Entityform\\Asgard\\Entity\\Property\">Property<\/abbr> $property)","Actually solve a \"many\" property.",2],["EntityFieldSolverInterface::addSolver","Asgard\\Entityform\\EntityFieldSolverInterface","Asgard\/Entityform\/EntityFieldSolverInterface.html#method_addSolver","(<a href=\"Asgard\/Entityform\/EntityFieldSolverInterface.html\"><abbr title=\"Asgard\\Entityform\\EntityFieldSolverInterface\">EntityFieldSolverInterface<\/abbr><\/a> $solver)","Add a nested solver.",2],["EntityFieldSolverInterface::add","Asgard\\Entityform\\EntityFieldSolverInterface","Asgard\/Entityform\/EntityFieldSolverInterface.html#method_add","(callable $cb)","Add a callback.",2],["EntityFieldSolverInterface::addMany","Asgard\\Entityform\\EntityFieldSolverInterface","Asgard\/Entityform\/EntityFieldSolverInterface.html#method_addMany","(callable $cb)","Add a \"many\" callback.",2],["EntityFieldSolverInterface::solve","Asgard\\Entityform\\EntityFieldSolverInterface","Asgard\/Entityform\/EntityFieldSolverInterface.html#method_solve","(<abbr title=\"Asgard\\Entityform\\Asgard\\Entity\\Property\">Property<\/abbr> $property)","Solve a property.",2],["EntityFieldSolverInterface::doSolve","Asgard\\Entityform\\EntityFieldSolverInterface","Asgard\/Entityform\/EntityFieldSolverInterface.html#method_doSolve","(<abbr title=\"Asgard\\Entityform\\Asgard\\Entity\\Property\">Property<\/abbr> $property)","Actually solve a \"single\" property.",2],["EntityFieldSolverInterface::doSolveMany","Asgard\\Entityform\\EntityFieldSolverInterface","Asgard\/Entityform\/EntityFieldSolverInterface.html#method_doSolveMany","(<abbr title=\"Asgard\\Entityform\\Asgard\\Entity\\Property\">Property<\/abbr> $property)","Actually solve a \"many\" property.",2],["EntityForm::__construct","Asgard\\Entityform\\EntityForm","Asgard\/Entityform\/EntityForm.html#method___construct","(<abbr title=\"Asgard\\Entityform\\Asgard\\Entity\\Entity\">Entity<\/abbr> $entity, array $options = array(), <abbr title=\"Asgard\\Entityform\\Asgard\\Http\\Request\">Request<\/abbr> $request = null, <a href=\"Asgard\/Entityform\/EntityFieldSolverInterface.html\"><abbr title=\"Asgard\\Entityform\\EntityFieldSolverInterface\">EntityFieldSolverInterface<\/abbr><\/a> $entityFieldSolver = null, <abbr title=\"Asgard\\Entityform\\Asgard\\Orm\\DataMapperInterface\">DataMapperInterface<\/abbr> $dataMapper = null)","Constructor.",2],["EntityForm::addentityFieldSolver","Asgard\\Entityform\\EntityForm","Asgard\/Entityform\/EntityForm.html#method_addentityFieldSolver","($entityFieldSolver)","{@inheritDoc}",2],["EntityForm::getentityFieldSolver","Asgard\\Entityform\\EntityForm","Asgard\/Entityform\/EntityForm.html#method_getentityFieldSolver","()","{@inheritDoc}",2],["EntityForm::setDataMapper","Asgard\\Entityform\\EntityForm","Asgard\/Entityform\/EntityForm.html#method_setDataMapper","(<abbr title=\"Asgard\\Entityform\\Asgard\\Orm\\DataMapperInterface\">DataMapperInterface<\/abbr> $dataMapper)","Set DataMapper dependency.",2],["EntityForm::getDataMapper","Asgard\\Entityform\\EntityForm","Asgard\/Entityform\/EntityForm.html#method_getDataMapper","()","Return DataMapper dependency.",2],["EntityForm::getEntity","Asgard\\Entityform\\EntityForm","Asgard\/Entityform\/EntityForm.html#method_getEntity","()","Return the entity.",2],["EntityForm::addRelation","Asgard\\Entityform\\EntityForm","Asgard\/Entityform\/EntityForm.html#method_addRelation","(string $name, $cb = null)","Embed an entity relation in the form.",2],["EntityForm::doSave","Asgard\\Entityform\\EntityForm","Asgard\/Entityform\/EntityForm.html#method_doSave","()","Actually perform the group saving.",2],["EntityForm::errors","Asgard\\Entityform\\EntityForm","Asgard\/Entityform\/EntityForm.html#method_errors","($validationGroups = array(), $group = null)","Return errors.",2],["EntityFormInterface::addEntityFieldSolver","Asgard\\Entityform\\EntityFormInterface","Asgard\/Entityform\/EntityFormInterface.html#method_addEntityFieldSolver","(<a href=\"Asgard\/Entityform\/EntityFieldSolverInterface.html\"><abbr title=\"Asgard\\Entityform\\EntityFieldSolverInterface\">EntityFieldSolverInterface<\/abbr><\/a> $EntityFieldSolver)","Add another nested fields solver.",2],["EntityFormInterface::getEntityFieldSolver","Asgard\\Entityform\\EntityFormInterface","Asgard\/Entityform\/EntityFormInterface.html#method_getEntityFieldSolver","()","Return the main fields solver.",2],["EntityFormInterface::setDataMapper","Asgard\\Entityform\\EntityFormInterface","Asgard\/Entityform\/EntityFormInterface.html#method_setDataMapper","(<abbr title=\"Asgard\\Entityform\\Asgard\\Orm\\DataMapperInterface\">DataMapperInterface<\/abbr> $dataMapper)","Set DataMapper dependency.",2],["EntityFormInterface::getDataMapper","Asgard\\Entityform\\EntityFormInterface","Asgard\/Entityform\/EntityFormInterface.html#method_getDataMapper","()","Return DataMapper dependency.",2],["EntityFormInterface::getEntity","Asgard\\Entityform\\EntityFormInterface","Asgard\/Entityform\/EntityFormInterface.html#method_getEntity","()","Return the entity.",2],["EntityFormInterface::addRelation","Asgard\\Entityform\\EntityFormInterface","Asgard\/Entityform\/EntityFormInterface.html#method_addRelation","(string $name)","Embed an entity relation in the form.",2],["EntityFormInterface::doSave","Asgard\\Entityform\\EntityFormInterface","Asgard\/Entityform\/EntityFormInterface.html#method_doSave","()","Save the entity.",2],["EntityFormInterface::errors","Asgard\\Entityform\\EntityFormInterface","Asgard\/Entityform\/EntityFormInterface.html#method_errors","(<a href=\"Asgard\/Form\/GroupInterface.html\"><abbr title=\"Asgard\\Form\\GroupInterface\">GroupInterface<\/abbr><\/a> $group = null)","Return the errors of a nested-group if provided, or",2],["File::__construct","Asgard\\File\\File","Asgard\/File\/File.html#method___construct","(string $src = null, string $name = null)","Constructor.",2],["File::setSrc","Asgard\\File\\File","Asgard\/File\/File.html#method_setSrc","(string $src)","Set the file path.",2],["File::setName","Asgard\\File\\File","Asgard\/File\/File.html#method_setName","(string $name)","Set the file name.",2],["File::getName","Asgard\\File\\File","Asgard\/File\/File.html#method_getName","()","Get the name basename.",2],["File::setUploaded","Asgard\\File\\File","Asgard\/File\/File.html#method_setUploaded","(boolean $uploaded)","Set uploaded to a given value.",2],["File::isUploaded","Asgard\\File\\File","Asgard\/File\/File.html#method_isUploaded","()","Check if the file was uploaded.",2],["File::size","Asgard\\File\\File","Asgard\/File\/File.html#method_size","()","Return the file size.",2],["File::type","Asgard\\File\\File","Asgard\/File\/File.html#method_type","()","Return the file type.",2],["File::extension","Asgard\\File\\File","Asgard\/File\/File.html#method_extension","()","Return the file extension.",2],["File::exists","Asgard\\File\\File","Asgard\/File\/File.html#method_exists","()","Check if the file exists.",2],["File::src","Asgard\\File\\File","Asgard\/File\/File.html#method_src","()","Return the source path.",2],["File::relativeTo","Asgard\\File\\File","Asgard\/File\/File.html#method_relativeTo","(string $path)","Get the relative path to a given one.",2],["File::moveToDir","Asgard\\File\\File","Asgard\/File\/File.html#method_moveToDir","(string $dir, integer $mode = null)","Move the file to a directory.",2],["File::isIn","Asgard\\File\\File","Asgard\/File\/File.html#method_isIn","(string $dir)","Check if the file is in a given directory.",2],["File::isAt","Asgard\\File\\File","Asgard\/File\/File.html#method_isAt","(string $at)","Check if the file is at a given path.",2],["File::rename","Asgard\\File\\File","Asgard\/File\/File.html#method_rename","(string $dst, integer $mode = null)","Rename the file.",2],["File::delete","Asgard\\File\\File","Asgard\/File\/File.html#method_delete","()","Delete the file.",2],["File::copy","Asgard\\File\\File","Asgard\/File\/File.html#method_copy","(string $dst, integer $mode = null)","Copy the file.",2],["FileSystem::relativeTo","Asgard\\File\\FileSystem","Asgard\/File\/FileSystem.html#method_relativeTo","(string $from, string $to)","Get the relative path.",2],["FileSystem::getNewFilename","Asgard\\File\\FileSystem","Asgard\/File\/FileSystem.html#method_getNewFilename","(string $dst)","Get a new unique filename if file exists.",2],["FileSystem::rename","Asgard\\File\\FileSystem","Asgard\/File\/FileSystem.html#method_rename","(string $src, string $dst, integer $mode = null)","Rename a file.",2],["FileSystem::copy","Asgard\\File\\FileSystem","Asgard\/File\/FileSystem.html#method_copy","(string $src, string $dst, integer $mode = null)","Copy a file.",2],["FileSystem::delete","Asgard\\File\\FileSystem","Asgard\/File\/FileSystem.html#method_delete","(string $file)","Delete a file.",2],["FileSystem::mkdir","Asgard\\File\\FileSystem","Asgard\/File\/FileSystem.html#method_mkdir","(string $dir)","Make a directory.",2],["FileSystem::write","Asgard\\File\\FileSystem","Asgard\/File\/FileSystem.html#method_write","(string $dst, string $content, integer $mode = null, boolean $append = false)","Write into a file.",2],["Extension::__construct","Asgard\\File\\Rules\\Extension","Asgard\/File\/Rules\/Extension.html#method___construct","()","Constructor.",2],["Extension::validate","Asgard\\File\\Rules\\Extension","Asgard\/File\/Rules\/Extension.html#method_validate","(mixed $input, <abbr title=\"Asgard\\File\\Rules\\Asgard\\Validation\\InputBag\">InputBag<\/abbr> $parentInput, <abbr title=\"Asgard\\File\\Rules\\Asgard\\Validation\\ValidatorInterface\">ValidatorInterface<\/abbr> $validator)","{@inherits}",2],["Extension::formatParameters","Asgard\\File\\Rules\\Extension","Asgard\/File\/Rules\/Extension.html#method_formatParameters","(array $params)","{@inherits}",2],["Extension::getMessage","Asgard\\File\\Rules\\Extension","Asgard\/File\/Rules\/Extension.html#method_getMessage","()","{@inherits}",2],["Image::validate","Asgard\\File\\Rules\\Image","Asgard\/File\/Rules\/Image.html#method_validate","(mixed $input, <abbr title=\"Asgard\\File\\Rules\\Asgard\\Validation\\InputBag\">InputBag<\/abbr> $parentInput, <abbr title=\"Asgard\\File\\Rules\\Asgard\\Validation\\ValidatorInterface\">ValidatorInterface<\/abbr> $validator)","{@inherits}",2],["Image::getMessage","Asgard\\File\\Rules\\Image","Asgard\/File\/Rules\/Image.html#method_getMessage","()","{@inherits}",2],["DynamicGroup::__construct","Asgard\\Form\\DynamicGroup","Asgard\/Form\/DynamicGroup.html#method___construct","(callable $cb = null, callable $default_render = null)","Constructor.",2],["DynamicGroup::setCallback","Asgard\\Form\\DynamicGroup","Asgard\/Form\/DynamicGroup.html#method_setCallback","(callable $cb)","Set callback.",2],["DynamicGroup::setData","Asgard\\Form\\DynamicGroup","Asgard\/Form\/DynamicGroup.html#method_setData","(array $data)","Set group data.",2],["DynamicGroup::setDefaultRender","Asgard\\Form\\DynamicGroup","Asgard\/Form\/DynamicGroup.html#method_setDefaultRender","(callable $default_render)","Set default renderer.",2],["DynamicGroup::field","Asgard\\Form\\DynamicGroup","Asgard\/Form\/DynamicGroup.html#method_field","(<a href=\"Asgard\/Form\/Group.html\"><abbr title=\"Asgard\\Form\\Group\">Group<\/abbr><\/a>|<a href=\"Asgard\/Form\/Field.html\"><abbr title=\"Asgard\\Form\\Field\">Field<\/abbr><\/a> $field = null)","Render a field or a sub-group.",2],["DynamicGroup::renderTemplate","Asgard\\Form\\DynamicGroup","Asgard\/Form\/DynamicGroup.html#method_renderTemplate","(string $offset = &#039;&#039;)","Render the javascript template.",2],["Field::__construct","Asgard\\Form\\Field","Asgard\/Form\/Field.html#method___construct","(array $options = array())","Constructor.",2],["Field::required","Asgard\\Form\\Field","Asgard\/Form\/Field.html#method_required","()","",2],["Field::getName","Asgard\\Form\\Field","Asgard\/Form\/Field.html#method_getName","()","Return the name.",2],["Field::setOptions","Asgard\\Form\\Field","Asgard\/Form\/Field.html#method_setOptions","(array $options)","Set field options.",2],["Field::getOption","Asgard\\Form\\Field","Asgard\/Form\/Field.html#method_getOption","($name)","",2],["Field::getTopForm","Asgard\\Form\\Field","Asgard\/Form\/Field.html#method_getTopForm","()","Get the top parent form.",2],["Field::getValidationRules","Asgard\\Form\\Field","Asgard\/Form\/Field.html#method_getValidationRules","()","Get field validation rules.",2],["Field::getValidationMessages","Asgard\\Form\\Field","Asgard\/Form\/Field.html#method_getValidationMessages","()","Get field validation messages.",2],["Field::__call","Asgard\\Form\\Field","Asgard\/Form\/Field.html#method___call","(string $name, array $args)","__call magic method.",2],["Field::setDefaultWidget","Asgard\\Form\\Field","Asgard\/Form\/Field.html#method_setDefaultWidget","(string|callable $widget)","Set default widget renderer.",2],["Field::label","Asgard\\Form\\Field","Asgard\/Form\/Field.html#method_label","()","Get field's label.",2],["Field::labelTag","Asgard\\Form\\Field","Asgard\/Form\/Field.html#method_labelTag","(string $label = null, string $for = null)","Get field's HTML label tag.",2],["Field::def","Asgard\\Form\\Field","Asgard\/Form\/Field.html#method_def","(array $options = array())","Use the default renderer.",2],["Field::render","Asgard\\Form\\Field","Asgard\/Form\/Field.html#method_render","(callable $render_callback, array $options = array())","Render with a custom renderer.",2],["Field::__toString","Asgard\\Form\\Field","Asgard\/Form\/Field.html#method___toString","()","__toString magic method.",2],["Field::value","Asgard\\Form\\Field","Asgard\/Form\/Field.html#method_value","()","Get the value.",2],["Field::setParent","Asgard\\Form\\Field","Asgard\/Form\/Field.html#method_setParent","(<a href=\"Asgard\/Form\/GroupInterface.html\"><abbr title=\"Asgard\\Form\\GroupInterface\">GroupInterface<\/abbr><\/a> $parent)","Set the parent.",2],["Field::getParent","Asgard\\Form\\Field","Asgard\/Form\/Field.html#method_getParent","()","Get the parent.",2],["Field::setName","Asgard\\Form\\Field","Asgard\/Form\/Field.html#method_setName","(string $name)","Set the name.",2],["Field::setValue","Asgard\\Form\\Field","Asgard\/Form\/Field.html#method_setValue","(mixed $value)","Set the value.",2],["Field::getParents","Asgard\\Form\\Field","Asgard\/Form\/Field.html#method_getParents","()","Get all parents.",2],["Field::getID","Asgard\\Form\\Field","Asgard\/Form\/Field.html#method_getID","()","Get field id.",2],["Field::name","Asgard\\Form\\Field","Asgard\/Form\/Field.html#method_name","()","Get the full name.",2],["Field::shortName","Asgard\\Form\\Field","Asgard\/Form\/Field.html#method_shortName","()","Get the field short name.",2],["Field::setErrors","Asgard\\Form\\Field","Asgard\/Form\/Field.html#method_setErrors","(<abbr title=\"Asgard\\Form\\Asgard\\Validation\\Report\">Report<\/abbr> $errors)","Set the errors.",2],["Field::error","Asgard\\Form\\Field","Asgard\/Form\/Field.html#method_error","()","Return the first error.",2],["Field::errors","Asgard\\Form\\Field","Asgard\/Form\/Field.html#method_errors","()","Return all errors.",2],["BooleanField::value","Asgard\\Form\\Fields\\BooleanField","Asgard\/Form\/Fields\/BooleanField.html#method_value","()","Get the value.",2],["CSRFField::__construct","Asgard\\Form\\Fields\\CSRFField","Asgard\/Form\/Fields\/CSRFField.html#method___construct","(array $options = array(), <abbr title=\"Asgard\\Form\\Fields\\Asgard\\Common\\Session\">Session<\/abbr> $session = null)","Constructor.",2],["CSRFField::valid","Asgard\\Form\\Fields\\CSRFField","Asgard\/Form\/Fields\/CSRFField.html#method_valid","()","Validation callback.",2],["CountryField::__construct","Asgard\\Form\\Fields\\CountryField","Asgard\/Form\/Fields\/CountryField.html#method___construct","(array $options = array(), <abbr title=\"Asgard\\Form\\Fields\\Asgard\\Common\\Intl\">Intl<\/abbr> $intl = null)","Constructor.",2],["CountryField::seIntl","Asgard\\Form\\Fields\\CountryField","Asgard\/Form\/Fields\/CountryField.html#method_seIntl","($intl)","",2],["DateField::setValue","Asgard\\Form\\Fields\\DateField","Asgard\/Form\/Fields\/DateField.html#method_setValue","(mixed $value)","Set the value.",2],["DateField::value","Asgard\\Form\\Fields\\DateField","Asgard\/Form\/Fields\/DateField.html#method_value","()","Get the value.",2],["DateField::getDay","Asgard\\Form\\Fields\\DateField","Asgard\/Form\/Fields\/DateField.html#method_getDay","()","Return the day.",2],["DateField::getMonth","Asgard\\Form\\Fields\\DateField","Asgard\/Form\/Fields\/DateField.html#method_getMonth","()","[gReturn the month.",2],["DateField::getYear","Asgard\\Form\\Fields\\DateField","Asgard\/Form\/Fields\/DateField.html#method_getYear","()","[Return the year.",2],["DatetimeField::setValue","Asgard\\Form\\Fields\\DatetimeField","Asgard\/Form\/Fields\/DatetimeField.html#method_setValue","(mixed $value)","Set the value.",2],["DatetimeField::value","Asgard\\Form\\Fields\\DatetimeField","Asgard\/Form\/Fields\/DatetimeField.html#method_value","()","Get the value.",2],["DatetimeField::getHour","Asgard\\Form\\Fields\\DatetimeField","Asgard\/Form\/Fields\/DatetimeField.html#method_getHour","()","Return the hours.",2],["DatetimeField::getMinute","Asgard\\Form\\Fields\\DatetimeField","Asgard\/Form\/Fields\/DatetimeField.html#method_getMinute","()","Return the minutes.",2],["DatetimeField::getSecond","Asgard\\Form\\Fields\\DatetimeField","Asgard\/Form\/Fields\/DatetimeField.html#method_getSecond","()","Return the seconds.",2],["DatetimeField::getDay","Asgard\\Form\\Fields\\DatetimeField","Asgard\/Form\/Fields\/DatetimeField.html#method_getDay","()","Return the day.",2],["DatetimeField::getMonth","Asgard\\Form\\Fields\\DatetimeField","Asgard\/Form\/Fields\/DatetimeField.html#method_getMonth","()","Return the month.",2],["DatetimeField::getYear","Asgard\\Form\\Fields\\DatetimeField","Asgard\/Form\/Fields\/DatetimeField.html#method_getYear","()","Return the year.",2],["DayField::__construct","Asgard\\Form\\Fields\\DayField","Asgard\/Form\/Fields\/DayField.html#method___construct","(array $options = array())","Constructor.",2],["MonthField::__construct","Asgard\\Form\\Fields\\MonthField","Asgard\/Form\/Fields\/MonthField.html#method___construct","(array $options = array())","Constructor.",2],["MultipleSelectField::value","Asgard\\Form\\Fields\\MultipleSelectField","Asgard\/Form\/Fields\/MultipleSelectField.html#method_value","()","Get the value.",2],["MultipleSelectField::getChoices","Asgard\\Form\\Fields\\MultipleSelectField","Asgard\/Form\/Fields\/MultipleSelectField.html#method_getChoices","()","Return choices.",2],["MultipleSelectField::getCheckboxes","Asgard\\Form\\Fields\\MultipleSelectField","Asgard\/Form\/Fields\/MultipleSelectField.html#method_getCheckboxes","(array $options = array())","Return checkboxes.",2],["MultipleSelectField::getCheckbox","Asgard\\Form\\Fields\\MultipleSelectField","Asgard\/Form\/Fields\/MultipleSelectField.html#method_getCheckbox","(string $name, array $options = array())","Return a checkbox widget.",2],["MultipleSelectField::getValidationRules","Asgard\\Form\\Fields\\MultipleSelectField","Asgard\/Form\/Fields\/MultipleSelectField.html#method_getValidationRules","()","Get field validation rules.",2],["SelectField::getChoices","Asgard\\Form\\Fields\\SelectField","Asgard\/Form\/Fields\/SelectField.html#method_getChoices","()","Return choices.",2],["SelectField::getRadio","Asgard\\Form\\Fields\\SelectField","Asgard\/Form\/Fields\/SelectField.html#method_getRadio","(string $name, array $options = array())","Return a radio widget.",2],["SelectField::getRadios","Asgard\\Form\\Fields\\SelectField","Asgard\/Form\/Fields\/SelectField.html#method_getRadios","(array $options = array())","Return radios widgets.",2],["SelectField::getValidationRules","Asgard\\Form\\Fields\\SelectField","Asgard\/Form\/Fields\/SelectField.html#method_getValidationRules","()","Get field validation rules.",2],["TimeField::setValue","Asgard\\Form\\Fields\\TimeField","Asgard\/Form\/Fields\/TimeField.html#method_setValue","(mixed $value)","Set the value.",2],["TimeField::value","Asgard\\Form\\Fields\\TimeField","Asgard\/Form\/Fields\/TimeField.html#method_value","()","Get the value.",2],["TimeField::getHour","Asgard\\Form\\Fields\\TimeField","Asgard\/Form\/Fields\/TimeField.html#method_getHour","()","Return the hours.",2],["TimeField::getMinute","Asgard\\Form\\Fields\\TimeField","Asgard\/Form\/Fields\/TimeField.html#method_getMinute","()","Return the minutes.",2],["TimeField::getSecond","Asgard\\Form\\Fields\\TimeField","Asgard\/Form\/Fields\/TimeField.html#method_getSecond","()","Return the seconds.",2],["YearField::__construct","Asgard\\Form\\Fields\\YearField","Asgard\/Form\/Fields\/YearField.html#method___construct","(array $options = array())","Constructor.",2],["Form::__construct","Asgard\\Form\\Form","Asgard\/Form\/Form.html#method___construct","(string $name = null, array $options = array(), <abbr title=\"Asgard\\Form\\Asgard\\Http\\Request\">Request<\/abbr> $request = null, array $fields = array())","Constructor.",2],["Form::setValidatorFactory","Asgard\\Form\\Form","Asgard\/Form\/Form.html#method_setValidatorFactory","(<abbr title=\"Asgard\\Form\\Asgard\\Validation\\ValidatorFactoryInterface\">ValidatorFactoryInterface<\/abbr> $validatorFactory)","Set validator factory dependency.",2],["Form::createValidator","Asgard\\Form\\Form","Asgard\/Form\/Form.html#method_createValidator","()","Create a validator.",2],["Form::setTranslator","Asgard\\Form\\Form","Asgard\/Form\/Form.html#method_setTranslator","(<abbr title=\"Symfony\\Component\\Translation\\TranslatorInterface\">TranslatorInterface<\/abbr> $translator)","Set the translator.",2],["Form::getTranslator","Asgard\\Form\\Form","Asgard\/Form\/Form.html#method_getTranslator","()","Get the translator.",2],["Form::setRequest","Asgard\\Form\\Form","Asgard\/Form\/Form.html#method_setRequest","(<abbr title=\"Asgard\\Form\\Asgard\\Http\\Request\">Request<\/abbr> $request)","Set the request.",2],["Form::getRequest","Asgard\\Form\\Form","Asgard\/Form\/Form.html#method_getRequest","()","Get the request from group or a parent.",2],["Form::setMethod","Asgard\\Form\\Form","Asgard\/Form\/Form.html#method_setMethod","(string $method)","Set the HTTP method.",2],["Form::getMethod","Asgard\\Form\\Form","Asgard\/Form\/Form.html#method_getMethod","()","Get the HTTP method.",2],["Form::setOption","Asgard\\Form\\Form","Asgard\/Form\/Form.html#method_setOption","(string $option, mixed $value)","Set an option.",2],["Form::getOption","Asgard\\Form\\Form","Asgard\/Form\/Form.html#method_getOption","(string $option)","Get an option.",2],["Form::csrf","Asgard\\Form\\Form","Asgard\/Form\/Form.html#method_csrf","(boolean $active = true)","Activate CSRF protection.",2],["Form::setSaveCallback","Asgard\\Form\\Form","Asgard\/Form\/Form.html#method_setSaveCallback","(callable $saveCallback)","Set the save callback.",2],["Form::setPreSaveCallback","Asgard\\Form\\Form","Asgard\/Form\/Form.html#method_setPreSaveCallback","(callable $preSaveCallback)","Set the pre-save callback.",2],["Form::save","Asgard\\Form\\Form","Asgard\/Form\/Form.html#method_save","($validationGroups = array())","Save the form and its children.",2],["Form::doSave","Asgard\\Form\\Form","Asgard\/Form\/Form.html#method_doSave","()","Actually perform the group saving.",2],["Form::sent","Asgard\\Form\\Form","Asgard\/Form\/Form.html#method_sent","()","Check if group's form was sent.",2],["Form::getGeneralErrors","Asgard\\Form\\Form","Asgard\/Form\/Form.html#method_getGeneralErrors","()","Get errors not belonging to a specific field or hidden",2],["Form::isValid","Asgard\\Form\\Form","Asgard\/Form\/Form.html#method_isValid","($validationGroups = array())","Check if group is valid.",2],["Form::uploadSuccess","Asgard\\Form\\Form","Asgard\/Form\/Form.html#method_uploadSuccess","()","Check if content was uploaded successfully.",2],["Form::open","Asgard\\Form\\Form","Asgard\/Form\/Form.html#method_open","(array $options = array())","Return the opening form tag.",2],["Form::close","Asgard\\Form\\Form","Asgard\/Form\/Form.html#method_close","()","Return the closing form tag.",2],["Form::submit","Asgard\\Form\\Form","Asgard\/Form\/Form.html#method_submit","(mixed $value, array $options = array())","Return the submit button.",2],["Form::setParent","Asgard\\Form\\Form","Asgard\/Form\/Form.html#method_setParent","(<a href=\"Asgard\/Form\/GroupInterface.html\"><abbr title=\"Asgard\\Form\\GroupInterface\">GroupInterface<\/abbr><\/a> $parent)","Set parent.",2],["Form::fetch","Asgard\\Form\\Form","Asgard\/Form\/Form.html#method_fetch","()","Fetch data.",2],["Form::doRender","Asgard\\Form\\Form","Asgard\/Form\/Form.html#method_doRender","(string|callable $render_callback, <a href=\"Asgard\/Form\/Group.html\"><abbr title=\"Asgard\\Form\\Group\">Group<\/abbr><\/a>|<a href=\"Asgard\/Form\/Field.html\"><abbr title=\"Asgard\\Form\\Field\">Field<\/abbr><\/a> $field, array $options)","Pass the doRender call to the parent group\/form.",2],["Form::getWidget","Asgard\\Form\\Form","Asgard\/Form\/Form.html#method_getWidget","(string|callable $widget, string $name, mixed $value, array $options = array())","Return a new widget instance.",2],["FormInterface::setValidatorFactory","Asgard\\Form\\FormInterface","Asgard\/Form\/FormInterface.html#method_setValidatorFactory","(<abbr title=\"Asgard\\Form\\Asgard\\Validation\\ValidatorFactoryInterface\">ValidatorFactoryInterface<\/abbr> $validatorFactory)","Set validator factory dependency.",2],["FormInterface::createValidator","Asgard\\Form\\FormInterface","Asgard\/Form\/FormInterface.html#method_createValidator","()","Create a validator.",2],["FormInterface::setTranslator","Asgard\\Form\\FormInterface","Asgard\/Form\/FormInterface.html#method_setTranslator","(<abbr title=\"Symfony\\Component\\Translation\\TranslatorInterface\">TranslatorInterface<\/abbr> $translator)","Set the translator.",2],["FormInterface::getTranslator","Asgard\\Form\\FormInterface","Asgard\/Form\/FormInterface.html#method_getTranslator","()","Get a translator, from this form or a parent.",2],["FormInterface::setRequest","Asgard\\Form\\FormInterface","Asgard\/Form\/FormInterface.html#method_setRequest","(<abbr title=\"Asgard\\Form\\Asgard\\Http\\Request\">Request<\/abbr> $request)","Set the request.",2],["FormInterface::getRequest","Asgard\\Form\\FormInterface","Asgard\/Form\/FormInterface.html#method_getRequest","()","Get the request from this form or parent.",2],["FormInterface::setMethod","Asgard\\Form\\FormInterface","Asgard\/Form\/FormInterface.html#method_setMethod","(string $method)","Set the HTTP method.",2],["FormInterface::getMethod","Asgard\\Form\\FormInterface","Asgard\/Form\/FormInterface.html#method_getMethod","()","Get the HTTP method.",2],["FormInterface::setOption","Asgard\\Form\\FormInterface","Asgard\/Form\/FormInterface.html#method_setOption","(string $option, mixed $value)","Set an option.",2],["FormInterface::getOption","Asgard\\Form\\FormInterface","Asgard\/Form\/FormInterface.html#method_getOption","(string $option)","Get an option.",2],["FormInterface::csrf","Asgard\\Form\\FormInterface","Asgard\/Form\/FormInterface.html#method_csrf","(boolean $active = true)","Activate CSRF protection.",2],["FormInterface::setSaveCallback","Asgard\\Form\\FormInterface","Asgard\/Form\/FormInterface.html#method_setSaveCallback","(callable $saveCallback)","Set the save callback.",2],["FormInterface::setPreSaveCallback","Asgard\\Form\\FormInterface","Asgard\/Form\/FormInterface.html#method_setPreSaveCallback","(callable $preSaveCallback)","Set the pre-save callback.",2],["FormInterface::save","Asgard\\Form\\FormInterface","Asgard\/Form\/FormInterface.html#method_save","()","Save the form and its children.",2],["FormInterface::doSave","Asgard\\Form\\FormInterface","Asgard\/Form\/FormInterface.html#method_doSave","()","Actually perform the save.",2],["FormInterface::sent","Asgard\\Form\\FormInterface","Asgard\/Form\/FormInterface.html#method_sent","()","Check if form was sent.",2],["FormInterface::getGeneralErrors","Asgard\\Form\\FormInterface","Asgard\/Form\/FormInterface.html#method_getGeneralErrors","()","Get errors not belonging to a specific field or hidden",2],["FormInterface::isValid","Asgard\\Form\\FormInterface","Asgard\/Form\/FormInterface.html#method_isValid","()","Check if form is valid.",2],["FormInterface::uploadSuccess","Asgard\\Form\\FormInterface","Asgard\/Form\/FormInterface.html#method_uploadSuccess","()","Check if content was uploaded successfully.",2],["FormInterface::open","Asgard\\Form\\FormInterface","Asgard\/Form\/FormInterface.html#method_open","(array $options = array())","Return the opening form tag.",2],["FormInterface::close","Asgard\\Form\\FormInterface","Asgard\/Form\/FormInterface.html#method_close","()","Return the closing form tag.",2],["FormInterface::submit","Asgard\\Form\\FormInterface","Asgard\/Form\/FormInterface.html#method_submit","(mixed $value, array $options = array())","Return the submit button.",2],["FormInterface::setParent","Asgard\\Form\\FormInterface","Asgard\/Form\/FormInterface.html#method_setParent","(<a href=\"Asgard\/Form\/GroupInterface.html\"><abbr title=\"Asgard\\Form\\GroupInterface\">GroupInterface<\/abbr><\/a> $parent)","Set the parent.",2],["FormInterface::fetch","Asgard\\Form\\FormInterface","Asgard\/Form\/FormInterface.html#method_fetch","()","Fetch data.",2],["FormInterface::doRender","Asgard\\Form\\FormInterface","Asgard\/Form\/FormInterface.html#method_doRender","(string|callable $render_callback, <a href=\"Asgard\/Form\/Group.html\"><abbr title=\"Asgard\\Form\\Group\">Group<\/abbr><\/a>|<a href=\"Asgard\/Form\/Field.html\"><abbr title=\"Asgard\\Form\\Field\">Field<\/abbr><\/a> $field, array $options)","Do render a field.",2],["FormInterface::getWidget","Asgard\\Form\\FormInterface","Asgard\/Form\/FormInterface.html#method_getWidget","(string|callable $widget, string $name, mixed $value, array $options = array())","Return a new widget instance.",2],["Group::__construct","Asgard\\Form\\Group","Asgard\/Form\/Group.html#method___construct","(array $fields, string $name = null, array $data = array(), <a href=\"Asgard\/Form\/GroupInterface.html\"><abbr title=\"Asgard\\Form\\GroupInterface\">GroupInterface<\/abbr><\/a> $parent = null)","Constructor.",2],["Group::createValidator","Asgard\\Form\\Group","Asgard\/Form\/Group.html#method_createValidator","()","Create a validator.",2],["Group::getTranslator","Asgard\\Form\\Group","Asgard\/Form\/Group.html#method_getTranslator","()","Get the translator.",2],["Group::getRequest","Asgard\\Form\\Group","Asgard\/Form\/Group.html#method_getRequest","()","Get the request from group or a parent.",2],["Group::name","Asgard\\Form\\Group","Asgard\/Form\/Group.html#method_name","()","Return the name.",2],["Group::setName","Asgard\\Form\\Group","Asgard\/Form\/Group.html#method_setName","(string $name)","Set the name.",2],["Group::size","Asgard\\Form\\Group","Asgard\/Form\/Group.html#method_size","()","Return the number of fields.",2],["Group::hasFile","Asgard\\Form\\Group","Asgard\/Form\/Group.html#method_hasFile","()","Check if group has a file.",2],["Group::getWidgetManager","Asgard\\Form\\Group","Asgard\/Form\/Group.html#method_getWidgetManager","()","Return the widgets manager.",2],["Group::setWidgetManager","Asgard\\Form\\Group","Asgard\/Form\/Group.html#method_setWidgetManager","(<a href=\"Asgard\/Form\/WidgetManager.html\"><abbr title=\"Asgard\\Form\\WidgetManager\">WidgetManager<\/abbr><\/a> $WidgetManager)","Set the widgets manager.",2],["Group::render","Asgard\\Form\\Group","Asgard\/Form\/Group.html#method_render","(string|callable $render_callback, <a href=\"Asgard\/Form\/Field.html\"><abbr title=\"Asgard\\Form\\Field\">Field<\/abbr><\/a> $field, array $options = array())","Render a field.",2],["Group::isValid","Asgard\\Form\\Group","Asgard\/Form\/Group.html#method_isValid","()","Check if group is valid.",2],["Group::sent","Asgard\\Form\\Group","Asgard\/Form\/Group.html#method_sent","()","Check if group's form was sent.",2],["Group::errors","Asgard\\Form\\Group","Asgard\/Form\/Group.html#method_errors","($validationGroups = array())","Return errors.",2],["Group::remove","Asgard\\Form\\Group","Asgard\/Form\/Group.html#method_remove","(string $name)","Remove a field.",2],["Group::get","Asgard\\Form\\Group","Asgard\/Form\/Group.html#method_get","(string $name)","Return a field.",2],["Group::add","Asgard\\Form\\Group","Asgard\/Form\/Group.html#method_add","(<a href=\"Asgard\/Form\/Field.html\"><abbr title=\"Asgard\\Form\\Field\">Field<\/abbr><\/a>|<a href=\"Asgard\/Form\/GroupInterface.html\"><abbr title=\"Asgard\\Form\\GroupInterface\">GroupInterface<\/abbr><\/a> $field, string $name = null)","Add a field.",2],["Group::has","Asgard\\Form\\Group","Asgard\/Form\/Group.html#method_has","(string $field_name)","Check if has a field.",2],["Group::resetFields","Asgard\\Form\\Group","Asgard\/Form\/Group.html#method_resetFields","()","Reset fields.",2],["Group::fields","Asgard\\Form\\Group","Asgard\/Form\/Group.html#method_fields","()","Return all fields.",2],["Group::addFields","Asgard\\Form\\Group","Asgard\/Form\/Group.html#method_addFields","(array $fields)","Add fields.",2],["Group::reset","Asgard\\Form\\Group","Asgard\/Form\/Group.html#method_reset","()","Reset data.",2],["Group::setData","Asgard\\Form\\Group","Asgard\/Form\/Group.html#method_setData","(array $data)","Set data.",2],["Group::data","Asgard\\Form\\Group","Asgard\/Form\/Group.html#method_data","()","Return data.",2],["Group::offsetSet","Asgard\\Form\\Group","Asgard\/Form\/Group.html#method_offsetSet","(string $offset, mixed $value)","Array set implementation.",2],["Group::offsetExists","Asgard\\Form\\Group","Asgard\/Form\/Group.html#method_offsetExists","(string $offset)","Array exists implementation.",2],["Group::offsetUnset","Asgard\\Form\\Group","Asgard\/Form\/Group.html#method_offsetUnset","(string $offset)","Array unset implementation.",2],["Group::offsetGet","Asgard\\Form\\Group","Asgard\/Form\/Group.html#method_offsetGet","(string $offset)","Array get implementation.",2],["Group::valid","Asgard\\Form\\Group","Asgard\/Form\/Group.html#method_valid","()","Iterator valid implementation.",2],["Group::rewind","Asgard\\Form\\Group","Asgard\/Form\/Group.html#method_rewind","()","Iterator rewind implementation.",2],["Group::current","Asgard\\Form\\Group","Asgard\/Form\/Group.html#method_current","()","Iterator current implementation.",2],["Group::key","Asgard\\Form\\Group","Asgard\/Form\/Group.html#method_key","()","Iterator key implementation.",2],["Group::next","Asgard\\Form\\Group","Asgard\/Form\/Group.html#method_next","()","Iterator next implementation.",2],["Group::setParent","Asgard\\Form\\Group","Asgard\/Form\/Group.html#method_setParent","(<a href=\"Asgard\/Form\/GroupInterface.html\"><abbr title=\"Asgard\\Form\\GroupInterface\">GroupInterface<\/abbr><\/a> $parent)","Set parent.",2],["Group::getTopForm","Asgard\\Form\\Group","Asgard\/Form\/Group.html#method_getTopForm","()","Get top parent form.",2],["Group::setFields","Asgard\\Form\\Group","Asgard\/Form\/Group.html#method_setFields","(array $fields)","Set fields.",2],["Group::getParents","Asgard\\Form\\Group","Asgard\/Form\/Group.html#method_getParents","()","Get all parents.",2],["Group::doSave","Asgard\\Form\\Group","Asgard\/Form\/Group.html#method_doSave","()","Actually perform the group saving.",2],["Group::doRender","Asgard\\Form\\Group","Asgard\/Form\/Group.html#method_doRender","(string|callable $render_callback, <a href=\"Asgard\/Form\/Group.html\"><abbr title=\"Asgard\\Form\\Group\">Group<\/abbr><\/a>|<a href=\"Asgard\/Form\/Field.html\"><abbr title=\"Asgard\\Form\\Field\">Field<\/abbr><\/a> $field, array $options)","Pass the doRender call to the parent group\/form.",2],["GroupInterface::createValidator","Asgard\\Form\\GroupInterface","Asgard\/Form\/GroupInterface.html#method_createValidator","()","Create a validator.",2],["GroupInterface::getTranslator","Asgard\\Form\\GroupInterface","Asgard\/Form\/GroupInterface.html#method_getTranslator","()","Get the translator.",2],["GroupInterface::getRequest","Asgard\\Form\\GroupInterface","Asgard\/Form\/GroupInterface.html#method_getRequest","()","Get the request from group or a parent.",2],["GroupInterface::name","Asgard\\Form\\GroupInterface","Asgard\/Form\/GroupInterface.html#method_name","()","Return the name.",2],["GroupInterface::setName","Asgard\\Form\\GroupInterface","Asgard\/Form\/GroupInterface.html#method_setName","(string $name)","Set the name.",2],["GroupInterface::size","Asgard\\Form\\GroupInterface","Asgard\/Form\/GroupInterface.html#method_size","()","Return the number of fields.",2],["GroupInterface::hasFile","Asgard\\Form\\GroupInterface","Asgard\/Form\/GroupInterface.html#method_hasFile","()","Check if group has a file.",2],["GroupInterface::getWidgetManager","Asgard\\Form\\GroupInterface","Asgard\/Form\/GroupInterface.html#method_getWidgetManager","()","Return the widgets manager.",2],["GroupInterface::setWidgetManager","Asgard\\Form\\GroupInterface","Asgard\/Form\/GroupInterface.html#method_setWidgetManager","(<a href=\"Asgard\/Form\/WidgetManager.html\"><abbr title=\"Asgard\\Form\\WidgetManager\">WidgetManager<\/abbr><\/a> $WidgetManager)","Set the widgets manager.",2],["GroupInterface::render","Asgard\\Form\\GroupInterface","Asgard\/Form\/GroupInterface.html#method_render","(string|callable $render_callback, <a href=\"Asgard\/Form\/Field.html\"><abbr title=\"Asgard\\Form\\Field\">Field<\/abbr><\/a> $field, array $options = array())","Render a field.",2],["GroupInterface::isValid","Asgard\\Form\\GroupInterface","Asgard\/Form\/GroupInterface.html#method_isValid","()","Check if group is valid.",2],["GroupInterface::sent","Asgard\\Form\\GroupInterface","Asgard\/Form\/GroupInterface.html#method_sent","()","Check if group's form was sent.",2],["GroupInterface::errors","Asgard\\Form\\GroupInterface","Asgard\/Form\/GroupInterface.html#method_errors","()","Return errors.",2],["GroupInterface::remove","Asgard\\Form\\GroupInterface","Asgard\/Form\/GroupInterface.html#method_remove","(string $name)","Remove a field.",2],["GroupInterface::get","Asgard\\Form\\GroupInterface","Asgard\/Form\/GroupInterface.html#method_get","(string $name)","Return a field.",2],["GroupInterface::add","Asgard\\Form\\GroupInterface","Asgard\/Form\/GroupInterface.html#method_add","(<a href=\"Asgard\/Form\/Field.html\"><abbr title=\"Asgard\\Form\\Field\">Field<\/abbr><\/a>|<a href=\"Asgard\/Form\/GroupInterface.html\"><abbr title=\"Asgard\\Form\\GroupInterface\">GroupInterface<\/abbr><\/a> $field, string $name = null)","Add a field.",2],["GroupInterface::has","Asgard\\Form\\GroupInterface","Asgard\/Form\/GroupInterface.html#method_has","(string $field_name)","Check if has a field.",2],["GroupInterface::resetFields","Asgard\\Form\\GroupInterface","Asgard\/Form\/GroupInterface.html#method_resetFields","()","Reset fields.",2],["GroupInterface::fields","Asgard\\Form\\GroupInterface","Asgard\/Form\/GroupInterface.html#method_fields","()","Return all fields.",2],["GroupInterface::addFields","Asgard\\Form\\GroupInterface","Asgard\/Form\/GroupInterface.html#method_addFields","(array $fields)","Add fields.",2],["GroupInterface::reset","Asgard\\Form\\GroupInterface","Asgard\/Form\/GroupInterface.html#method_reset","()","Reset data.",2],["GroupInterface::setData","Asgard\\Form\\GroupInterface","Asgard\/Form\/GroupInterface.html#method_setData","(array $data)","Set data.",2],["GroupInterface::data","Asgard\\Form\\GroupInterface","Asgard\/Form\/GroupInterface.html#method_data","()","Return data.",2],["GroupInterface::setParent","Asgard\\Form\\GroupInterface","Asgard\/Form\/GroupInterface.html#method_setParent","(<a href=\"Asgard\/Form\/GroupInterface.html\"><abbr title=\"Asgard\\Form\\GroupInterface\">GroupInterface<\/abbr><\/a> $parent)","Set parent.",2],["GroupInterface::getTopForm","Asgard\\Form\\GroupInterface","Asgard\/Form\/GroupInterface.html#method_getTopForm","()","Get top parent form.",2],["GroupInterface::setFields","Asgard\\Form\\GroupInterface","Asgard\/Form\/GroupInterface.html#method_setFields","(array $fields)","Set fields.",2],["GroupInterface::getParents","Asgard\\Form\\GroupInterface","Asgard\/Form\/GroupInterface.html#method_getParents","()","Get all parents.",2],["GroupInterface::doSave","Asgard\\Form\\GroupInterface","Asgard\/Form\/GroupInterface.html#method_doSave","()","Actually perform the group saving.",2],["GroupInterface::doRender","Asgard\\Form\\GroupInterface","Asgard\/Form\/GroupInterface.html#method_doRender","(string|callable $render_callback, <a href=\"Asgard\/Form\/Group.html\"><abbr title=\"Asgard\\Form\\Group\">Group<\/abbr><\/a>|<a href=\"Asgard\/Form\/Field.html\"><abbr title=\"Asgard\\Form\\Field\">Field<\/abbr><\/a> $field, array $options)","Pass the doRender call to the parent group\/form.",2],["HTMLHelper::tag","Asgard\\Form\\HTMLHelper","Asgard\/Form\/HTMLHelper.html#method_tag","(string $tag, array $attrs, string $inner = null)","Create HTML tag.",2],["Widget::__construct","Asgard\\Form\\Widget","Asgard\/Form\/Widget.html#method___construct","(string $name, mixed $value = null, array $options = array(), <a href=\"Asgard\/Form\/FormInterface.html\"><abbr title=\"Asgard\\Form\\FormInterface\">FormInterface<\/abbr><\/a> $form = null)","Constructor.",2],["Widget::__toString","Asgard\\Form\\Widget","Asgard\/Form\/Widget.html#method___toString","()","__toString magic method.",2],["Widget::label","Asgard\\Form\\Widget","Asgard\/Form\/Widget.html#method_label","()","Return the label.",2],["Widget::setLabel","Asgard\\Form\\Widget","Asgard\/Form\/Widget.html#method_setLabel","(string $label)","Set the label.",2],["Widget::render","Asgard\\Form\\Widget","Asgard\/Form\/Widget.html#method_render","(array $options = array())","Render the widget.",2],["WidgetFactoryInterface::create","Asgard\\Form\\WidgetFactoryInterface","Asgard\/Form\/WidgetFactoryInterface.html#method_create","($name, $value, $options, $form)","",2],["WidgetManager::singleton","Asgard\\Form\\WidgetManager","Asgard\/Form\/WidgetManager.html#method_singleton","()","Singleton.",2],["WidgetManager::setWidget","Asgard\\Form\\WidgetManager","Asgard\/Form\/WidgetManager.html#method_setWidget","(string $widget, string|callable $mixed)","Register a widget.",2],["WidgetManager::getWidget","Asgard\\Form\\WidgetManager","Asgard\/Form\/WidgetManager.html#method_getWidget","(string|callable $widget, string $name, mixed $value, array $options, <a href=\"Asgard\/Form\/FormInterface.html\"><abbr title=\"Asgard\\Form\\FormInterface\">FormInterface<\/abbr><\/a> $form)","Return a widget.",2],["WidgetManager::getWidgetInstance","Asgard\\Form\\WidgetManager","Asgard\/Form\/WidgetManager.html#method_getWidgetInstance","(string|callable $widget, string $name, mixed $value, array $options, <a href=\"Asgard\/Form\/FormInterface.html\"><abbr title=\"Asgard\\Form\\FormInterface\">FormInterface<\/abbr><\/a> $form)","Get a widget instance.",2],["WidgetManager::addNamespace","Asgard\\Form\\WidgetManager","Asgard\/Form\/WidgetManager.html#method_addNamespace","(string $namespace)","Add a namespace.",2],["WidgetManager::setWidgetFactory","Asgard\\Form\\WidgetManager","Asgard\/Form\/WidgetManager.html#method_setWidgetFactory","($name, <abbr title=\"Asgard\\Form\\Asgard\\Form\\WidgetFactoryInterface\">WidgetFactoryInterface<\/abbr> $widgetFactory)","",2],["WidgetManagerInterface::setWidget","Asgard\\Form\\WidgetManagerInterface","Asgard\/Form\/WidgetManagerInterface.html#method_setWidget","(string $widget, string|callable $mixed)","Register a widget.",2],["WidgetManagerInterface::getWidget","Asgard\\Form\\WidgetManagerInterface","Asgard\/Form\/WidgetManagerInterface.html#method_getWidget","(string|callable $widget, string $name, mixed $value, array $options, <a href=\"Asgard\/Form\/FormInterface.html\"><abbr title=\"Asgard\\Form\\FormInterface\">FormInterface<\/abbr><\/a> $form)","Return a widget.",2],["WidgetManagerInterface::getWidgetInstance","Asgard\\Form\\WidgetManagerInterface","Asgard\/Form\/WidgetManagerInterface.html#method_getWidgetInstance","(string|callable $widget, string $name, mixed $value, array $options, <a href=\"Asgard\/Form\/FormInterface.html\"><abbr title=\"Asgard\\Form\\FormInterface\">FormInterface<\/abbr><\/a> $form)","Get a widget instance.",2],["WidgetManagerInterface::addNamespace","Asgard\\Form\\WidgetManagerInterface","Asgard\/Form\/WidgetManagerInterface.html#method_addNamespace","(string $namespace)","Add a namespace.",2],["CallbackWidget::__construct","Asgard\\Form\\Widgets\\CallbackWidget","Asgard\/Form\/Widgets\/CallbackWidget.html#method___construct","(callable $cb, string $name, mixed $value = null, array $options = array(), <a href=\"Asgard\/Form\/FormInterface.html\"><abbr title=\"Asgard\\Form\\FormInterface\">FormInterface<\/abbr><\/a> $form = null)","Constructor.",2],["CallbackWidget::render","Asgard\\Form\\Widgets\\CallbackWidget","Asgard\/Form\/Widgets\/CallbackWidget.html#method_render","(array $options = array())","Render the widget.",2],["CheckboxWidget::render","Asgard\\Form\\Widgets\\CheckboxWidget","Asgard\/Form\/Widgets\/CheckboxWidget.html#method_render","(array $options = array())","Render the widget.",2],["CheckboxesWidget::render","Asgard\\Form\\Widgets\\CheckboxesWidget","Asgard\/Form\/Widgets\/CheckboxesWidget.html#method_render","(array $options = array())","Render the widget.",2],["DateWidget::render","Asgard\\Form\\Widgets\\DateWidget","Asgard\/Form\/Widgets\/DateWidget.html#method_render","(array $options = array())","Render the widget.",2],["DatetimeWidget::render","Asgard\\Form\\Widgets\\DatetimeWidget","Asgard\/Form\/Widgets\/DatetimeWidget.html#method_render","(array $options = array())","Render the widget.",2],["FileWidget::render","Asgard\\Form\\Widgets\\FileWidget","Asgard\/Form\/Widgets\/FileWidget.html#method_render","(array $options = array())","Render the widget.",2],["HiddenWidget::render","Asgard\\Form\\Widgets\\HiddenWidget","Asgard\/Form\/Widgets\/HiddenWidget.html#method_render","(array $options = array())","Render the widget.",2],["MultipleselectWidget::render","Asgard\\Form\\Widgets\\MultipleselectWidget","Asgard\/Form\/Widgets\/MultipleselectWidget.html#method_render","(array $options = array())","Render the widget.",2],["PasswordWidget::render","Asgard\\Form\\Widgets\\PasswordWidget","Asgard\/Form\/Widgets\/PasswordWidget.html#method_render","(array $options = array())","Render the widget.",2],["RadioWidget::render","Asgard\\Form\\Widgets\\RadioWidget","Asgard\/Form\/Widgets\/RadioWidget.html#method_render","(array $options = array())","Render the widget.",2],["RadiosWidget::render","Asgard\\Form\\Widgets\\RadiosWidget","Asgard\/Form\/Widgets\/RadiosWidget.html#method_render","(array $options = array())","Render the widget.",2],["SelectWidget::render","Asgard\\Form\\Widgets\\SelectWidget","Asgard\/Form\/Widgets\/SelectWidget.html#method_render","(array $options = array())","Render the widget.",2],["SubmitWidget::render","Asgard\\Form\\Widgets\\SubmitWidget","Asgard\/Form\/Widgets\/SubmitWidget.html#method_render","(array $options = array())","Render the widget.",2],["TextWidget::render","Asgard\\Form\\Widgets\\TextWidget","Asgard\/Form\/Widgets\/TextWidget.html#method_render","(array $options = array())","Render the widget.",2],["TextareaWidget::render","Asgard\\Form\\Widgets\\TextareaWidget","Asgard\/Form\/Widgets\/TextareaWidget.html#method_render","(array $options = array())","Render the widget.",2],["TimeWidget::render","Asgard\\Form\\Widgets\\TimeWidget","Asgard\/Form\/Widgets\/TimeWidget.html#method_render","(array $options = array())","Render the widget.",2],["AbstractGenerator::preGenerate","Asgard\\Generator\\AbstractGenerator","Asgard\/Generator\/AbstractGenerator.html#method_preGenerate","(array $bundle)","",2],["AbstractGenerator::generate","Asgard\\Generator\\AbstractGenerator","Asgard\/Generator\/AbstractGenerator.html#method_generate","(array $bundle, $root, $bundlePath)","",2],["AbstractGenerator::postGenerate","Asgard\\Generator\\AbstractGenerator","Asgard\/Generator\/AbstractGenerator.html#method_postGenerate","(array $bundle, $root, $bundlePath)","",2],["AbstractGenerator::setEngine","Asgard\\Generator\\AbstractGenerator","Asgard\/Generator\/AbstractGenerator.html#method_setEngine","(<a href=\"Asgard\/Generator\/GeneratorEngine.html\"><abbr title=\"Asgard\\Generator\\GeneratorEngine\">GeneratorEngine<\/abbr><\/a> $engine)","",2],["GenerateCommand::__construct","Asgard\\Generator\\Commands\\GenerateCommand","Asgard\/Generator\/Commands\/GenerateCommand.html#method___construct","(<abbr title=\"Asgard\\Generator\\Commands\\Asgard\\Generator\\GeneratorEngineInterface\">GeneratorEngineInterface<\/abbr> $generatorEngine)","Constructor.",2],["DefaultGenerator::preGenerate","Asgard\\Generator\\DefaultGenerator","Asgard\/Generator\/DefaultGenerator.html#method_preGenerate","(array $bundle)","",2],["DefaultGenerator::generate","Asgard\\Generator\\DefaultGenerator","Asgard\/Generator\/DefaultGenerator.html#method_generate","(array $bundle, $root, $bundlePath)","",2],["GeneratorEngine::__construct","Asgard\\Generator\\GeneratorEngine","Asgard\/Generator\/GeneratorEngine.html#method___construct","(<abbr title=\"Asgard\\Generator\\Asgard\\Container\\ContainerInterface\">ContainerInterface<\/abbr> $container, string $appRoot)","Constructor.",2],["GeneratorEngine::setOverrideFiles","Asgard\\Generator\\GeneratorEngine","Asgard\/Generator\/GeneratorEngine.html#method_setOverrideFiles","(boolean $overrideFiles)","Set flag to override existing files.",2],["GeneratorEngine::getOverrideFiles","Asgard\\Generator\\GeneratorEngine","Asgard\/Generator\/GeneratorEngine.html#method_getOverrideFiles","()","Return flag to override existing files.",2],["GeneratorEngine::processFile","Asgard\\Generator\\GeneratorEngine","Asgard\/Generator\/GeneratorEngine.html#method_processFile","(string $src, string $dst, array $vars)","Process a template file.",2],["GeneratorEngine::outputPHP","Asgard\\Generator\\GeneratorEngine","Asgard\/Generator\/GeneratorEngine.html#method_outputPHP","(mixed $v, integer $tabs, boolean $line = false)","Format PHP variables to string.",2],["GeneratorEngine::addGenerator","Asgard\\Generator\\GeneratorEngine","Asgard\/Generator\/GeneratorEngine.html#method_addGenerator","(<a href=\"Asgard\/Generator\/AbstractGenerator.html\"><abbr title=\"Asgard\\Generator\\AbstractGenerator\">AbstractGenerator<\/abbr><\/a> $generator)","",2],["GeneratorEngine::generate","Asgard\\Generator\\GeneratorEngine","Asgard\/Generator\/GeneratorEngine.html#method_generate","(array $bundles, $root)","",2],["GeneratorEngineInterface::generate","Asgard\\Generator\\GeneratorEngineInterface","Asgard\/Generator\/GeneratorEngineInterface.html#method_generate","(array $bundles, $root)","",2],["GeneratorEngineInterface::addGenerator","Asgard\\Generator\\GeneratorEngineInterface","Asgard\/Generator\/GeneratorEngineInterface.html#method_addGenerator","(<a href=\"Asgard\/Generator\/AbstractGenerator.html\"><abbr title=\"Asgard\\Generator\\AbstractGenerator\">AbstractGenerator<\/abbr><\/a> $generator)","",2],["GeneratorEngineInterface::processFile","Asgard\\Generator\\GeneratorEngineInterface","Asgard\/Generator\/GeneratorEngineInterface.html#method_processFile","($src, $dst, $vars)","",2],["GeneratorEngineInterface::setOverrideFiles","Asgard\\Generator\\GeneratorEngineInterface","Asgard\/Generator\/GeneratorEngineInterface.html#method_setOverrideFiles","($overrideFiles)","",2],["AnnotationReader::fetchHooks","Asgard\\Hook\\AnnotationReader","Asgard\/Hook\/AnnotationReader.html#method_fetchHooks","(string $class)","Return the hooks of a container.",2],["AnnotationReader::setCache","Asgard\\Hook\\AnnotationReader","Asgard\/Hook\/AnnotationReader.html#method_setCache","(<abbr title=\"Asgard\\Hook\\Doctrine\\Common\\Cache\\Cache\">Cache<\/abbr> $cache)","Set the cache dependency.",2],["AnnotationReader::setDebug","Asgard\\Hook\\AnnotationReader","Asgard\/Hook\/AnnotationReader.html#method_setDebug","(boolean $debug)","Set the debug parameter.",2],["Chain::__construct","Asgard\\Hook\\Chain","Asgard\/Hook\/Chain.html#method___construct","(<abbr title=\"Asgard\\Hook\\Asgard\\Container\\ContainerInterface\">ContainerInterface<\/abbr> $container = null)","Constructor.",2],["Chain::setCalls","Asgard\\Hook\\Chain","Asgard\/Hook\/Chain.html#method_setCalls","(array $calls)","Set calls.",2],["Chain::executed","Asgard\\Hook\\Chain","Asgard\/Hook\/Chain.html#method_executed","()","Return the number of executed calls.",2],["Chain::run","Asgard\\Hook\\Chain","Asgard\/Hook\/Chain.html#method_run","(array $args)","Execute the chain.",2],["Chain::stop","Asgard\\Hook\\Chain","Asgard\/Hook\/Chain.html#method_stop","()","Stop the execution.",2],["HookManager::singleton","Asgard\\Hook\\HookManager","Asgard\/Hook\/HookManager.html#method_singleton","()","Return a static instance.",2],["HookManager::__construct","Asgard\\Hook\\HookManager","Asgard\/Hook\/HookManager.html#method___construct","(<abbr title=\"Asgard\\Hook\\Asgard\\Container\\ContainerInterface\">ContainerInterface<\/abbr> $container = null)","Constructor.",2],["HookManager::trigger","Asgard\\Hook\\HookManager","Asgard\/Hook\/HookManager.html#method_trigger","(string $name, array $args = array(), callable $cb = null, <a href=\"Asgard\/Hook\/Chain.html\"><abbr title=\"Asgard\\Hook\\Chain\">Chain<\/abbr><\/a> $chain = null)","Trigger a hook.",2],["HookManager::has","Asgard\\Hook\\HookManager","Asgard\/Hook\/HookManager.html#method_has","(string $identifier)","Check if a hook is present.",2],["HookManager::get","Asgard\\Hook\\HookManager","Asgard\/Hook\/HookManager.html#method_get","(string $identifier)","Return hooks.",2],["HookManager::hook","Asgard\\Hook\\HookManager","Asgard\/Hook\/HookManager.html#method_hook","(string $identifier, callable $cb)","Set a hook.",2],["HookManager::preHook","Asgard\\Hook\\HookManager","Asgard\/Hook\/HookManager.html#method_preHook","(string $identifier, callable $cb)","Set a \"pre\" hook.",2],["HookManager::postHook","Asgard\\Hook\\HookManager","Asgard\/Hook\/HookManager.html#method_postHook","(string $identifier, callable $cb)","Set an \"post\" hook.",2],["HookManager::hooks","Asgard\\Hook\\HookManager","Asgard\/Hook\/HookManager.html#method_hooks","(array $hooks)","Set multiple hooks.",2],["HookManagerInterface::trigger","Asgard\\Hook\\HookManagerInterface","Asgard\/Hook\/HookManagerInterface.html#method_trigger","(string $name, array $args = array(), callable $cb = null, <a href=\"Asgard\/Hook\/Chain.html\"><abbr title=\"Asgard\\Hook\\Chain\">Chain<\/abbr><\/a> $chain = null)","Trigger a hook.",2],["HookManagerInterface::has","Asgard\\Hook\\HookManagerInterface","Asgard\/Hook\/HookManagerInterface.html#method_has","(string $identifier)","Check if a hook is present.",2],["HookManagerInterface::get","Asgard\\Hook\\HookManagerInterface","Asgard\/Hook\/HookManagerInterface.html#method_get","(string $identifier)","Return hooks.",2],["HookManagerInterface::hook","Asgard\\Hook\\HookManagerInterface","Asgard\/Hook\/HookManagerInterface.html#method_hook","(string $identifier, callable $cb)","Set a hook.",2],["HookManagerInterface::preHook","Asgard\\Hook\\HookManagerInterface","Asgard\/Hook\/HookManagerInterface.html#method_preHook","(string $identifier, callable $cb)","Set a \"pre\" hook.",2],["HookManagerInterface::postHook","Asgard\\Hook\\HookManagerInterface","Asgard\/Hook\/HookManagerInterface.html#method_postHook","(string $identifier, callable $cb)","Set an \"post\" hook.",2],["HookManagerInterface::hooks","Asgard\\Hook\\HookManagerInterface","Asgard\/Hook\/HookManagerInterface.html#method_hooks","(array $hooks)","Set multiple hooks.",2],["HookableTrait::hasHook","Asgard\\Hook\\HookableTrait","Asgard\/Hook\/HookableTrait.html#method_hasHook","(string $name)","Check if has a hook.",2],["HookableTrait::trigger","Asgard\\Hook\\HookableTrait","Asgard\/Hook\/HookableTrait.html#method_trigger","(string $name, array $args = array(), callable $cb = null, <a href=\"Asgard\/Hook\/Chain.html\"><abbr title=\"Asgard\\Hook\\Chain\">Chain<\/abbr><\/a> $chain = null)","Trigger a hook.",2],["HookableTrait::hook","Asgard\\Hook\\HookableTrait","Asgard\/Hook\/HookableTrait.html#method_hook","(string $hookName, callable $cb)","Set a hook.",2],["HookableTrait::preHook","Asgard\\Hook\\HookableTrait","Asgard\/Hook\/HookableTrait.html#method_preHook","(string $hookName, Callable $cb)","Set a \"pre\" hook.",2],["HookableTrait::postHook","Asgard\\Hook\\HookableTrait","Asgard\/Hook\/HookableTrait.html#method_postHook","(string $hookName, callable $cb)","Set an \"post\" hook.",2],["HookableTrait::getHookManager","Asgard\\Hook\\HookableTrait","Asgard\/Hook\/HookableTrait.html#method_getHookManager","()","Get the hooks manager.",2],["HookableTrait::setHookManager","Asgard\\Hook\\HookableTrait","Asgard\/Hook\/HookableTrait.html#method_setHookManager","(<a href=\"Asgard\/Hook\/HookManagerInterface.html\"><abbr title=\"Asgard\\Hook\\HookManagerInterface\">HookManagerInterface<\/abbr><\/a> $HookManager)","Set the hooks manager.",2],["AnnotationReader::fetchRoutes","Asgard\\Http\\AnnotationReader","Asgard\/Http\/AnnotationReader.html#method_fetchRoutes","(string $class)","Return the routes of a controller.",2],["AnnotationReader::setCache","Asgard\\Http\\AnnotationReader","Asgard\/Http\/AnnotationReader.html#method_setCache","(<abbr title=\"Asgard\\Http\\Doctrine\\Common\\Cache\\Cache\">Cache<\/abbr> $cache)","Set the cache dependency.",2],["AnnotationReader::setDebug","Asgard\\Http\\AnnotationReader","Asgard\/Http\/AnnotationReader.html#method_setDebug","(boolean $debug)","Set the debug parameter.",2],["Browser::__construct","Asgard\\Http\\Browser\\Browser","Asgard\/Http\/Browser\/Browser.html#method___construct","(<abbr title=\"Asgard\\Http\\Browser\\Asgard\\Http\\HttpKernelInterface\">HttpKernelInterface<\/abbr> $httpKernel, <abbr title=\"Asgard\\Http\\Browser\\Asgard\\Container\\ContainerInterface\">ContainerInterface<\/abbr> $container = null)","Constructor.",2],["Browser::getSession","Asgard\\Http\\Browser\\Browser","Asgard\/Http\/Browser\/Browser.html#method_getSession","()","Return session.",2],["Browser::getCookies","Asgard\\Http\\Browser\\Browser","Asgard\/Http\/Browser\/Browser.html#method_getCookies","()","Return cookies.",2],["Browser::getLast","Asgard\\Http\\Browser\\Browser","Asgard\/Http\/Browser\/Browser.html#method_getLast","()","Get last response.",2],["Browser::get","Asgard\\Http\\Browser\\Browser","Asgard\/Http\/Browser\/Browser.html#method_get","(string $url = &#039;&#039;, string $body = &#039;&#039;, array $headers = array())","Execute a GET request.",2],["Browser::post","Asgard\\Http\\Browser\\Browser","Asgard\/Http\/Browser\/Browser.html#method_post","(string $url = &#039;&#039;, array $post = array(), array $files = array(), string $body = &#039;&#039;, array $headers = array())","Execute a POST request.",2],["Browser::put","Asgard\\Http\\Browser\\Browser","Asgard\/Http\/Browser\/Browser.html#method_put","(string $url = &#039;&#039;, array $post = array(), array $files = array(), string $body = &#039;&#039;, array $headers = array())","Execute a PUT request.",2],["Browser::delete","Asgard\\Http\\Browser\\Browser","Asgard\/Http\/Browser\/Browser.html#method_delete","(string $url = &#039;&#039;, string $body = &#039;&#039;, array $headers = array())","Execute a DELETE request.",2],["Browser::req","Asgard\\Http\\Browser\\Browser","Asgard\/Http\/Browser\/Browser.html#method_req","(string $url = &#039;&#039;, string $method = &#039;GET&#039;, array $post = array(), array $file = array(), string $body = &#039;&#039;, array $headers = array(), array $server = array())","Execute a request.",2],["Browser::request","Asgard\\Http\\Browser\\Browser","Asgard\/Http\/Browser\/Browser.html#method_request","(<abbr title=\"Asgard\\Http\\Browser\\Asgard\\Http\\Request\">Request<\/abbr> $request)","",2],["Browser::catchException","Asgard\\Http\\Browser\\Browser","Asgard\/Http\/Browser\/Browser.html#method_catchException","(boolean $catchException)","Set the catchException parameter.",2],["Browser::submit","Asgard\\Http\\Browser\\Browser","Asgard\/Http\/Browser\/Browser.html#method_submit","(string $xpath = &#039;\/\/form&#039;, string $to = null, array $override = array())","Submit a form.",2],["BrowserInterface::getCookies","Asgard\\Http\\Browser\\BrowserInterface","Asgard\/Http\/Browser\/BrowserInterface.html#method_getCookies","()","Return cookies.",2],["BrowserInterface::getSession","Asgard\\Http\\Browser\\BrowserInterface","Asgard\/Http\/Browser\/BrowserInterface.html#method_getSession","()","Return session.",2],["BrowserInterface::getLast","Asgard\\Http\\Browser\\BrowserInterface","Asgard\/Http\/Browser\/BrowserInterface.html#method_getLast","()","Get last response.",2],["BrowserInterface::get","Asgard\\Http\\Browser\\BrowserInterface","Asgard\/Http\/Browser\/BrowserInterface.html#method_get","(string $url = &#039;&#039;, string $body = &#039;&#039;, array $headers = array())","Execute a GET request.",2],["BrowserInterface::post","Asgard\\Http\\Browser\\BrowserInterface","Asgard\/Http\/Browser\/BrowserInterface.html#method_post","(string $url = &#039;&#039;, array $post = array(), array $files = array(), string $body = &#039;&#039;, array $headers = array())","Execute a POST request.",2],["BrowserInterface::put","Asgard\\Http\\Browser\\BrowserInterface","Asgard\/Http\/Browser\/BrowserInterface.html#method_put","(string $url = &#039;&#039;, array $post = array(), array $files = array(), string $body = &#039;&#039;, array $headers = array())","Execute a PUT request.",2],["BrowserInterface::delete","Asgard\\Http\\Browser\\BrowserInterface","Asgard\/Http\/Browser\/BrowserInterface.html#method_delete","(string $url = &#039;&#039;, string $body = &#039;&#039;, array $headers = array())","Execute a DELETE request.",2],["BrowserInterface::req","Asgard\\Http\\Browser\\BrowserInterface","Asgard\/Http\/Browser\/BrowserInterface.html#method_req","(string $url = &#039;&#039;, string $method = &#039;GET&#039;, array $post = array(), array $file = array(), string $body = &#039;&#039;, array $headers = array(), array $server = array())","Execute a request.",2],["BrowserInterface::catchException","Asgard\\Http\\Browser\\BrowserInterface","Asgard\/Http\/Browser\/BrowserInterface.html#method_catchException","(boolean $catchException)","Set the catchException parameter.",2],["BrowserInterface::submit","Asgard\\Http\\Browser\\BrowserInterface","Asgard\/Http\/Browser\/BrowserInterface.html#method_submit","(string $xpath = &#039;\/\/form&#039;, string $to = null, array $override = array())","Submit a form.",2],["Field::__construct","Asgard\\Http\\Browser\\Field","Asgard\/Http\/Browser\/Field.html#method___construct","(<abbr title=\"Asgard\\Http\\Browser\\DOMElement\">DOMElement<\/abbr> $node)","Constructor.",2],["Field::addChoice","Asgard\\Http\\Browser\\Field","Asgard\/Http\/Browser\/Field.html#method_addChoice","(<abbr title=\"Asgard\\Http\\Browser\\DOMElement\">DOMElement<\/abbr> $node)","Add a choice to the field.",2],["Field::getChoices","Asgard\\Http\\Browser\\Field","Asgard\/Http\/Browser\/Field.html#method_getChoices","()","Get the field's choices.",2],["Field::getValue","Asgard\\Http\\Browser\\Field","Asgard\/Http\/Browser\/Field.html#method_getValue","()","Get the field's value.",2],["Field::setValue","Asgard\\Http\\Browser\\Field","Asgard\/Http\/Browser\/Field.html#method_setValue","(string $value)","Set the field's value.",2],["Field::getType","Asgard\\Http\\Browser\\Field","Asgard\/Http\/Browser\/Field.html#method_getType","()","Get the field's type.",2],["FormParser::__construct","Asgard\\Http\\Browser\\FormParser","Asgard\/Http\/Browser\/FormParser.html#method___construct","(<abbr title=\"Asgard\\Http\\Browser\\DOMNode\">DOMNode<\/abbr> $node)","",2],["FormParser::has","Asgard\\Http\\Browser\\FormParser","Asgard\/Http\/Browser\/FormParser.html#method_has","(string $name)","Check if it contains a field.",2],["FormParser::get","Asgard\\Http\\Browser\\FormParser","Asgard\/Http\/Browser\/FormParser.html#method_get","(string $name)","Return a field.",2],["FormParser::set","Asgard\\Http\\Browser\\FormParser","Asgard\/Http\/Browser\/FormParser.html#method_set","(string $name, <a href=\"Asgard\/Http\/Browser\/Field.html\"><abbr title=\"Asgard\\Http\\Browser\\Field\">Field<\/abbr><\/a> $value)","Set a field.",2],["FormParser::getFields","Asgard\\Http\\Browser\\FormParser","Asgard\/Http\/Browser\/FormParser.html#method_getFields","()","Set the fields.",2],["FormParser::add","Asgard\\Http\\Browser\\FormParser","Asgard\/Http\/Browser\/FormParser.html#method_add","(<abbr title=\"Asgard\\Http\\Browser\\DOMElement\">DOMElement<\/abbr> $node)","Add a field.",2],["FormParser::values","Asgard\\Http\\Browser\\FormParser","Asgard\/Http\/Browser\/FormParser.html#method_values","()","Get form values.",2],["FormParser::clickOn","Asgard\\Http\\Browser\\FormParser","Asgard\/Http\/Browser\/FormParser.html#method_clickOn","(string $submit)","Simulate the click on a form button.",2],["FormParser::parse","Asgard\\Http\\Browser\\FormParser","Asgard\/Http\/Browser\/FormParser.html#method_parse","(string $html, string $xpath)","Parse the HTML form.",2],["BrowserCommand::__construct","Asgard\\Http\\Commands\\BrowserCommand","Asgard\/Http\/Commands\/BrowserCommand.html#method___construct","(<abbr title=\"Asgard\\Http\\Commands\\Asgard\\Http\\HttpKernelInterface\">HttpKernelInterface<\/abbr> $httpKernel)","Constructor.",2],["RoutesCommand::__construct","Asgard\\Http\\Commands\\RoutesCommand","Asgard\/Http\/Commands\/RoutesCommand.html#method___construct","(<abbr title=\"Asgard\\Http\\Commands\\Asgard\\Http\\ResolverInterface\">ResolverInterface<\/abbr> $resolver)","Constructor.",2],["Controller::addFilter","Asgard\\Http\\Controller","Asgard\/Http\/Controller.html#method_addFilter","(<a href=\"Asgard\/Http\/Filter.html\"><abbr title=\"Asgard\\Http\\Filter\">Filter<\/abbr><\/a> $filter)","Add a filter.",2],["Controller::addBeforeFilter","Asgard\\Http\\Controller","Asgard\/Http\/Controller.html#method_addBeforeFilter","(callable $filter)","Add a filter before the action.",2],["Controller::addAfterFilter","Asgard\\Http\\Controller","Asgard\/Http\/Controller.html#method_addAfterFilter","(callable $filter)","Add a filter after the action.",2],["Controller::run","Asgard\\Http\\Controller","Asgard\/Http\/Controller.html#method_run","(string $action, <a href=\"Asgard\/Http\/Request.html\"><abbr title=\"Asgard\\Http\\Request\">Request<\/abbr><\/a> $request = null)","Run the action.",2],["Controller::before","Asgard\\Http\\Controller","Asgard\/Http\/Controller.html#method_before","(<a href=\"Asgard\/Http\/Request.html\"><abbr title=\"Asgard\\Http\\Request\">Request<\/abbr><\/a> $request)","To be executed before the action.",2],["Controller::after","Asgard\\Http\\Controller","Asgard\/Http\/Controller.html#method_after","(<a href=\"Asgard\/Http\/Request.html\"><abbr title=\"Asgard\\Http\\Request\">Request<\/abbr><\/a> $request, mixed $result)","To be executed after the action.",2],["Controller::getAction","Asgard\\Http\\Controller","Asgard\/Http\/Controller.html#method_getAction","()","Get the ongoing action.",2],["Controller::getFlash","Asgard\\Http\\Controller","Asgard\/Http\/Controller.html#method_getFlash","()","Return a Flash instance.",2],["Controller::back","Asgard\\Http\\Controller","Asgard\/Http\/Controller.html#method_back","()","Return to the previous page.",2],["Controller::notFound","Asgard\\Http\\Controller","Asgard\/Http\/Controller.html#method_notFound","(string $msg = null)","Throw a \"not found\" exception.",2],["Controller::url","Asgard\\Http\\Controller","Asgard\/Http\/Controller.html#method_url","(mixed $action, array $params = array())","Return the url for a given action.",2],["Controller::get","Asgard\\Http\\Controller","Asgard\/Http\/Controller.html#method_get","(string $name)","Get parameter.",2],["Controller::set","Asgard\\Http\\Controller","Asgard\/Http\/Controller.html#method_set","(string $name, mixed $value)","Set parameter.",2],["Controller::has","Asgard\\Http\\Controller","Asgard\/Http\/Controller.html#method_has","(string $name)","Check if parameter exists.",2],["ControllerException::__construct","Asgard\\Http\\ControllerException","Asgard\/Http\/ControllerException.html#method___construct","(integer $code = 500, string $msg = &#039;&#039;, integer $severity = null, <a href=\"Asgard\/Http\/Response.html\"><abbr title=\"Asgard\\Http\\Response\">Response<\/abbr><\/a> $response = null)","Constructor.",2],["ControllerException::getResponse","Asgard\\Http\\ControllerException","Asgard\/Http\/ControllerException.html#method_getResponse","()","Get the exception response.",2],["ControllerException::setResponse","Asgard\\Http\\ControllerException","Asgard\/Http\/ControllerException.html#method_setResponse","(<a href=\"Asgard\/Http\/Response.html\"><abbr title=\"Asgard\\Http\\Response\">Response<\/abbr><\/a> $response)","Set the response.",2],["ControllerException::getHTTPCode","Asgard\\Http\\ControllerException","Asgard\/Http\/ControllerException.html#method_getHTTPCode","()","Get the HTTP code.",2],["ControllerException::setCode","Asgard\\Http\\ControllerException","Asgard\/Http\/ControllerException.html#method_setCode","(integer $code)","Set the HTTP code.",2],["CookieManager::all","Asgard\\Http\\CookieManager","Asgard\/Http\/CookieManager.html#method_all","()","Return all cookies.",2],["CookieManager::clear","Asgard\\Http\\CookieManager","Asgard\/Http\/CookieManager.html#method_clear","()","Clear all cookies.",2],["CookieManager::count","Asgard\\Http\\CookieManager","Asgard\/Http\/CookieManager.html#method_count","()","Return the number of cookies.",2],["CookieManager::setAll","Asgard\\Http\\CookieManager","Asgard\/Http\/CookieManager.html#method_setAll","(array $data)","Set all cookies.",2],["CookieManager::has","Asgard\\Http\\CookieManager","Asgard\/Http\/CookieManager.html#method_has","(string $path)","Check if it contains a cookie.",2],["CookieManager::get","Asgard\\Http\\CookieManager","Asgard\/Http\/CookieManager.html#method_get","(string $path, mixed $default = null)","Get a cookie.",2],["CookieManager::set","Asgard\\Http\\CookieManager","Asgard\/Http\/CookieManager.html#method_set","(array|string $what, mixed $value = null, integer $time = null, string $path = &#039;\/&#039;)","Set a cookie.",2],["CookieManager::delete","Asgard\\Http\\CookieManager","Asgard\/Http\/CookieManager.html#method_delete","(string $path, string $_path = &#039;\/&#039;)","Delete a cookie.",2],["CookieManager::offsetSet","Asgard\\Http\\CookieManager","Asgard\/Http\/CookieManager.html#method_offsetSet","(string $offset, mixed $value)","Array set implementation.",2],["CookieManager::offsetExists","Asgard\\Http\\CookieManager","Asgard\/Http\/CookieManager.html#method_offsetExists","(string $offset)","Array exists implementation.",2],["CookieManager::offsetUnset","Asgard\\Http\\CookieManager","Asgard\/Http\/CookieManager.html#method_offsetUnset","(string $offset)","Array unset implementation.",2],["CookieManager::offsetGet","Asgard\\Http\\CookieManager","Asgard\/Http\/CookieManager.html#method_offsetGet","(string $offset)","Array get implementation.",2],["NotFoundException::__construct","Asgard\\Http\\Exceptions\\NotFoundException","Asgard\/Http\/Exceptions\/NotFoundException.html#method___construct","(string $msg = &#039;&#039;)","Constructor.",2],["Filter::__construct","Asgard\\Http\\Filter","Asgard\/Http\/Filter.html#method___construct","(array $params = array())","Constructor.",2],["Filter::before","Asgard\\Http\\Filter","Asgard\/Http\/Filter.html#method_before","(<a href=\"Asgard\/Http\/Controller.html\"><abbr title=\"Asgard\\Http\\Controller\">Controller<\/abbr><\/a> $controller, <a href=\"Asgard\/Http\/Request.html\"><abbr title=\"Asgard\\Http\\Request\">Request<\/abbr><\/a> $request)","Method to be executed before the action.",2],["Filter::after","Asgard\\Http\\Filter","Asgard\/Http\/Filter.html#method_after","(<a href=\"Asgard\/Http\/Controller.html\"><abbr title=\"Asgard\\Http\\Controller\">Controller<\/abbr><\/a> $controller, <a href=\"Asgard\/Http\/Request.html\"><abbr title=\"Asgard\\Http\\Request\">Request<\/abbr><\/a> $request, mixed $result)","Method to be executed after the action.",2],["PageLayout::__construct","Asgard\\Http\\Filters\\PageLayout","Asgard\/Http\/Filters\/PageLayout.html#method___construct","(callable|string $layout = null, callable|string $htmlLayout = null)","Constructor.",2],["PageLayout::before","Asgard\\Http\\Filters\\PageLayout","Asgard\/Http\/Filters\/PageLayout.html#method_before","(<abbr title=\"Asgard\\Http\\Filters\\Asgard\\Http\\Controller\">Controller<\/abbr> $controller, <abbr title=\"Asgard\\Http\\Filters\\Asgard\\Http\\Request\">Request<\/abbr> $request)","To be executed before the action.",2],["PageLayout::after","Asgard\\Http\\Filters\\PageLayout","Asgard\/Http\/Filters\/PageLayout.html#method_after","(<abbr title=\"Asgard\\Http\\Filters\\Asgard\\Http\\Controller\">Controller<\/abbr> $controller, <abbr title=\"Asgard\\Http\\Filters\\Asgard\\Http\\Request\">Request<\/abbr> $request, mixed $result)","To be executed after the action.",2],["HttpFile::__construct","Asgard\\Http\\HttpFile","Asgard\/Http\/HttpFile.html#method___construct","(string $src, string $name, string $type, integer $size, integer $error)","Constructor.",2],["HttpFile::createFromArray","Asgard\\Http\\HttpFile","Asgard\/Http\/HttpFile.html#method_createFromArray","(array $arr)","Create file object from array.",2],["HttpFile::setType","Asgard\\Http\\HttpFile","Asgard\/Http\/HttpFile.html#method_setType","(string $type)","Set the file type.",2],["HttpFile::type","Asgard\\Http\\HttpFile","Asgard\/Http\/HttpFile.html#method_type","()","Get the file type.",2],["HttpFile::setSize","Asgard\\Http\\HttpFile","Asgard\/Http\/HttpFile.html#method_setSize","(integer $size)","Set the file size.",2],["HttpFile::size","Asgard\\Http\\HttpFile","Asgard\/Http\/HttpFile.html#method_size","()","Get the file size.",2],["HttpFile::setError","Asgard\\Http\\HttpFile","Asgard\/Http\/HttpFile.html#method_setError","(integer $error)","Set the file error code.",2],["HttpFile::error","Asgard\\Http\\HttpFile","Asgard\/Http\/HttpFile.html#method_error","()","Get the file error code.",2],["HttpKernel::__construct","Asgard\\Http\\HttpKernel","Asgard\/Http\/HttpKernel.html#method___construct","(<abbr title=\"Asgard\\Http\\Asgard\\Container\\ContainerInterface\">ContainerInterface<\/abbr> $container = null)","Constructor.",2],["HttpKernel::setDebug","Asgard\\Http\\HttpKernel","Asgard\/Http\/HttpKernel.html#method_setDebug","(boolean $debug)","Set debug flag.",2],["HttpKernel::setTranslator","Asgard\\Http\\HttpKernel","Asgard\/Http\/HttpKernel.html#method_setTranslator","(<abbr title=\"Asgard\\Http\\Symfony\\Component\\Translation\\TranslatorInterface\">TranslatorInterface<\/abbr> $translator)","Set translator dependency.",2],["HttpKernel::setResolver","Asgard\\Http\\HttpKernel","Asgard\/Http\/HttpKernel.html#method_setResolver","(<a href=\"Asgard\/Http\/ResolverInterface.html\"><abbr title=\"Asgard\\Http\\ResolverInterface\">ResolverInterface<\/abbr><\/a> $resolver)","Set Resolver dependency.",2],["HttpKernel::setErrorHandler","Asgard\\Http\\HttpKernel","Asgard\/Http\/HttpKernel.html#method_setErrorHandler","(<abbr title=\"Asgard\\Http\\Asgard\\Debug\\ErrorHandler\">ErrorHandler<\/abbr> $errorHandler)","Set Error handler dependency.",2],["HttpKernel::setHookManager","Asgard\\Http\\HttpKernel","Asgard\/Http\/HttpKernel.html#method_setHookManager","(<abbr title=\"Asgard\\Http\\Asgard\\Hook\\hookManagerInterface\">hookManagerInterface<\/abbr> $hookManager)","Set Hooks manager dependency.",2],["HttpKernel::setTemplateEngineFactory","Asgard\\Http\\HttpKernel","Asgard\/Http\/HttpKernel.html#method_setTemplateEngineFactory","(<abbr title=\"Asgard\\Http\\Asgard\\Templating\\TemplateEngineFactoryInterface\">TemplateEngineFactoryInterface<\/abbr> $templateEngineFactory)","Set template engine factory.",2],["HttpKernel::getHookManager","Asgard\\Http\\HttpKernel","Asgard\/Http\/HttpKernel.html#method_getHookManager","()","Return the HookManager.",2],["HttpKernel::getResolver","Asgard\\Http\\HttpKernel","Asgard\/Http\/HttpKernel.html#method_getResolver","()","Return the resolver.",2],["HttpKernel::getDebug","Asgard\\Http\\HttpKernel","Asgard\/Http\/HttpKernel.html#method_getDebug","()","Return the debug flag.",2],["HttpKernel::getTranslator","Asgard\\Http\\HttpKernel","Asgard\/Http\/HttpKernel.html#method_getTranslator","()","Return the translator",2],["HttpKernel::getErrorHandler","Asgard\\Http\\HttpKernel","Asgard\/Http\/HttpKernel.html#method_getErrorHandler","()","Return the error handler.",2],["HttpKernel::getTemplateEngineFactory","Asgard\\Http\\HttpKernel","Asgard\/Http\/HttpKernel.html#method_getTemplateEngineFactory","()","Return the HookManager",2],["HttpKernel::start","Asgard\\Http\\HttpKernel","Asgard\/Http\/HttpKernel.html#method_start","(string $start)","Set the start file.",2],["HttpKernel::end","Asgard\\Http\\HttpKernel","Asgard\/Http\/HttpKernel.html#method_end","(string $end)","Set the end file.",2],["HttpKernel::run","Asgard\\Http\\HttpKernel","Asgard\/Http\/HttpKernel.html#method_run","()","Run the kernel and return a response.",2],["HttpKernel::addRequest","Asgard\\Http\\HttpKernel","Asgard\/Http\/HttpKernel.html#method_addRequest","(<a href=\"Asgard\/Http\/Request.html\"><abbr title=\"Asgard\\Http\\Request\">Request<\/abbr><\/a> $request)","Set the HTTP request.",2],["HttpKernel::process","Asgard\\Http\\HttpKernel","Asgard\/Http\/HttpKernel.html#method_process","(<a href=\"Asgard\/Http\/Request.html\"><abbr title=\"Asgard\\Http\\Request\">Request<\/abbr><\/a> $request, boolean $catch = true)","Process the request.",2],["HttpKernel::getRequest","Asgard\\Http\\HttpKernel","Asgard\/Http\/HttpKernel.html#method_getRequest","()","Get the last given request.",2],["HttpKernel::runController","Asgard\\Http\\HttpKernel","Asgard\/Http\/HttpKernel.html#method_runController","(string $controllerClass, string|callable $action, <a href=\"Asgard\/Http\/Request.html\"><abbr title=\"Asgard\\Http\\Request\">Request<\/abbr><\/a> $request, <a href=\"Asgard\/Http\/Route.html\"><abbr title=\"Asgard\\Http\\Route\">Route<\/abbr><\/a> $route = null)","Run the controller and action.",2],["HttpKernel::prepareController","Asgard\\Http\\HttpKernel","Asgard\/Http\/HttpKernel.html#method_prepareController","($controller, $action, <a href=\"Asgard\/Http\/Request.html\"><abbr title=\"Asgard\\Http\\Request\">Request<\/abbr><\/a> $request, <a href=\"Asgard\/Http\/Route.html\"><abbr title=\"Asgard\\Http\\Route\">Route<\/abbr><\/a> $route = null)","",2],["HttpKernel::addTemplatePathSolver","Asgard\\Http\\HttpKernel","Asgard\/Http\/HttpKernel.html#method_addTemplatePathSolver","(callable $cb)","Add a template path solver.",2],["HttpKernel::filterAll","Asgard\\Http\\HttpKernel","Asgard\/Http\/HttpKernel.html#method_filterAll","(string $filter, array $args = array())","Filter all controllers and actions.",2],["HttpKernel::filter","Asgard\\Http\\HttpKernel","Asgard\/Http\/HttpKernel.html#method_filter","(array $criteria, string $filter, array $args = array())","Fillter controllers and actions with criteria.",2],["HttpKernel::filterBeforeAll","Asgard\\Http\\HttpKernel","Asgard\/Http\/HttpKernel.html#method_filterBeforeAll","(callable $filter)","Filter before all controllers and actions.",2],["HttpKernel::filterBefore","Asgard\\Http\\HttpKernel","Asgard\/Http\/HttpKernel.html#method_filterBefore","(array $criteria, callable $filter)","Filter before controllers and actions with criteria.",2],["HttpKernel::filterAfterAll","Asgard\\Http\\HttpKernel","Asgard\/Http\/HttpKernel.html#method_filterAfterAll","(callable $filter)","Filter after all controllers and actions.",2],["HttpKernel::filterAfter","Asgard\\Http\\HttpKernel","Asgard\/Http\/HttpKernel.html#method_filterAfter","(array $criteria, callable $filter)","Filter after controllers and actions with criteria.",2],["HttpKernelInterface::setDebug","Asgard\\Http\\HttpKernelInterface","Asgard\/Http\/HttpKernelInterface.html#method_setDebug","(boolean $debug)","Set debug flag.",2],["HttpKernelInterface::setTranslator","Asgard\\Http\\HttpKernelInterface","Asgard\/Http\/HttpKernelInterface.html#method_setTranslator","(<abbr title=\"Asgard\\Http\\Symfony\\Component\\Translation\\TranslatorInterface\">TranslatorInterface<\/abbr> $translator)","Set translator dependency.",2],["HttpKernelInterface::setResolver","Asgard\\Http\\HttpKernelInterface","Asgard\/Http\/HttpKernelInterface.html#method_setResolver","(<a href=\"Asgard\/Http\/ResolverInterface.html\"><abbr title=\"Asgard\\Http\\ResolverInterface\">ResolverInterface<\/abbr><\/a> $resolver)","Set Resolver dependency.",2],["HttpKernelInterface::setErrorHandler","Asgard\\Http\\HttpKernelInterface","Asgard\/Http\/HttpKernelInterface.html#method_setErrorHandler","(<abbr title=\"Asgard\\Http\\Asgard\\Debug\\ErrorHandler\">ErrorHandler<\/abbr> $errorHandler)","Set Error handler dependency.",2],["HttpKernelInterface::setHookManager","Asgard\\Http\\HttpKernelInterface","Asgard\/Http\/HttpKernelInterface.html#method_setHookManager","(<abbr title=\"Asgard\\Http\\Asgard\\Hook\\HookManagerInterface\">HookManagerInterface<\/abbr> $HookManager)","Set Hooks manager dependency.",2],["HttpKernelInterface::setTemplateEngineFactory","Asgard\\Http\\HttpKernelInterface","Asgard\/Http\/HttpKernelInterface.html#method_setTemplateEngineFactory","(<abbr title=\"Asgard\\Http\\Asgard\\Templating\\TemplateEngineFactoryInterface\">TemplateEngineFactoryInterface<\/abbr> $templateEngineFactory)","Set template engine factory.",2],["HttpKernelInterface::getHookManager","Asgard\\Http\\HttpKernelInterface","Asgard\/Http\/HttpKernelInterface.html#method_getHookManager","()","Return the HookManager.",2],["HttpKernelInterface::getResolver","Asgard\\Http\\HttpKernelInterface","Asgard\/Http\/HttpKernelInterface.html#method_getResolver","()","Return the resolver.",2],["HttpKernelInterface::getDebug","Asgard\\Http\\HttpKernelInterface","Asgard\/Http\/HttpKernelInterface.html#method_getDebug","()","Return the debug flag.",2],["HttpKernelInterface::getTranslator","Asgard\\Http\\HttpKernelInterface","Asgard\/Http\/HttpKernelInterface.html#method_getTranslator","()","Return the translator",2],["HttpKernelInterface::getErrorHandler","Asgard\\Http\\HttpKernelInterface","Asgard\/Http\/HttpKernelInterface.html#method_getErrorHandler","()","Return the error handler.",2],["HttpKernelInterface::getTemplateEngineFactory","Asgard\\Http\\HttpKernelInterface","Asgard\/Http\/HttpKernelInterface.html#method_getTemplateEngineFactory","()","Return the HookManager",2],["HttpKernelInterface::start","Asgard\\Http\\HttpKernelInterface","Asgard\/Http\/HttpKernelInterface.html#method_start","(string $start)","Set the start file.",2],["HttpKernelInterface::end","Asgard\\Http\\HttpKernelInterface","Asgard\/Http\/HttpKernelInterface.html#method_end","(string $end)","Set the end file.",2],["HttpKernelInterface::run","Asgard\\Http\\HttpKernelInterface","Asgard\/Http\/HttpKernelInterface.html#method_run","()","Run the kernel and return a response.",2],["HttpKernelInterface::addRequest","Asgard\\Http\\HttpKernelInterface","Asgard\/Http\/HttpKernelInterface.html#method_addRequest","(<a href=\"Asgard\/Http\/Request.html\"><abbr title=\"Asgard\\Http\\Request\">Request<\/abbr><\/a> $request)","Set the HTTP request.",2],["HttpKernelInterface::process","Asgard\\Http\\HttpKernelInterface","Asgard\/Http\/HttpKernelInterface.html#method_process","(<a href=\"Asgard\/Http\/Request.html\"><abbr title=\"Asgard\\Http\\Request\">Request<\/abbr><\/a> $request, boolean $catch = true)","Process the request.",2],["HttpKernelInterface::getRequest","Asgard\\Http\\HttpKernelInterface","Asgard\/Http\/HttpKernelInterface.html#method_getRequest","()","Get the last given request.",2],["HttpKernelInterface::runController","Asgard\\Http\\HttpKernelInterface","Asgard\/Http\/HttpKernelInterface.html#method_runController","(string $controllerClass, string|callable $action, <a href=\"Asgard\/Http\/Request.html\"><abbr title=\"Asgard\\Http\\Request\">Request<\/abbr><\/a> $request, <a href=\"Asgard\/Http\/Route.html\"><abbr title=\"Asgard\\Http\\Route\">Route<\/abbr><\/a> $route = null)","Run the controller and action.",2],["HttpKernelInterface::addTemplatePathSolver","Asgard\\Http\\HttpKernelInterface","Asgard\/Http\/HttpKernelInterface.html#method_addTemplatePathSolver","(callable $cb)","Add a template path solver.",2],["HttpKernelInterface::filterAll","Asgard\\Http\\HttpKernelInterface","Asgard\/Http\/HttpKernelInterface.html#method_filterAll","(string $filter, array $args = array())","Filter all controllers and actions.",2],["HttpKernelInterface::filter","Asgard\\Http\\HttpKernelInterface","Asgard\/Http\/HttpKernelInterface.html#method_filter","(array $criteria, string $filter, array $args = array())","Fillter controllers and actions with criteria.",2],["HttpKernelInterface::filterBeforeAll","Asgard\\Http\\HttpKernelInterface","Asgard\/Http\/HttpKernelInterface.html#method_filterBeforeAll","(callable $filter)","Filter before all controllers and actions.",2],["HttpKernelInterface::filterBefore","Asgard\\Http\\HttpKernelInterface","Asgard\/Http\/HttpKernelInterface.html#method_filterBefore","(array $criteria, callable $filter)","Filter before controllers and actions with criteria.",2],["HttpKernelInterface::filterAfterAll","Asgard\\Http\\HttpKernelInterface","Asgard\/Http\/HttpKernelInterface.html#method_filterAfterAll","(callable $filter)","Filter after all controllers and actions.",2],["HttpKernelInterface::filterAfter","Asgard\\Http\\HttpKernelInterface","Asgard\/Http\/HttpKernelInterface.html#method_filterAfter","(array $criteria, callable $filter)","Filter after controllers and actions with criteria.",2],["Request::__clone","Asgard\\Http\\Request","Asgard\/Http\/Request.html#method___clone","()","",2],["Request::singleton","Asgard\\Http\\Request","Asgard\/Http\/Request.html#method_singleton","()","Return the default instance.",2],["Request::setInstance","Asgard\\Http\\Request","Asgard\/Http\/Request.html#method_setInstance","(<a href=\"Asgard\/Http\/Request.html\"><abbr title=\"Asgard\\Http\\Request\">Request<\/abbr><\/a> $instance)","Set the default instance.",2],["Request::__construct","Asgard\\Http\\Request","Asgard\/Http\/Request.html#method___construct","()","Constructor.",2],["Request::createFromGlobals","Asgard\\Http\\Request","Asgard\/Http\/Request.html#method_createFromGlobals","()","Create a Request from the global inputs.",2],["Request::setFiles","Asgard\\Http\\Request","Asgard\/Http\/Request.html#method_setFiles","(array $files)","Set the files.",2],["Request::getJSON","Asgard\\Http\\Request","Asgard\/Http\/Request.html#method_getJSON","()","Parse the JSON body.",2],["Request::setJSON","Asgard\\Http\\Request","Asgard\/Http\/Request.html#method_setJSON","(mixed $data)","Set the JSON body.",2],["Request::setURL","Asgard\\Http\\Request","Asgard\/Http\/Request.html#method_setURL","(string $server, string $root, string $url)","Set the url.",2],["Request::getParam","Asgard\\Http\\Request","Asgard\/Http\/Request.html#method_getParam","(string $name)","Get a parameter.",2],["Request::setParam","Asgard\\Http\\Request","Asgard\/Http\/Request.html#method_setParam","(string $name, mixed $value = null)","Set a parameter.",2],["Request::offsetSet","Asgard\\Http\\Request","Asgard\/Http\/Request.html#method_offsetSet","(string $offset, mixed $value)","Array set implementation.",2],["Request::offsetExists","Asgard\\Http\\Request","Asgard\/Http\/Request.html#method_offsetExists","(string $offset)","Array exists implementation.",2],["Request::offsetUnset","Asgard\\Http\\Request","Asgard\/Http\/Request.html#method_offsetUnset","(string $offset)","Array unset implementation.",2],["Request::offsetGet","Asgard\\Http\\Request","Asgard\/Http\/Request.html#method_offsetGet","(string $offset)","Array get implementation.",2],["Request::format","Asgard\\Http\\Request","Asgard\/Http\/Request.html#method_format","()","Get the request format.",2],["Request::method","Asgard\\Http\\Request","Asgard\/Http\/Request.html#method_method","()","Get the request method.",2],["Request::setMethod","Asgard\\Http\\Request","Asgard\/Http\/Request.html#method_setMethod","(string $value)","Set the request method.",2],["Request::ip","Asgard\\Http\\Request","Asgard\/Http\/Request.html#method_ip","()","Get the IP address.",2],["Request::setIP","Asgard\\Http\\Request","Asgard\/Http\/Request.html#method_setIP","(string $value)","Set the IP address.",2],["Request::referer","Asgard\\Http\\Request","Asgard\/Http\/Request.html#method_referer","()","Get the referer.",2],["Request::setReferer","Asgard\\Http\\Request","Asgard\/Http\/Request.html#method_setReferer","(string $value)","Set the referer.",2],["Request::getBody","Asgard\\Http\\Request","Asgard\/Http\/Request.html#method_getBody","()","Get the body.",2],["Request::setBody","Asgard\\Http\\Request","Asgard\/Http\/Request.html#method_setBody","(string $value)","Set the body.",2],["Request::setRoute","Asgard\\Http\\Request","Asgard\/Http\/Request.html#method_setRoute","(<a href=\"Asgard\/Http\/Route.html\"><abbr title=\"Asgard\\Http\\Route\">Route<\/abbr><\/a> $route)","",2],["Request::getRoute","Asgard\\Http\\Request","Asgard\/Http\/Request.html#method_getRoute","()","",2],["Resolver::__construct","Asgard\\Http\\Resolver","Asgard\/Http\/Resolver.html#method___construct","(<abbr title=\"Asgard\\Http\\Asgard\\Cache\\CacheInterface\">CacheInterface<\/abbr> $cache = null)","Constructor.",2],["Resolver::setRoutes","Asgard\\Http\\Resolver","Asgard\/Http\/Resolver.html#method_setRoutes","(array $routes)","Set the routes.",2],["Resolver::addRoutes","Asgard\\Http\\Resolver","Asgard\/Http\/Resolver.html#method_addRoutes","(array $routes)","Add routes.",2],["Resolver::addRoute","Asgard\\Http\\Resolver","Asgard\/Http\/Resolver.html#method_addRoute","(<a href=\"Asgard\/Http\/Route.html\"><abbr title=\"Asgard\\Http\\Route\">Route<\/abbr><\/a> $route)","Add one route.",2],["Resolver::match","Asgard\\Http\\Resolver","Asgard\/Http\/Resolver.html#method_match","(<a href=\"Asgard\/Http\/Request.html\"><abbr title=\"Asgard\\Http\\Request\">Request<\/abbr><\/a> $request, string $route, array $requirements = null, string $method = null)","Check if a request matches a route.",2],["Resolver::matchWith","Asgard\\Http\\Resolver","Asgard\/Http\/Resolver.html#method_matchWith","(string $route, string $with, array $requirements = null, <a href=\"Asgard\/Http\/Request.html\"><abbr title=\"Asgard\\Http\\Request\">Request<\/abbr><\/a> $request = null, string $method = null)","Actually check if url and route match.",2],["Resolver::getRegexFromRoute","Asgard\\Http\\Resolver","Asgard\/Http\/Resolver.html#method_getRegexFromRoute","(string $route, array $requirements = null)","Get a regex from a route.",2],["Resolver::getRoute","Asgard\\Http\\Resolver","Asgard\/Http\/Resolver.html#method_getRoute","(<a href=\"Asgard\/Http\/Request.html\"><abbr title=\"Asgard\\Http\\Request\">Request<\/abbr><\/a> $request)","Get the route matching a request.",2],["Resolver::sortRoutes","Asgard\\Http\\Resolver","Asgard\/Http\/Resolver.html#method_sortRoutes","()","Sort the routes by order of coverage.",2],["Resolver::buildRoute","Asgard\\Http\\Resolver","Asgard\/Http\/Resolver.html#method_buildRoute","(string $route, array $params = array())","Build an URL from a route.",2],["Resolver::getRoutes","Asgard\\Http\\Resolver","Asgard\/Http\/Resolver.html#method_getRoutes","()","Return the routes.",2],["Resolver::getRouteFor","Asgard\\Http\\Resolver","Asgard\/Http\/Resolver.html#method_getRouteFor","(string|array $what)","Get route for a given action.",2],["Resolver::url","Asgard\\Http\\Resolver","Asgard\/Http\/Resolver.html#method_url","(array|string $what, array $params = array())","Return the url for a route or a controller\/action couple.",2],["Resolver::setHttpKernel","Asgard\\Http\\Resolver","Asgard\/Http\/Resolver.html#method_setHttpKernel","(<a href=\"Asgard\/Http\/HttpKernelInterface.html\"><abbr title=\"Asgard\\Http\\HttpKernelInterface\">HttpKernelInterface<\/abbr><\/a> $httpKernel)","Set the HttpKernel dependency.",2],["Resolver::getUrl","Asgard\\Http\\Resolver","Asgard\/Http\/Resolver.html#method_getUrl","()","Get the url instance.",2],["Resolver::setUrl","Asgard\\Http\\Resolver","Asgard\/Http\/Resolver.html#method_setUrl","($url)","",2],["ResolverInterface::setRoutes","Asgard\\Http\\ResolverInterface","Asgard\/Http\/ResolverInterface.html#method_setRoutes","(array $routes)","Set the routes.",2],["ResolverInterface::addRoutes","Asgard\\Http\\ResolverInterface","Asgard\/Http\/ResolverInterface.html#method_addRoutes","(array $routes)","Add routes.",2],["ResolverInterface::addRoute","Asgard\\Http\\ResolverInterface","Asgard\/Http\/ResolverInterface.html#method_addRoute","(<a href=\"Asgard\/Http\/Route.html\"><abbr title=\"Asgard\\Http\\Route\">Route<\/abbr><\/a> $route)","Add one route.",2],["ResolverInterface::match","Asgard\\Http\\ResolverInterface","Asgard\/Http\/ResolverInterface.html#method_match","(<a href=\"Asgard\/Http\/Request.html\"><abbr title=\"Asgard\\Http\\Request\">Request<\/abbr><\/a> $request, string $route, array $requirements = null, string $method = null)","Check if a request matches a route.",2],["ResolverInterface::matchWith","Asgard\\Http\\ResolverInterface","Asgard\/Http\/ResolverInterface.html#method_matchWith","(string $route, string $with, array $requirements = null, <a href=\"Asgard\/Http\/Request.html\"><abbr title=\"Asgard\\Http\\Request\">Request<\/abbr><\/a> $request = null, string $method = null)","Actually check if url and route match.",2],["ResolverInterface::getRegexFromRoute","Asgard\\Http\\ResolverInterface","Asgard\/Http\/ResolverInterface.html#method_getRegexFromRoute","(string $route, array $requirements)","Get a regex from a route.",2],["ResolverInterface::getRoute","Asgard\\Http\\ResolverInterface","Asgard\/Http\/ResolverInterface.html#method_getRoute","(<a href=\"Asgard\/Http\/Request.html\"><abbr title=\"Asgard\\Http\\Request\">Request<\/abbr><\/a> $request)","Get the route matching a request.",2],["ResolverInterface::sortRoutes","Asgard\\Http\\ResolverInterface","Asgard\/Http\/ResolverInterface.html#method_sortRoutes","()","Sort the routes by order of coverage.",2],["ResolverInterface::buildRoute","Asgard\\Http\\ResolverInterface","Asgard\/Http\/ResolverInterface.html#method_buildRoute","(string $route, array $params = array())","Build an URL from a route.",2],["ResolverInterface::getRoutes","Asgard\\Http\\ResolverInterface","Asgard\/Http\/ResolverInterface.html#method_getRoutes","()","Return the routes.",2],["ResolverInterface::getRouteFor","Asgard\\Http\\ResolverInterface","Asgard\/Http\/ResolverInterface.html#method_getRouteFor","(string|array $what)","Get route for a given action.",2],["ResolverInterface::url","Asgard\\Http\\ResolverInterface","Asgard\/Http\/ResolverInterface.html#method_url","(array|string $what, array $params = array())","Return the url for a route or a controller\/action couple.",2],["ResolverInterface::setHttpKernel","Asgard\\Http\\ResolverInterface","Asgard\/Http\/ResolverInterface.html#method_setHttpKernel","(<a href=\"Asgard\/Http\/HttpKernelInterface.html\"><abbr title=\"Asgard\\Http\\HttpKernelInterface\">HttpKernelInterface<\/abbr><\/a> $httpKernel)","Set the HttpKernel dependency.",2],["ResolverInterface::getUrl","Asgard\\Http\\ResolverInterface","Asgard\/Http\/ResolverInterface.html#method_getUrl","()","Get the url instance.",2],["Response::__construct","Asgard\\Http\\Response","Asgard\/Http\/Response.html#method___construct","(integer $code = 200)","Constructor.",2],["Response::setRequest","Asgard\\Http\\Response","Asgard\/Http\/Response.html#method_setRequest","(<a href=\"Asgard\/Http\/Request.html\"><abbr title=\"Asgard\\Http\\Request\">Request<\/abbr><\/a> $request)","Set Request.",2],["Response::setCode","Asgard\\Http\\Response","Asgard\/Http\/Response.html#method_setCode","(integer $code)","Set HTTP code.",2],["Response::getCode","Asgard\\Http\\Response","Asgard\/Http\/Response.html#method_getCode","()","Get HTTP code.",2],["Response::getRequest","Asgard\\Http\\Response","Asgard\/Http\/Response.html#method_getRequest","()","Get Request.",2],["Response::setHeader","Asgard\\Http\\Response","Asgard\/Http\/Response.html#method_setHeader","(string $header, string $value)","Set a header.",2],["Response::getHeader","Asgard\\Http\\Response","Asgard\/Http\/Response.html#method_getHeader","(string $header)","Get a header.",2],["Response::getHeaders","Asgard\\Http\\Response","Asgard\/Http\/Response.html#method_getHeaders","()","Get headers.",2],["Response::setContent","Asgard\\Http\\Response","Asgard\/Http\/Response.html#method_setContent","(string $content)","Set the content.",2],["Response::getContent","Asgard\\Http\\Response","Asgard\/Http\/Response.html#method_getContent","()","Get the content.",2],["Response::sendHeaders","Asgard\\Http\\Response","Asgard\/Http\/Response.html#method_sendHeaders","()","Send headers.",2],["Response::send","Asgard\\Http\\Response","Asgard\/Http\/Response.html#method_send","()","Send the response.",2],["Response::redirect","Asgard\\Http\\Response","Asgard\/Http\/Response.html#method_redirect","(string $url = &#039;&#039;)","Redirect the user to a given url.",2],["Response::__toString","Asgard\\Http\\Response","Asgard\/Http\/Response.html#method___toString","()","__toString magic method.",2],["Response::isOK","Asgard\\Http\\Response","Asgard\/Http\/Response.html#method_isOK","()","Check if response code is ok.",2],["Response::back","Asgard\\Http\\Response","Asgard\/Http\/Response.html#method_back","()","",2],["Route::__construct","Asgard\\Http\\Route","Asgard\/Http\/Route.html#method___construct","(string $route, string $controller, string|callable $action, array $options = array())","Constructor.",2],["Route::get","Asgard\\Http\\Route","Asgard\/Http\/Route.html#method_get","(string $name)","Get an option.",2],["Route::set","Asgard\\Http\\Route","Asgard\/Http\/Route.html#method_set","(string $name, mixed $value)","Set a option.",2],["Route::getRoute","Asgard\\Http\\Route","Asgard\/Http\/Route.html#method_getRoute","()","Get the route.",2],["Route::setRoute","Asgard\\Http\\Route","Asgard\/Http\/Route.html#method_setRoute","(string $route)","Set the route.",2],["Route::getController","Asgard\\Http\\Route","Asgard\/Http\/Route.html#method_getController","()","Get the controller class.",2],["Route::getAction","Asgard\\Http\\Route","Asgard\/Http\/Route.html#method_getAction","()","Get the action name.",2],["Route::setController","Asgard\\Http\\Route","Asgard\/Http\/Route.html#method_setController","(string $controller)","Set the controller class.",2],["Route::setAction","Asgard\\Http\\Route","Asgard\/Http\/Route.html#method_setAction","(string|callable $action)","Set the action name.",2],["URL::__construct","Asgard\\Http\\URL","Asgard\/Http\/URL.html#method___construct","(<a href=\"Asgard\/Http\/Request.html\"><abbr title=\"Asgard\\Http\\Request\">Request<\/abbr><\/a> $request, string $host = null, string $root = null, string $url = null)","Constructor.",2],["URL::get","Asgard\\Http\\URL","Asgard\/Http\/URL.html#method_get","()","Return the url.",2],["URL::setURL","Asgard\\Http\\URL","Asgard\/Http\/URL.html#method_setURL","(string $url)","Set the url.",2],["URL::setHost","Asgard\\Http\\URL","Asgard\/Http\/URL.html#method_setHost","(string $host)","Set the host address.",2],["URL::setRoot","Asgard\\Http\\URL","Asgard\/Http\/URL.html#method_setRoot","(string $root)","Set the root path.",2],["URL::current","Asgard\\Http\\URL","Asgard\/Http\/URL.html#method_current","()","Return the current url.",2],["URL::getParams","Asgard\\Http\\URL","Asgard\/Http\/URL.html#method_getParams","(array $params = array())","Return the url parameters.",2],["URL::full","Asgard\\Http\\URL","Asgard\/Http\/URL.html#method_full","(array $params = array())","Return the full url.",2],["URL::base","Asgard\\Http\\URL","Asgard\/Http\/URL.html#method_base","()","Return the base url.",2],["URL::setBase","Asgard\\Http\\URL","Asgard\/Http\/URL.html#method_setBase","(string $base)","Set the base url.",2],["URL::to","Asgard\\Http\\URL","Asgard\/Http\/URL.html#method_to","(string $url)","Create the absolute url to a relative one.",2],["URL::root","Asgard\\Http\\URL","Asgard\/Http\/URL.html#method_root","()","Return the root path.",2],["URL::host","Asgard\\Http\\URL","Asgard\/Http\/URL.html#method_host","()","Return the host address.",2],["URL::protocol","Asgard\\Http\\URL","Asgard\/Http\/URL.html#method_protocol","()","Return the protocol.",2],["URL::startsWith","Asgard\\Http\\URL","Asgard\/Http\/URL.html#method_startsWith","(string $what)","Check if the url starts with a given string.",2],["URLInterface::get","Asgard\\Http\\URLInterface","Asgard\/Http\/URLInterface.html#method_get","()","Return the url.",2],["URLInterface::setURL","Asgard\\Http\\URLInterface","Asgard\/Http\/URLInterface.html#method_setURL","(string $url)","Set the url.",2],["URLInterface::setHost","Asgard\\Http\\URLInterface","Asgard\/Http\/URLInterface.html#method_setHost","(string $host)","Set the host address.",2],["URLInterface::setRoot","Asgard\\Http\\URLInterface","Asgard\/Http\/URLInterface.html#method_setRoot","(string $root)","Set the root path.",2],["URLInterface::current","Asgard\\Http\\URLInterface","Asgard\/Http\/URLInterface.html#method_current","()","Return the current url.",2],["URLInterface::getParams","Asgard\\Http\\URLInterface","Asgard\/Http\/URLInterface.html#method_getParams","(array $params = array())","Return the url parameters.",2],["URLInterface::full","Asgard\\Http\\URLInterface","Asgard\/Http\/URLInterface.html#method_full","(array $params = array())","Return the full url.",2],["URLInterface::base","Asgard\\Http\\URLInterface","Asgard\/Http\/URLInterface.html#method_base","()","Return the base url.",2],["URLInterface::setBase","Asgard\\Http\\URLInterface","Asgard\/Http\/URLInterface.html#method_setBase","(string $base)","Set the base url.",2],["URLInterface::to","Asgard\\Http\\URLInterface","Asgard\/Http\/URLInterface.html#method_to","(string $url)","Create the absolute url to a relative one.",2],["URLInterface::root","Asgard\\Http\\URLInterface","Asgard\/Http\/URLInterface.html#method_root","()","Return the root path.",2],["URLInterface::host","Asgard\\Http\\URLInterface","Asgard\/Http\/URLInterface.html#method_host","()","Return the host address.",2],["URLInterface::protocol","Asgard\\Http\\URLInterface","Asgard\/Http\/URLInterface.html#method_protocol","()","Return the protocol.",2],["URLInterface::startsWith","Asgard\\Http\\URLInterface","Asgard\/Http\/URLInterface.html#method_startsWith","(string $what)","Check if the url starts with a given string.",2],["Flash::__construct","Asgard\\Http\\Utils\\Flash","Asgard\/Http\/Utils\/Flash.html#method___construct","(<abbr title=\"Asgard\\Http\\Utils\\Asgard\\Container\\ContainerInterface\">ContainerInterface<\/abbr> $container)","Constructor.",2],["Flash::addSuccess","Asgard\\Http\\Utils\\Flash","Asgard\/Http\/Utils\/Flash.html#method_addSuccess","(string $message)","Add a success message.",2],["Flash::addError","Asgard\\Http\\Utils\\Flash","Asgard\/Http\/Utils\/Flash.html#method_addError","(string $message)","Add an error message.",2],["Flash::addInfo","Asgard\\Http\\Utils\\Flash","Asgard\/Http\/Utils\/Flash.html#method_addInfo","(string $message)","Add an info message.",2],["Flash::addWarning","Asgard\\Http\\Utils\\Flash","Asgard\/Http\/Utils\/Flash.html#method_addWarning","(string $message)","Add a warning message.",2],["Flash::add","Asgard\\Http\\Utils\\Flash","Asgard\/Http\/Utils\/Flash.html#method_add","(string $type, string $message)","Add a custom type message.",2],["Flash::showAll","Asgard\\Http\\Utils\\Flash","Asgard\/Http\/Utils\/Flash.html#method_showAll","(string $cat = null, boolean $cb = true)","Show all messages.",2],["Flash::show","Asgard\\Http\\Utils\\Flash","Asgard\/Http\/Utils\/Flash.html#method_show","(string $type, string $cat = null, callable $cb = null)","Show a custom type messages.",2],["Flash::setCallback","Asgard\\Http\\Utils\\Flash","Asgard\/Http\/Utils\/Flash.html#method_setCallback","(callable $cb)","Set the display callback.",2],["Flash::has","Asgard\\Http\\Utils\\Flash","Asgard\/Http\/Utils\/Flash.html#method_has","($type = null)","",2],["Flash::setGlobalCallback","Asgard\\Http\\Utils\\Flash","Asgard\/Http\/Utils\/Flash.html#method_setGlobalCallback","(callable $globalCb)","",2],["HTML::__construct","Asgard\\Http\\Utils\\HTML","Asgard\/Http\/Utils\/HTML.html#method___construct","(<abbr title=\"Asgard\\Http\\Utils\\Asgard\\Http\\HttpKernel\">HttpKernel<\/abbr> $httpKernel)","Constructor.",2],["HTML::codeStart","Asgard\\Http\\Utils\\HTML","Asgard\/Http\/Utils\/HTML.html#method_codeStart","()","Start buffer to write code.",2],["HTML::codeEnd","Asgard\\Http\\Utils\\HTML","Asgard\/Http\/Utils\/HTML.html#method_codeEnd","()","End buffer to write code.",2],["HTML::getTitle","Asgard\\Http\\Utils\\HTML","Asgard\/Http\/Utils\/HTML.html#method_getTitle","()","Get page title.",2],["HTML::getDescription","Asgard\\Http\\Utils\\HTML","Asgard\/Http\/Utils\/HTML.html#method_getDescription","()","Get page description.",2],["HTML::getKeywords","Asgard\\Http\\Utils\\HTML","Asgard\/Http\/Utils\/HTML.html#method_getKeywords","()","Get page keywords",2],["HTML::setTitle","Asgard\\Http\\Utils\\HTML","Asgard\/Http\/Utils\/HTML.html#method_setTitle","(string $title)","Set page title.",2],["HTML::setDescription","Asgard\\Http\\Utils\\HTML","Asgard\/Http\/Utils\/HTML.html#method_setDescription","(string $description)","Set page description.",2],["HTML::setKeywords","Asgard\\Http\\Utils\\HTML","Asgard\/Http\/Utils\/HTML.html#method_setKeywords","(string $keywords)","Set page keywords.",2],["HTML::printTitle","Asgard\\Http\\Utils\\HTML","Asgard\/Http\/Utils\/HTML.html#method_printTitle","()","Print the title.",2],["HTML::printDescription","Asgard\\Http\\Utils\\HTML","Asgard\/Http\/Utils\/HTML.html#method_printDescription","()","Print the description.",2],["HTML::printKeywords","Asgard\\Http\\Utils\\HTML","Asgard\/Http\/Utils\/HTML.html#method_printKeywords","()","Print the keywords.",2],["HTML::includeJS","Asgard\\Http\\Utils\\HTML","Asgard\/Http\/Utils\/HTML.html#method_includeJS","(string $js)","Include a JS file.",2],["HTML::includeCSS","Asgard\\Http\\Utils\\HTML","Asgard\/Http\/Utils\/HTML.html#method_includeCSS","(string $css)","Include a CSS file.",2],["HTML::codeJS","Asgard\\Http\\Utils\\HTML","Asgard\/Http\/Utils\/HTML.html#method_codeJS","(string $js)","Include JS code.",2],["HTML::codeCSS","Asgard\\Http\\Utils\\HTML","Asgard\/Http\/Utils\/HTML.html#method_codeCSS","(string $css)","Include CSS code.",2],["HTML::code","Asgard\\Http\\Utils\\HTML","Asgard\/Http\/Utils\/HTML.html#method_code","(string $code)","Include code.",2],["HTML::printJSInclude","Asgard\\Http\\Utils\\HTML","Asgard\/Http\/Utils\/HTML.html#method_printJSInclude","()","Print JS files.",2],["HTML::printCSSInclude","Asgard\\Http\\Utils\\HTML","Asgard\/Http\/Utils\/HTML.html#method_printCSSInclude","()","Print CSS files.",2],["HTML::printJSCode","Asgard\\Http\\Utils\\HTML","Asgard\/Http\/Utils\/HTML.html#method_printJSCode","()","Print JS code.",2],["HTML::printCSSCode","Asgard\\Http\\Utils\\HTML","Asgard\/Http\/Utils\/HTML.html#method_printCSSCode","()","Print CSS code.",2],["HTML::printCode","Asgard\\Http\\Utils\\HTML","Asgard\/Http\/Utils\/HTML.html#method_printCode","()","Print code.",2],["HTML::printAll","Asgard\\Http\\Utils\\HTML","Asgard\/Http\/Utils\/HTML.html#method_printAll","()","Print all.",2],["HTML::sanitize","Asgard\\Http\\Utils\\HTML","Asgard\/Http\/Utils\/HTML.html#method_sanitize","(string $html)","Sanitize HTML input.",2],["HTML::set","Asgard\\Http\\Utils\\HTML","Asgard\/Http\/Utils\/HTML.html#method_set","(string $name, mixed $value)","Set an option.",2],["HTML::get","Asgard\\Http\\Utils\\HTML","Asgard\/Http\/Utils\/HTML.html#method_get","(string $name)","Get an option.",2],["HTML::getRequest","Asgard\\Http\\Utils\\HTML","Asgard\/Http\/Utils\/HTML.html#method_getRequest","()","",2],["HTMLInterface::codeStart","Asgard\\Http\\Utils\\HTMLInterface","Asgard\/Http\/Utils\/HTMLInterface.html#method_codeStart","()","Start buffer to write code.",2],["HTMLInterface::codeEnd","Asgard\\Http\\Utils\\HTMLInterface","Asgard\/Http\/Utils\/HTMLInterface.html#method_codeEnd","()","End buffer to write code.",2],["HTMLInterface::getTitle","Asgard\\Http\\Utils\\HTMLInterface","Asgard\/Http\/Utils\/HTMLInterface.html#method_getTitle","()","Get page title.",2],["HTMLInterface::getDescription","Asgard\\Http\\Utils\\HTMLInterface","Asgard\/Http\/Utils\/HTMLInterface.html#method_getDescription","()","Get page description.",2],["HTMLInterface::getKeywords","Asgard\\Http\\Utils\\HTMLInterface","Asgard\/Http\/Utils\/HTMLInterface.html#method_getKeywords","()","Get page keywords",2],["HTMLInterface::setTitle","Asgard\\Http\\Utils\\HTMLInterface","Asgard\/Http\/Utils\/HTMLInterface.html#method_setTitle","(string $title)","Set page title.",2],["HTMLInterface::setDescription","Asgard\\Http\\Utils\\HTMLInterface","Asgard\/Http\/Utils\/HTMLInterface.html#method_setDescription","(string $description)","Set page description.",2],["HTMLInterface::setKeywords","Asgard\\Http\\Utils\\HTMLInterface","Asgard\/Http\/Utils\/HTMLInterface.html#method_setKeywords","(string $keywords)","Set page keywords.",2],["HTMLInterface::printTitle","Asgard\\Http\\Utils\\HTMLInterface","Asgard\/Http\/Utils\/HTMLInterface.html#method_printTitle","()","Print the title.",2],["HTMLInterface::printDescription","Asgard\\Http\\Utils\\HTMLInterface","Asgard\/Http\/Utils\/HTMLInterface.html#method_printDescription","()","Print the description.",2],["HTMLInterface::printKeywords","Asgard\\Http\\Utils\\HTMLInterface","Asgard\/Http\/Utils\/HTMLInterface.html#method_printKeywords","()","Print the keywords.",2],["HTMLInterface::includeJS","Asgard\\Http\\Utils\\HTMLInterface","Asgard\/Http\/Utils\/HTMLInterface.html#method_includeJS","(string $js)","Include a JS file.",2],["HTMLInterface::includeCSS","Asgard\\Http\\Utils\\HTMLInterface","Asgard\/Http\/Utils\/HTMLInterface.html#method_includeCSS","(string $css)","Include a CSS file.",2],["HTMLInterface::codeJS","Asgard\\Http\\Utils\\HTMLInterface","Asgard\/Http\/Utils\/HTMLInterface.html#method_codeJS","(string $js)","Include JS code.",2],["HTMLInterface::codeCSS","Asgard\\Http\\Utils\\HTMLInterface","Asgard\/Http\/Utils\/HTMLInterface.html#method_codeCSS","(string $css)","Include CSS code.",2],["HTMLInterface::code","Asgard\\Http\\Utils\\HTMLInterface","Asgard\/Http\/Utils\/HTMLInterface.html#method_code","(string $code)","Include code.",2],["HTMLInterface::printJSInclude","Asgard\\Http\\Utils\\HTMLInterface","Asgard\/Http\/Utils\/HTMLInterface.html#method_printJSInclude","()","Print JS files.",2],["HTMLInterface::printCSSInclude","Asgard\\Http\\Utils\\HTMLInterface","Asgard\/Http\/Utils\/HTMLInterface.html#method_printCSSInclude","()","Print CSS files.",2],["HTMLInterface::printJSCode","Asgard\\Http\\Utils\\HTMLInterface","Asgard\/Http\/Utils\/HTMLInterface.html#method_printJSCode","()","Print JS code.",2],["HTMLInterface::printCSSCode","Asgard\\Http\\Utils\\HTMLInterface","Asgard\/Http\/Utils\/HTMLInterface.html#method_printCSSCode","()","Print CSS code.",2],["HTMLInterface::printCode","Asgard\\Http\\Utils\\HTMLInterface","Asgard\/Http\/Utils\/HTMLInterface.html#method_printCode","()","Print code.",2],["HTMLInterface::printAll","Asgard\\Http\\Utils\\HTMLInterface","Asgard\/Http\/Utils\/HTMLInterface.html#method_printAll","()","Print all.",2],["AddCommand::__construct","Asgard\\Migration\\Commands\\AddCommand","Asgard\/Migration\/Commands\/AddCommand.html#method___construct","(string $migrationsDir, <abbr title=\"Asgard\\Migration\\Commands\\Asgard\\Db\\DBInterface\">DBInterface<\/abbr> $db, <abbr title=\"Asgard\\Migration\\Commands\\Asgard\\Db\\SchemaInterface\">SchemaInterface<\/abbr> $schema)","Constructor.",2],["CreateCommand::__construct","Asgard\\Migration\\Commands\\CreateCommand","Asgard\/Migration\/Commands\/CreateCommand.html#method___construct","(string $migrationsDir)","Constructor.",2],["ListCommand::__construct","Asgard\\Migration\\Commands\\ListCommand","Asgard\/Migration\/Commands\/ListCommand.html#method___construct","(string $migrationsDir, <abbr title=\"Asgard\\Migration\\Commands\\Asgard\\Db\\DBInterface\">DBInterface<\/abbr> $db)","Constructor.",2],["MigrateCommand::__construct","Asgard\\Migration\\Commands\\MigrateCommand","Asgard\/Migration\/Commands\/MigrateCommand.html#method___construct","(string $migrationsDir, <abbr title=\"Asgard\\Migration\\Commands\\Asgard\\Db\\DBInterface\">DBInterface<\/abbr> $db = null, <abbr title=\"Asgard\\Migration\\Commands\\Asgard\\Db\\SchemaInterface\">SchemaInterface<\/abbr> $schema = null)","Constructor.",2],["MigrateOneCommand::__construct","Asgard\\Migration\\Commands\\MigrateOneCommand","Asgard\/Migration\/Commands\/MigrateOneCommand.html#method___construct","(string $migrationsDir, <abbr title=\"Asgard\\Migration\\Commands\\Asgard\\Db\\DBInterface\">DBInterface<\/abbr> $db = null, <abbr title=\"Asgard\\Migration\\Commands\\Asgard\\Db\\SchemaInterface\">SchemaInterface<\/abbr> $schema = null)","Constructor.",2],["RefreshCommand::__construct","Asgard\\Migration\\Commands\\RefreshCommand","Asgard\/Migration\/Commands\/RefreshCommand.html#method___construct","(string $migrationsDir, <abbr title=\"Asgard\\Migration\\Commands\\Asgard\\Db\\DBInterface\">DBInterface<\/abbr> $db = null, <abbr title=\"Asgard\\Migration\\Commands\\Asgard\\Db\\SchemaInterface\">SchemaInterface<\/abbr> $schema = null)","Constructor.",2],["RemoveCommand::__construct","Asgard\\Migration\\Commands\\RemoveCommand","Asgard\/Migration\/Commands\/RemoveCommand.html#method___construct","(string $migrationsDir, <abbr title=\"Asgard\\Migration\\Commands\\Asgard\\Db\\DBInterface\">DBInterface<\/abbr> $db, <abbr title=\"Asgard\\Migration\\Commands\\Asgard\\Db\\SchemaInterface\">SchemaInterface<\/abbr> $schema)","Constructor.",2],["RollbackCommand::__construct","Asgard\\Migration\\Commands\\RollbackCommand","Asgard\/Migration\/Commands\/RollbackCommand.html#method___construct","(string $migrationsDir, <abbr title=\"Asgard\\Migration\\Commands\\Asgard\\Db\\DBInterface\">DBInterface<\/abbr> $db = null, <abbr title=\"Asgard\\Migration\\Commands\\Asgard\\Db\\SchemaInterface\">SchemaInterface<\/abbr> $schema = null)","Constructor.",2],["UnmigrateCommand::__construct","Asgard\\Migration\\Commands\\UnmigrateCommand","Asgard\/Migration\/Commands\/UnmigrateCommand.html#method___construct","(string $migrationsDir, <abbr title=\"Asgard\\Migration\\Commands\\Asgard\\Db\\DBInterface\">DBInterface<\/abbr> $db = null, <abbr title=\"Asgard\\Migration\\Commands\\Asgard\\Db\\SchemaInterface\">SchemaInterface<\/abbr> $schema = null)","Constructor.",2],["DBMigration::setDB","Asgard\\Migration\\DBMigration","Asgard\/Migration\/DBMigration.html#method_setDB","(<abbr title=\"Asgard\\Migration\\Asgard\\Db\\DBInterface\">DBInterface<\/abbr> $db)","Set the DB dependency.",2],["DBMigration::setSchema","Asgard\\Migration\\DBMigration","Asgard\/Migration\/DBMigration.html#method_setSchema","(<abbr title=\"Asgard\\Migration\\Asgard\\Db\\SchemaInterface\">SchemaInterface<\/abbr> $schema)","Set the Schema dependency.",2],["DBMigration::_up","Asgard\\Migration\\DBMigration","Asgard\/Migration\/DBMigration.html#method__up","()","Wrapper for up().",2],["DBMigration::_down","Asgard\\Migration\\DBMigration","Asgard\/Migration\/DBMigration.html#method__down","()","Wrapper for down().",2],["Migration::__construct","Asgard\\Migration\\Migration","Asgard\/Migration\/Migration.html#method___construct","(<abbr title=\"Asgard\\Migration\\Asgard\\Container\\ContainerInterface\">ContainerInterface<\/abbr> $container = null)","Constructor.",2],["Migration::up","Asgard\\Migration\\Migration","Asgard\/Migration\/Migration.html#method_up","()","Executed to execute a migration.",2],["Migration::down","Asgard\\Migration\\Migration","Asgard\/Migration\/Migration.html#method_down","()","Executed to rollback a migration.",2],["Migration::_up","Asgard\\Migration\\Migration","Asgard\/Migration\/Migration.html#method__up","()","Wrapper for up().",2],["Migration::_down","Asgard\\Migration\\Migration","Asgard\/Migration\/Migration.html#method__down","()","Wrapper for down().",2],["MigrationManager::__construct","Asgard\\Migration\\MigrationManager","Asgard\/Migration\/MigrationManager.html#method___construct","(string $directory, <abbr title=\"Asgard\\Migration\\Asgard\\Db\\DBInterface\">DBInterface<\/abbr> $db = null, <abbr title=\"Asgard\\Migration\\Asgard\\Db\\SchemaInterface\">SchemaInterface<\/abbr> $schema = null, <abbr title=\"Asgard\\Migration\\Asgard\\Container\\ContainerInterface\">ContainerInterface<\/abbr> $container = null)","Constructor.",2],["MigrationManager::getTracker","Asgard\\Migration\\MigrationManager","Asgard\/Migration\/MigrationManager.html#method_getTracker","()","Return the tracker instance.",2],["MigrationManager::add","Asgard\\Migration\\MigrationManager","Asgard\/Migration\/MigrationManager.html#method_add","(string $file)","Add a migration file.",2],["MigrationManager::create","Asgard\\Migration\\MigrationManager","Asgard\/Migration\/MigrationManager.html#method_create","(string $up, string $down, string $name, string $class = &#039;\\\\Asgard\\\\Migration\\\\Migration&#039;)","Create a new migration from given code.",2],["MigrationManager::has","Asgard\\Migration\\MigrationManager","Asgard\/Migration\/MigrationManager.html#method_has","(string $migrationName)","Check if it contains a migration.",2],["MigrationManager::remove","Asgard\\Migration\\MigrationManager","Asgard\/Migration\/MigrationManager.html#method_remove","(string $migrationName)","Remove a migration.",2],["MigrationManager::migrate","Asgard\\Migration\\MigrationManager","Asgard\/Migration\/MigrationManager.html#method_migrate","(string $migrationName)","Execute a migration.",2],["MigrationManager::migrateFile","Asgard\\Migration\\MigrationManager","Asgard\/Migration\/MigrationManager.html#method_migrateFile","(string $file)","Execute a migration file directly.",2],["MigrationManager::migrateAll","Asgard\\Migration\\MigrationManager","Asgard\/Migration\/MigrationManager.html#method_migrateAll","()","Execute all migrations.",2],["MigrationManager::reset","Asgard\\Migration\\MigrationManager","Asgard\/Migration\/MigrationManager.html#method_reset","()","Rollback and re-execute all migrations.",2],["MigrationManager::unmigrate","Asgard\\Migration\\MigrationManager","Asgard\/Migration\/MigrationManager.html#method_unmigrate","(string $migrationName)","Rollback a migration.",2],["MigrationManager::rollback","Asgard\\Migration\\MigrationManager","Asgard\/Migration\/MigrationManager.html#method_rollback","()","Rollback the last migration.",2],["MigrationManager::migrateUntil","Asgard\\Migration\\MigrationManager","Asgard\/Migration\/MigrationManager.html#method_migrateUntil","($migrationName)","",2],["MigrationManager::rollbackUntil","Asgard\\Migration\\MigrationManager","Asgard\/Migration\/MigrationManager.html#method_rollbackUntil","(string $migrationName)","Rollback until a given migration name.",2],["MigrationManagerInterface::getTracker","Asgard\\Migration\\MigrationManagerInterface","Asgard\/Migration\/MigrationManagerInterface.html#method_getTracker","()","Return the tracker instance.",2],["MigrationManagerInterface::add","Asgard\\Migration\\MigrationManagerInterface","Asgard\/Migration\/MigrationManagerInterface.html#method_add","(string $file)","Add a migration file.",2],["MigrationManagerInterface::create","Asgard\\Migration\\MigrationManagerInterface","Asgard\/Migration\/MigrationManagerInterface.html#method_create","(string $up, string $down, string $name, string $class = &#039;\\\\Asgard\\\\Migration\\\\Migration&#039;)","Create a new migration from given code.",2],["MigrationManagerInterface::has","Asgard\\Migration\\MigrationManagerInterface","Asgard\/Migration\/MigrationManagerInterface.html#method_has","(string $migrationName)","Check if it contains a migration.",2],["MigrationManagerInterface::remove","Asgard\\Migration\\MigrationManagerInterface","Asgard\/Migration\/MigrationManagerInterface.html#method_remove","(string $migrationName)","Remove a migration.",2],["MigrationManagerInterface::migrate","Asgard\\Migration\\MigrationManagerInterface","Asgard\/Migration\/MigrationManagerInterface.html#method_migrate","(string $migrationName)","Execute a migration.",2],["MigrationManagerInterface::migrateFile","Asgard\\Migration\\MigrationManagerInterface","Asgard\/Migration\/MigrationManagerInterface.html#method_migrateFile","(string $file)","Execute a migration file directly.",2],["MigrationManagerInterface::migrateAll","Asgard\\Migration\\MigrationManagerInterface","Asgard\/Migration\/MigrationManagerInterface.html#method_migrateAll","()","Execute all migrations.",2],["MigrationManagerInterface::reset","Asgard\\Migration\\MigrationManagerInterface","Asgard\/Migration\/MigrationManagerInterface.html#method_reset","()","Rollback and re-execute all migrations.",2],["MigrationManagerInterface::unmigrate","Asgard\\Migration\\MigrationManagerInterface","Asgard\/Migration\/MigrationManagerInterface.html#method_unmigrate","(string $migrationName)","Rollback a migration.",2],["MigrationManagerInterface::rollback","Asgard\\Migration\\MigrationManagerInterface","Asgard\/Migration\/MigrationManagerInterface.html#method_rollback","()","Rollback the last migration.",2],["MigrationManagerInterface::rollbackUntil","Asgard\\Migration\\MigrationManagerInterface","Asgard\/Migration\/MigrationManagerInterface.html#method_rollbackUntil","(string $migrationName)","Rollback until a given migration name.",2],["Tracker::__construct","Asgard\\Migration\\Tracker","Asgard\/Migration\/Tracker.html#method___construct","(string $dir, <abbr title=\"Asgard\\Migration\\Asgard\\Db\\DBInterface\">DBInterface<\/abbr> $db = null)","Constructor.",2],["Tracker::createTable","Asgard\\Migration\\Tracker","Asgard\/Migration\/Tracker.html#method_createTable","()","",2],["Tracker::getList","Asgard\\Migration\\Tracker","Asgard\/Migration\/Tracker.html#method_getList","(<abbr title=\"Asgard\\Migration\\$db\">$db<\/abbr> $db = true)","Return the list of registered migratins.",2],["Tracker::getDownList","Asgard\\Migration\\Tracker","Asgard\/Migration\/Tracker.html#method_getDownList","()","Return the list of down migrations.",2],["Tracker::getUpList","Asgard\\Migration\\Tracker","Asgard\/Migration\/Tracker.html#method_getUpList","()","Return the list of up migrations.",2],["Tracker::has","Asgard\\Migration\\Tracker","Asgard\/Migration\/Tracker.html#method_has","(string $migration)","Check if a migration is registered.",2],["Tracker::getNext","Asgard\\Migration\\Tracker","Asgard\/Migration\/Tracker.html#method_getNext","()","Return the next migration to be executed.",2],["Tracker::getLast","Asgard\\Migration\\Tracker","Asgard\/Migration\/Tracker.html#method_getLast","()","Return the last executed migration.",2],["Tracker::getUntil","Asgard\\Migration\\Tracker","Asgard\/Migration\/Tracker.html#method_getUntil","($untilMigration)","",2],["Tracker::getRevereMigratedUntil","Asgard\\Migration\\Tracker","Asgard\/Migration\/Tracker.html#method_getRevereMigratedUntil","(string $untilMigration)","Get all migrations until a given migration name",2],["Tracker::add","Asgard\\Migration\\Tracker","Asgard\/Migration\/Tracker.html#method_add","(string $migrationName)","Register a migration.",2],["Tracker::remove","Asgard\\Migration\\Tracker","Asgard\/Migration\/Tracker.html#method_remove","(string $migrationName)","Remove a migration.",2],["Tracker::unmigrate","Asgard\\Migration\\Tracker","Asgard\/Migration\/Tracker.html#method_unmigrate","(string $migrationName)","Mark a migration as unmigrated.",2],["Tracker::migrate","Asgard\\Migration\\Tracker","Asgard\/Migration\/Tracker.html#method_migrate","(string $migrationName)","Mark a migration as migrated.",2],["Tracker::isUp","Asgard\\Migration\\Tracker","Asgard\/Migration\/Tracker.html#method_isUp","(string $migrationName)","Check if a migration was migrated.",2],["CollectionORM::__construct","Asgard\\Orm\\CollectionORM","Asgard\/Orm\/CollectionORM.html#method___construct","(<abbr title=\"Asgard\\Orm\\Asgard\\Entity\\Entity\">Entity<\/abbr> $entity, string $relationName, <a href=\"Asgard\/Orm\/DataMapperInterface.html\"><abbr title=\"Asgard\\Orm\\DataMapperInterface\">DataMapperInterface<\/abbr><\/a> $dataMapper, string $locale = null, string $prefix = null, <abbr title=\"Asgard\\Orm\\Asgard\\Common\\PaginatorFactoryInterface\">PaginatorFactoryInterface<\/abbr> $paginatorFactory = null, <abbr title=\"Asgard\\Orm\\Asgard\\Entity\\Definition\">Definition<\/abbr> $targetDefinition = null)","Constructor.",2],["CollectionORM::sync","Asgard\\Orm\\CollectionORM","Asgard\/Orm\/CollectionORM.html#method_sync","(array $ids, array|null $groups = array())","Update the related entities.",2],["CollectionORM::add","Asgard\\Orm\\CollectionORM","Asgard\/Orm\/CollectionORM.html#method_add","(array $ids)","Add new entities to the relation.",2],["CollectionORM::make","Asgard\\Orm\\CollectionORM","Asgard\/Orm\/CollectionORM.html#method_make","(array $params = array())","{@inheritDoc}",2],["CollectionORM::create","Asgard\\Orm\\CollectionORM","Asgard\/Orm\/CollectionORM.html#method_create","(array $params = array(), array|null $groups = array())","Create a new entity and add it to the relation.",2],["CollectionORM::remove","Asgard\\Orm\\CollectionORM","Asgard\/Orm\/CollectionORM.html#method_remove","(integer|array $ids)","Remove entities from the relation.",2],["CollectionORM::clear","Asgard\\Orm\\CollectionORM","Asgard\/Orm\/CollectionORM.html#method_clear","()","Clear the relation entities.",2],["CollectionORMFactory::__construct","Asgard\\Orm\\CollectionORMFactory","Asgard\/Orm\/CollectionORMFactory.html#method___construct","(<abbr title=\"Asgard\\Orm\\Asgard\\Common\\PaginatorFactoryInterface\">PaginatorFactoryInterface<\/abbr> $paginatorFactory = null)","Constructor.",2],["CollectionORMFactory::create","Asgard\\Orm\\CollectionORMFactory","Asgard\/Orm\/CollectionORMFactory.html#method_create","(<abbr title=\"Asgard\\Orm\\Asgard\\Entity\\Entity\">Entity<\/abbr> $entity, string $name, <a href=\"Asgard\/Orm\/DataMapperInterface.html\"><abbr title=\"Asgard\\Orm\\DataMapperInterface\">DataMapperInterface<\/abbr><\/a> $dataMapper, string $locale = null, string $prefix = null)","Create a new instance.",2],["CollectionORMFactoryInterface::create","Asgard\\Orm\\CollectionORMFactoryInterface","Asgard\/Orm\/CollectionORMFactoryInterface.html#method_create","(<abbr title=\"Asgard\\Orm\\Asgard\\Entity\\Entity\">Entity<\/abbr> $entity, string $name, <a href=\"Asgard\/Orm\/DataMapperInterface.html\"><abbr title=\"Asgard\\Orm\\DataMapperInterface\">DataMapperInterface<\/abbr><\/a> $dataMapper, string $locale = null, string $prefix = null)","Create a new instance.",2],["CollectionORMInterface::sync","Asgard\\Orm\\CollectionORMInterface","Asgard\/Orm\/CollectionORMInterface.html#method_sync","(array $ids, array|null $groups = array())","Update the related entities.",2],["CollectionORMInterface::add","Asgard\\Orm\\CollectionORMInterface","Asgard\/Orm\/CollectionORMInterface.html#method_add","(array $ids)","Add new entities to the relation.",2],["CollectionORMInterface::create","Asgard\\Orm\\CollectionORMInterface","Asgard\/Orm\/CollectionORMInterface.html#method_create","(array $params = array(), array|null $groups = array())","Create a new entity and add it to the relation.",2],["CollectionORMInterface::remove","Asgard\\Orm\\CollectionORMInterface","Asgard\/Orm\/CollectionORMInterface.html#method_remove","(integer|array $ids)","Remove entities from the relation.",2],["CollectionORMInterface::clear","Asgard\\Orm\\CollectionORMInterface","Asgard\/Orm\/CollectionORMInterface.html#method_clear","()","Clear the relation entities.",2],["AutoMigrateCommand::__construct","Asgard\\Orm\\Commands\\AutoMigrateCommand","Asgard\/Orm\/Commands\/AutoMigrateCommand.html#method___construct","(<abbr title=\"Asgard\\Orm\\Commands\\Asgard\\Entity\\EntityManagerInterface\">EntityManagerInterface<\/abbr> $entityManager, <abbr title=\"Asgard\\Orm\\Commands\\Asgard\\Migration\\MigrationManagerInterface\">MigrationManagerInterface<\/abbr> $MigrationManager, <abbr title=\"Asgard\\Orm\\Commands\\Asgard\\Orm\\DataMapperInterface\">DataMapperInterface<\/abbr> $dataMapper)","Constructor.",2],["GenerateMigrationCommand::__construct","Asgard\\Orm\\Commands\\GenerateMigrationCommand","Asgard\/Orm\/Commands\/GenerateMigrationCommand.html#method___construct","(<abbr title=\"Asgard\\Orm\\Commands\\Asgard\\Entity\\EntityManagerInterface\">EntityManagerInterface<\/abbr> $entityManager, <abbr title=\"Asgard\\Orm\\Commands\\Asgard\\Migration\\MigrationManagerInterface\">MigrationManagerInterface<\/abbr> $MigrationManager, <abbr title=\"Asgard\\Orm\\Commands\\Asgard\\Orm\\DataMapperInterface\">DataMapperInterface<\/abbr> $dataMapper)","Constructor.",2],["DataMapper::__construct","Asgard\\Orm\\DataMapper","Asgard\/Orm\/DataMapper.html#method___construct","(<abbr title=\"Asgard\\Orm\\Asgard\\Db\\DBInterface\">DBInterface<\/abbr> $db, <abbr title=\"Asgard\\Orm\\Asgard\\Entity\\EntityManagerInterface\">EntityManagerInterface<\/abbr> $entityManager = null, string $locale = &#039;en&#039;, string $prefix = null, <a href=\"Asgard\/Orm\/ORMFactoryInterface.html\"><abbr title=\"Asgard\\Orm\\ORMFactoryInterface\">ORMFactoryInterface<\/abbr><\/a> $ormFactory = null, <a href=\"Asgard\/Orm\/CollectionORMFactoryInterface.html\"><abbr title=\"Asgard\\Orm\\CollectionORMFactoryInterface\">CollectionORMFactoryInterface<\/abbr><\/a> $collectionOrmFactory = null)","Constructor.",2],["DataMapper::load","Asgard\\Orm\\DataMapper","Asgard\/Orm\/DataMapper.html#method_load","(string $entityClass, integer $id)","Load an entity from database.",2],["DataMapper::orm","Asgard\\Orm\\DataMapper","Asgard\/Orm\/DataMapper.html#method_orm","(string $entityClass)","Create an ORM instance.",2],["DataMapper::getPrefix","Asgard\\Orm\\DataMapper","Asgard\/Orm\/DataMapper.html#method_getPrefix","()","",2],["DataMapper::destroyAll","Asgard\\Orm\\DataMapper","Asgard\/Orm\/DataMapper.html#method_destroyAll","(string $entityClass)","Destroy all entities of a clas.",2],["DataMapper::destroyOne","Asgard\\Orm\\DataMapper","Asgard\/Orm\/DataMapper.html#method_destroyOne","(string $entityClass, integer $id)","Destroy a specific entity.",2],["DataMapper::destroy","Asgard\\Orm\\DataMapper","Asgard\/Orm\/DataMapper.html#method_destroy","(<abbr title=\"Asgard\\Orm\\Asgard\\Entity\\Entity\">Entity<\/abbr> $entity)","Destroy an entity.",2],["DataMapper::getEntityManager","Asgard\\Orm\\DataMapper","Asgard\/Orm\/DataMapper.html#method_getEntityManager","()","Return the entities manager instance.",2],["DataMapper::create","Asgard\\Orm\\DataMapper","Asgard\/Orm\/DataMapper.html#method_create","(string $entityClass, array $values = array(), array|null $groups = array())","Create and store an entity.",2],["DataMapper::createValidator","Asgard\\Orm\\DataMapper","Asgard\/Orm\/DataMapper.html#method_createValidator","(<abbr title=\"Asgard\\Orm\\Asgard\\Entity\\Entity\">Entity<\/abbr> $entity)","",2],["DataMapper::getValidator","Asgard\\Orm\\DataMapper","Asgard\/Orm\/DataMapper.html#method_getValidator","(<abbr title=\"Asgard\\Orm\\Asgard\\Entity\\Entity\">Entity<\/abbr> $entity)","Get DataMapper validator for entities.",2],["DataMapper::prepareValidator","Asgard\\Orm\\DataMapper","Asgard\/Orm\/DataMapper.html#method_prepareValidator","(<a href=\"Asgard\/Entity\/Entity.html\"><abbr title=\"Asgard\\Entity\\Entity\">Entity<\/abbr><\/a> $entity, <a href=\"Asgard\/Validation\/ValidatorInterface.html\"><abbr title=\"Asgard\\Validation\\ValidatorInterface\">ValidatorInterface<\/abbr><\/a> $validator)","Prepare the validator.",2],["DataMapper::valid","Asgard\\Orm\\DataMapper","Asgard\/Orm\/DataMapper.html#method_valid","(<abbr title=\"Asgard\\Orm\\Asgard\\Entity\\Entity\">Entity<\/abbr> $entity, $groups = array())","Validate an entity.",2],["DataMapper::relationsErrors","Asgard\\Orm\\DataMapper","Asgard\/Orm\/DataMapper.html#method_relationsErrors","(<abbr title=\"Asgard\\Orm\\Asgard\\Entity\\Entity\">Entity<\/abbr> $entity, array|null $groups = array())","Return relations errors.",2],["DataMapper::errors","Asgard\\Orm\\DataMapper","Asgard\/Orm\/DataMapper.html#method_errors","(<abbr title=\"Asgard\\Orm\\Asgard\\Entity\\Entity\">Entity<\/abbr> $entity, $groups = array())","Return entity errors.",2],["DataMapper::save","Asgard\\Orm\\DataMapper","Asgard\/Orm\/DataMapper.html#method_save","(<abbr title=\"Asgard\\Orm\\Asgard\\Entity\\Entity\">Entity<\/abbr> $entity, array $values = array(), array|null $groups = array())","Store an entity.",2],["DataMapper::related","Asgard\\Orm\\DataMapper","Asgard\/Orm\/DataMapper.html#method_related","(<abbr title=\"Asgard\\Orm\\Asgard\\Entity\\Entity\">Entity<\/abbr> $entity, string $name)","Return the related entities of an entity.",2],["DataMapper::getCollectionOrmFactory","Asgard\\Orm\\DataMapper","Asgard\/Orm\/DataMapper.html#method_getCollectionOrmFactory","()","Return an CollectionOrmFactory.",2],["DataMapper::getOrmFactory","Asgard\\Orm\\DataMapper","Asgard\/Orm\/DataMapper.html#method_getOrmFactory","()","Return an nOrmFactory.",2],["DataMapper::getRelated","Asgard\\Orm\\DataMapper","Asgard\/Orm\/DataMapper.html#method_getRelated","(<abbr title=\"Asgard\\Orm\\Asgard\\Entity\\Entity\">Entity<\/abbr> $entity, string $name)","Get related entities.",2],["DataMapper::getTranslationTable","Asgard\\Orm\\DataMapper","Asgard\/Orm\/DataMapper.html#method_getTranslationTable","(<abbr title=\"Asgard\\Orm\\Asgard\\Entity\\Definition\">Definition<\/abbr> $definition)","Get the translations table of an entity class.",2],["DataMapper::getTable","Asgard\\Orm\\DataMapper","Asgard\/Orm\/DataMapper.html#method_getTable","(<abbr title=\"Asgard\\Orm\\Asgard\\Entity\\Definition\">Definition<\/abbr> $definition)","Get the table of an entity class.",2],["DataMapper::getTranslations","Asgard\\Orm\\DataMapper","Asgard\/Orm\/DataMapper.html#method_getTranslations","(<abbr title=\"Asgard\\Orm\\Asgard\\Entity\\Entity\">Entity<\/abbr> $entity, string $locale = null)","Return an entity with translations.",2],["DataMapper::relations","Asgard\\Orm\\DataMapper","Asgard\/Orm\/DataMapper.html#method_relations","(<abbr title=\"Asgard\\Orm\\Asgard\\Entity\\Definition\">Definition<\/abbr> $definition)","Return the entity relations objects.",2],["DataMapper::relation","Asgard\\Orm\\DataMapper","Asgard\/Orm\/DataMapper.html#method_relation","(<abbr title=\"Asgard\\Orm\\Asgard\\Entity\\Definition\">Definition<\/abbr> $definition, string $name)","Get a relation object.",2],["DataMapper::hasRelation","Asgard\\Orm\\DataMapper","Asgard\/Orm\/DataMapper.html#method_hasRelation","(<abbr title=\"Asgard\\Orm\\Asgard\\Entity\\Definition\">Definition<\/abbr> $definition, string $name)","Check if the definition has the relaton\/",2],["DataMapper::getDB","Asgard\\Orm\\DataMapper","Asgard\/Orm\/DataMapper.html#method_getDB","()","Return the database instance.",2],["DataMapperInterface::load","Asgard\\Orm\\DataMapperInterface","Asgard\/Orm\/DataMapperInterface.html#method_load","(string $entityClass, integer $id)","Load an entity from database.",2],["DataMapperInterface::orm","Asgard\\Orm\\DataMapperInterface","Asgard\/Orm\/DataMapperInterface.html#method_orm","(string $entityClass)","Create an ORM instance.",2],["DataMapperInterface::destroyAll","Asgard\\Orm\\DataMapperInterface","Asgard\/Orm\/DataMapperInterface.html#method_destroyAll","(string $entityClass)","Destroy all entities of a clas.",2],["DataMapperInterface::destroyOne","Asgard\\Orm\\DataMapperInterface","Asgard\/Orm\/DataMapperInterface.html#method_destroyOne","(string $entityClass, integer $id)","Destroy a specific entity.",2],["DataMapperInterface::destroy","Asgard\\Orm\\DataMapperInterface","Asgard\/Orm\/DataMapperInterface.html#method_destroy","(<abbr title=\"Asgard\\Orm\\Asgard\\Entity\\Entity\">Entity<\/abbr> $entity)","Destroy an entity.",2],["DataMapperInterface::getEntityManager","Asgard\\Orm\\DataMapperInterface","Asgard\/Orm\/DataMapperInterface.html#method_getEntityManager","()","Return the entities manager instance.",2],["DataMapperInterface::create","Asgard\\Orm\\DataMapperInterface","Asgard\/Orm\/DataMapperInterface.html#method_create","(string $entityClass, array $values = array(), array|null $groups = array())","Create and store an entity.",2],["DataMapperInterface::getValidator","Asgard\\Orm\\DataMapperInterface","Asgard\/Orm\/DataMapperInterface.html#method_getValidator","(<abbr title=\"Asgard\\Orm\\Asgard\\Entity\\Entity\">Entity<\/abbr> $entity)","Get DataMapper validator for entities.",2],["DataMapperInterface::prepareValidator","Asgard\\Orm\\DataMapperInterface","Asgard\/Orm\/DataMapperInterface.html#method_prepareValidator","(<a href=\"Asgard\/Entity\/Entity.html\"><abbr title=\"Asgard\\Entity\\Entity\">Entity<\/abbr><\/a> $entity, <a href=\"Asgard\/Validation\/ValidatorInterface.html\"><abbr title=\"Asgard\\Validation\\ValidatorInterface\">ValidatorInterface<\/abbr><\/a> $validator)","Prepare the validator.",2],["DataMapperInterface::valid","Asgard\\Orm\\DataMapperInterface","Asgard\/Orm\/DataMapperInterface.html#method_valid","(<abbr title=\"Asgard\\Orm\\Asgard\\Entity\\Entity\">Entity<\/abbr> $entity)","Validate an entity.",2],["DataMapperInterface::errors","Asgard\\Orm\\DataMapperInterface","Asgard\/Orm\/DataMapperInterface.html#method_errors","(<abbr title=\"Asgard\\Orm\\Asgard\\Entity\\Entity\">Entity<\/abbr> $entity)","Return entity errors.",2],["DataMapperInterface::save","Asgard\\Orm\\DataMapperInterface","Asgard\/Orm\/DataMapperInterface.html#method_save","(<abbr title=\"Asgard\\Orm\\Asgard\\Entity\\Entity\">Entity<\/abbr> $entity, array $values = array(), array|null $groups = array())","Store an entity.",2],["DataMapperInterface::related","Asgard\\Orm\\DataMapperInterface","Asgard\/Orm\/DataMapperInterface.html#method_related","(<abbr title=\"Asgard\\Orm\\Asgard\\Entity\\Entity\">Entity<\/abbr> $entity, string $name)","Return the related entities of an entity.",2],["DataMapperInterface::getCollectionOrmFactory","Asgard\\Orm\\DataMapperInterface","Asgard\/Orm\/DataMapperInterface.html#method_getCollectionOrmFactory","()","Return an CollectionOrmFactory.",2],["DataMapperInterface::getOrmFactory","Asgard\\Orm\\DataMapperInterface","Asgard\/Orm\/DataMapperInterface.html#method_getOrmFactory","()","Return an nOrmFactory.",2],["DataMapperInterface::getRelated","Asgard\\Orm\\DataMapperInterface","Asgard\/Orm\/DataMapperInterface.html#method_getRelated","(<abbr title=\"Asgard\\Orm\\Asgard\\Entity\\Entity\">Entity<\/abbr> $entity, string $name)","Get related entities.",2],["DataMapperInterface::getTranslationTable","Asgard\\Orm\\DataMapperInterface","Asgard\/Orm\/DataMapperInterface.html#method_getTranslationTable","(<abbr title=\"Asgard\\Orm\\Asgard\\Entity\\Definition\">Definition<\/abbr> $definition)","Get the translations table of an entity class.",2],["DataMapperInterface::getTable","Asgard\\Orm\\DataMapperInterface","Asgard\/Orm\/DataMapperInterface.html#method_getTable","(<abbr title=\"Asgard\\Orm\\Asgard\\Entity\\Definition\">Definition<\/abbr> $definition)","Get the table of an entity class.",2],["DataMapperInterface::getTranslations","Asgard\\Orm\\DataMapperInterface","Asgard\/Orm\/DataMapperInterface.html#method_getTranslations","(<abbr title=\"Asgard\\Orm\\Asgard\\Entity\\Entity\">Entity<\/abbr> $entity, string $locale = null)","Return an entity with translations.",2],["DataMapperInterface::relations","Asgard\\Orm\\DataMapperInterface","Asgard\/Orm\/DataMapperInterface.html#method_relations","(<abbr title=\"Asgard\\Orm\\Asgard\\Entity\\Definition\">Definition<\/abbr> $definition)","Return the entity relations objects.",2],["DataMapperInterface::relation","Asgard\\Orm\\DataMapperInterface","Asgard\/Orm\/DataMapperInterface.html#method_relation","(<abbr title=\"Asgard\\Orm\\Asgard\\Entity\\Definition\">Definition<\/abbr> $definition, string $name)","Get a relation object.",2],["DataMapperInterface::hasRelation","Asgard\\Orm\\DataMapperInterface","Asgard\/Orm\/DataMapperInterface.html#method_hasRelation","(<abbr title=\"Asgard\\Orm\\Asgard\\Entity\\Definition\">Definition<\/abbr> $definition, string $name)","Check if the definition has the relaton\/",2],["DataMapperInterface::getDB","Asgard\\Orm\\DataMapperInterface","Asgard\/Orm\/DataMapperInterface.html#method_getDB","()","Return the database instance.",2],["EntityRelation::__construct","Asgard\\Orm\\EntityRelation","Asgard\/Orm\/EntityRelation.html#method___construct","(<abbr title=\"Asgard\\Orm\\Asgard\\Entity\\Definition\">Definition<\/abbr> $definition, <a href=\"Asgard\/Orm\/DataMapperInterface.html\"><abbr title=\"Asgard\\Orm\\DataMapperInterface\">DataMapperInterface<\/abbr><\/a> $dataMapper, string $name, array $params)","Constructor.",2],["EntityRelation::isPolymorphic","Asgard\\Orm\\EntityRelation","Asgard\/Orm\/EntityRelation.html#method_isPolymorphic","()","Check if the relation is polymorphic.",2],["EntityRelation::getName","Asgard\\Orm\\EntityRelation","Asgard\/Orm\/EntityRelation.html#method_getName","()","Return the name.",2],["EntityRelation::getLink","Asgard\\Orm\\EntityRelation","Asgard\/Orm\/EntityRelation.html#method_getLink","()","Get the relation link attribute.",2],["EntityRelation::getLinkType","Asgard\\Orm\\EntityRelation","Asgard\/Orm\/EntityRelation.html#method_getLinkType","()","Get the relation link attribute.",2],["EntityRelation::getLinkA","Asgard\\Orm\\EntityRelation","Asgard\/Orm\/EntityRelation.html#method_getLinkA","()","Get the link A for a HMABT relation.",2],["EntityRelation::getLinkB","Asgard\\Orm\\EntityRelation","Asgard\/Orm\/EntityRelation.html#method_getLinkB","()","Get the link B for a HMABT relation.",2],["EntityRelation::getPositionField","Asgard\\Orm\\EntityRelation","Asgard\/Orm\/EntityRelation.html#method_getPositionField","()","Return the position field name.",2],["EntityRelation::getAssociationTable","Asgard\\Orm\\EntityRelation","Asgard\/Orm\/EntityRelation.html#method_getAssociationTable","()","Get the table of a HMABT table.",2],["EntityRelation::getTargetDefinition","Asgard\\Orm\\EntityRelation","Asgard\/Orm\/EntityRelation.html#method_getTargetDefinition","()","Return the target entity definition.",2],["EntityRelation::setTargetDefinition","Asgard\\Orm\\EntityRelation","Asgard\/Orm\/EntityRelation.html#method_setTargetDefinition","(<abbr title=\"Asgard\\Orm\\Asgard\\Entity\\Definition\">Definition<\/abbr> $targetDefinition)","Set the target definition.",2],["EntityRelation::type","Asgard\\Orm\\EntityRelation","Asgard\/Orm\/EntityRelation.html#method_type","()","Get the relation type.",2],["EntityRelation::reverse","Asgard\\Orm\\EntityRelation","Asgard\/Orm\/EntityRelation.html#method_reverse","()","Get the reverse relation instance.",2],["EntityRelation::prepareValidator","Asgard\\Orm\\EntityRelation","Asgard\/Orm\/EntityRelation.html#method_prepareValidator","(<abbr title=\"Asgard\\Orm\\Asgard\\Validation\\ValidatorInterface\">ValidatorInterface<\/abbr> $validator)","Get the relation validation rules.",2],["EntityRelation::get","Asgard\\Orm\\EntityRelation","Asgard\/Orm\/EntityRelation.html#method_get","(string $name)","Return a parameter.",2],["EntityRelation::set","Asgard\\Orm\\EntityRelation","Asgard\/Orm\/EntityRelation.html#method_set","(string $name, mixed $value)","Set a parameter.",2],["ORM::__construct","Asgard\\Orm\\ORM","Asgard\/Orm\/ORM.html#method___construct","(<abbr title=\"Asgard\\Orm\\Asgard\\Entity\\Definition\">Definition<\/abbr> $definition, <a href=\"Asgard\/Orm\/DataMapperInterface.html\"><abbr title=\"Asgard\\Orm\\DataMapperInterface\">DataMapperInterface<\/abbr><\/a> $datamapper, string $locale = null, string $prefix = null, <abbr title=\"Asgard\\Orm\\Asgard\\Common\\PaginatorFactoryInterface\">PaginatorFactoryInterface<\/abbr> $paginatorFactory = null)","Constructor.",2],["ORM::addScope","Asgard\\Orm\\ORM","Asgard\/Orm\/ORM.html#method_addScope","($name, $scope)","{@inheritDoc}",2],["ORM::removeScope","Asgard\\Orm\\ORM","Asgard\/Orm\/ORM.html#method_removeScope","($name)","{@inheritDoc}",2],["ORM::resetScopes","Asgard\\Orm\\ORM","Asgard\/Orm\/ORM.html#method_resetScopes","()","{@inheritDoc}",2],["ORM::getDefinition","Asgard\\Orm\\ORM","Asgard\/Orm\/ORM.html#method_getDefinition","()","Return the definition.",2],["ORM::__call","Asgard\\Orm\\ORM","Asgard\/Orm\/ORM.html#method___call","(string $relationName, array $args)","Magic method.",2],["ORM::relation","Asgard\\Orm\\ORM","Asgard\/Orm\/ORM.html#method_relation","(string $relationName)","Return a new ORM for the given relation.",2],["ORM::getWhere","Asgard\\Orm\\ORM","Asgard\/Orm\/ORM.html#method_getWhere","()","Return the where conditions.",2],["ORM::__get","Asgard\\Orm\\ORM","Asgard\/Orm\/ORM.html#method___get","(string $name)","Magic Method.",2],["ORM::load","Asgard\\Orm\\ORM","Asgard\/Orm\/ORM.html#method_load","(integer $id)","Load an entity.",2],["ORM::reverse","Asgard\\Orm\\ORM","Asgard\/Orm\/ORM.html#method_reverse","()","{@inheritDoc}",2],["ORM::last","Asgard\\Orm\\ORM","Asgard\/Orm\/ORM.html#method_last","()","{@inheritDoc}",2],["ORM::joinToEntity","Asgard\\Orm\\ORM","Asgard\/Orm\/ORM.html#method_joinToEntity","(<a href=\"Asgard\/Orm\/EntityRelation.html\"><abbr title=\"Asgard\\Orm\\EntityRelation\">EntityRelation<\/abbr><\/a>|string $relation, <abbr title=\"Asgard\\Orm\\Asgard\\Entity\\Entity\">Entity<\/abbr> $entity)","Limits the search to the entities related to the given",2],["ORM::setJointuresAliases","Asgard\\Orm\\ORM","Asgard\/Orm\/ORM.html#method_setJointuresAliases","($jointures, array $existing = array())","",2],["ORM::join","Asgard\\Orm\\ORM","Asgard\/Orm\/ORM.html#method_join","(string|<a href=\"Asgard\/Orm\/EntityRelation.html\"><abbr title=\"Asgard\\Orm\\EntityRelation\">EntityRelation<\/abbr><\/a>|array $relation, array $subrelations = null)","Joins a relation to the search.",2],["ORM::getTable","Asgard\\Orm\\ORM","Asgard\/Orm\/ORM.html#method_getTable","()","Returns the name of the table.",2],["ORM::getTranslationTable","Asgard\\Orm\\ORM","Asgard\/Orm\/ORM.html#method_getTranslationTable","()","Returns the name of the i18n table.",2],["ORM::next","Asgard\\Orm\\ORM","Asgard\/Orm\/ORM.html#method_next","()","Returns the next entity in the search list.",2],["ORM::ids","Asgard\\Orm\\ORM","Asgard\/Orm\/ORM.html#method_ids","()","Returns all the ids of the selected entities.",2],["ORM::values","Asgard\\Orm\\ORM","Asgard\/Orm\/ORM.html#method_values","(string $property)","Returns an array with all the values of a specific",2],["ORM::first","Asgard\\Orm\\ORM","Asgard\/Orm\/ORM.html#method_first","()","Returns the first entity from the search list.",2],["ORM::applyScopes","Asgard\\Orm\\ORM","Asgard\/Orm\/ORM.html#method_applyScopes","()","",2],["ORM::getDAL","Asgard\\Orm\\ORM","Asgard\/Orm\/ORM.html#method_getDAL","()","Returns the DAL object used to build queries.",2],["ORM::addSelect","Asgard\\Orm\\ORM","Asgard\/Orm\/ORM.html#method_addSelect","($select)","",2],["ORM::_getDAL","Asgard\\Orm\\ORM","Asgard\/Orm\/ORM.html#method__getDAL","()","Build the DAL.",2],["ORM::dalCallback","Asgard\\Orm\\ORM","Asgard\/Orm\/ORM.html#method_dalCallback","(callable $cb)","",2],["ORM::get","Asgard\\Orm\\ORM","Asgard\/Orm\/ORM.html#method_get","()","Returns the array of entities from the search list.",2],["ORM::selectQuery","Asgard\\Orm\\ORM","Asgard\/Orm\/ORM.html#method_selectQuery","(string $sql, array $args = array())","Performs an SQL query and returns the entities.",2],["ORM::paginate","Asgard\\Orm\\ORM","Asgard\/Orm\/ORM.html#method_paginate","(integer $page = 1, integer $per_page = 10)","Paginates the search list.",2],["ORM::getPaginator","Asgard\\Orm\\ORM","Asgard\/Orm\/ORM.html#method_getPaginator","()","Returns the paginator tool.",2],["ORM::with","Asgard\\Orm\\ORM","Asgard\/Orm\/ORM.html#method_with","(array|string $with, <abbr title=\"Asgard\\Orm\\Closure\">Closure<\/abbr> $closure = null)","Retrieves the related entities along with the selected",2],["ORM::where","Asgard\\Orm\\ORM","Asgard\/Orm\/ORM.html#method_where","(array|string $conditions, string $val = null)","Add new conditions to the query.",2],["ORM::having","Asgard\\Orm\\ORM","Asgard\/Orm\/ORM.html#method_having","($conditions, $val = null)","",2],["ORM::offset","Asgard\\Orm\\ORM","Asgard\/Orm\/ORM.html#method_offset","(integer $offset)","Sets the offset.",2],["ORM::limit","Asgard\\Orm\\ORM","Asgard\/Orm\/ORM.html#method_limit","(integer $limit)","Sets the limit.",2],["ORM::orderBy","Asgard\\Orm\\ORM","Asgard\/Orm\/ORM.html#method_orderBy","(string $orderBy)","Sets the order.",2],["ORM::delete","Asgard\\Orm\\ORM","Asgard\/Orm\/ORM.html#method_delete","()","Deletes all the selected entities.",2],["ORM::update","Asgard\\Orm\\ORM","Asgard\/Orm\/ORM.html#method_update","(array $values)","Updates entities properties.",2],["ORM::count","Asgard\\Orm\\ORM","Asgard\/Orm\/ORM.html#method_count","(string $group_by = null)","Counts the number of selected entities.",2],["ORM::min","Asgard\\Orm\\ORM","Asgard\/Orm\/ORM.html#method_min","(string $what, string $group_by = null)","Returns the minimum value of a property.",2],["ORM::max","Asgard\\Orm\\ORM","Asgard\/Orm\/ORM.html#method_max","(string $what, string $group_by = null)","Returns the maximum value of a property.",2],["ORM::avg","Asgard\\Orm\\ORM","Asgard\/Orm\/ORM.html#method_avg","(string $what, string $group_by = null)","Returns the average value of a property.",2],["ORM::sum","Asgard\\Orm\\ORM","Asgard\/Orm\/ORM.html#method_sum","(string $what, string $group_by = null)","Returns the sum of a property.",2],["ORM::reset","Asgard\\Orm\\ORM","Asgard\/Orm\/ORM.html#method_reset","()","Resets all conditions, order, offset, and limit.",2],["ORM::rewind","Asgard\\Orm\\ORM","Asgard\/Orm\/ORM.html#method_rewind","()","Rewind query.",2],["ORM::current","Asgard\\Orm\\ORM","Asgard\/Orm\/ORM.html#method_current","()","Return current entity.",2],["ORM::key","Asgard\\Orm\\ORM","Asgard\/Orm\/ORM.html#method_key","()","Return currenty key.",2],["ORM::valid","Asgard\\Orm\\ORM","Asgard\/Orm\/ORM.html#method_valid","()","Check if iteration is still valid.",2],["ORM::union","Asgard\\Orm\\ORM","Asgard\/Orm\/ORM.html#method_union","(array|<a href=\"Asgard\/Orm\/ORM.html\"><abbr title=\"Asgard\\Orm\\ORM\">ORM<\/abbr><\/a> $dals)","Add UNIONs.",2],["ORMBehavior::load","Asgard\\Orm\\ORMBehavior","Asgard\/Orm\/ORMBehavior.html#method_load","(<abbr title=\"Asgard\\Orm\\Asgard\\Entity\\Definition\">Definition<\/abbr> $definition)","Behavior loading.",2],["ORMBehavior::hookGet","Asgard\\Orm\\ORMBehavior","Asgard\/Orm\/ORMBehavior.html#method_hookGet","(<abbr title=\"Asgard\\Orm\\Asgard\\Hook\\Chain\">Chain<\/abbr> $chain, <abbr title=\"Asgard\\Orm\\Asgard\\Entity\\Entity\">Entity<\/abbr> $entity, string $name)","Hook for the entity get method.",2],["ORMBehavior::hookgetTranslations","Asgard\\Orm\\ORMBehavior","Asgard\/Orm\/ORMBehavior.html#method_hookgetTranslations","(<abbr title=\"Asgard\\Orm\\Asgard\\Hook\\Chain\">Chain<\/abbr> $chain, <abbr title=\"Asgard\\Orm\\Asgard\\Entity\\Entity\">Entity<\/abbr> $entity, string $name, string $locale)","Hook for the entity translations get method.",2],["ORMBehavior::hookValidation","Asgard\\Orm\\ORMBehavior","Asgard\/Orm\/ORMBehavior.html#method_hookValidation","(<abbr title=\"Asgard\\Orm\\Asgard\\Hook\\Chain\">Chain<\/abbr> $chain, <abbr title=\"Asgard\\Orm\\Asgard\\Entity\\Entity\">Entity<\/abbr> $entity, <abbr title=\"Asgard\\Orm\\Asgard\\Validation\\ValidatorInterface\">ValidatorInterface<\/abbr> $validator)","Hook for the entity validation.",2],["ORMBehavior::staticCatchAll","Asgard\\Orm\\ORMBehavior","Asgard\/Orm\/ORMBehavior.html#method_staticCatchAll","(string $name, array $args, boolean $processed)","Catch all static calls.",2],["ORMBehavior::callCatchAll","Asgard\\Orm\\ORMBehavior","Asgard\/Orm\/ORMBehavior.html#method_callCatchAll","(<a href=\"Asgard\/Entity\/Entity.html\"><abbr title=\"Asgard\\Entity\\Entity\">Entity<\/abbr><\/a> $entity, string $name, array $args, boolean $processed)","Catch all calls.",2],["ORMBehavior::static_loadBy","Asgard\\Orm\\ORMBehavior","Asgard\/Orm\/ORMBehavior.html#method_static_loadBy","(string $property, mixed $value)","Article::loadBy('title', 'hello world')",2],["ORMBehavior::static_relations","Asgard\\Orm\\ORMBehavior","Asgard\/Orm\/ORMBehavior.html#method_static_relations","()","Article::relations()",2],["ORMBehavior::static_relation","Asgard\\Orm\\ORMBehavior","Asgard\/Orm\/ORMBehavior.html#method_static_relation","(string $name)","Article::relation('parent')",2],["ORMBehavior::static_hasRelation","Asgard\\Orm\\ORMBehavior","Asgard\/Orm\/ORMBehavior.html#method_static_hasRelation","(string $name)","Article::hasRelation('parent')",2],["ORMBehavior::static_load","Asgard\\Orm\\ORMBehavior","Asgard\/Orm\/ORMBehavior.html#method_static_load","(integer $id)","Article::load(2)",2],["ORMBehavior::static_getTable","Asgard\\Orm\\ORMBehavior","Asgard\/Orm\/ORMBehavior.html#method_static_getTable","()","Article::getTable()",2],["ORMBehavior::static_orm","Asgard\\Orm\\ORMBehavior","Asgard\/Orm\/ORMBehavior.html#method_static_orm","()","Article::orm()",2],["ORMBehavior::static_destroyAll","Asgard\\Orm\\ORMBehavior","Asgard\/Orm\/ORMBehavior.html#method_static_destroyAll","()","Article::destroyAll()",2],["ORMBehavior::static_destroyOne","Asgard\\Orm\\ORMBehavior","Asgard\/Orm\/ORMBehavior.html#method_static_destroyOne","(integer $id)","Article::destroyOne()",2],["ORMBehavior::static_create","Asgard\\Orm\\ORMBehavior","Asgard\/Orm\/ORMBehavior.html#method_static_create","(array $values = array(), array|null $groups = array())","Article::create()",2],["ORMBehavior::call_save","Asgard\\Orm\\ORMBehavior","Asgard\/Orm\/ORMBehavior.html#method_call_save","(<abbr title=\"Asgard\\Orm\\Asgard\\Entity\\Entity\">Entity<\/abbr> $entity, array $values = array(), array|null $groups = array())","$article->save()",2],["ORMBehavior::call_destroy","Asgard\\Orm\\ORMBehavior","Asgard\/Orm\/ORMBehavior.html#method_call_destroy","(<abbr title=\"Asgard\\Orm\\Asgard\\Entity\\Entity\">Entity<\/abbr> $entity)","$article->destroy()",2],["ORMBehavior::call_related","Asgard\\Orm\\ORMBehavior","Asgard\/Orm\/ORMBehavior.html#method_call_related","(<abbr title=\"Asgard\\Orm\\Asgard\\Entity\\Entity\">Entity<\/abbr> $entity, string $relation)","$article->related('category')",2],["ORMFactory::__construct","Asgard\\Orm\\ORMFactory","Asgard\/Orm\/ORMFactory.html#method___construct","(<abbr title=\"Asgard\\Orm\\Asgard\\Common\\PaginatorFactoryInterface\">PaginatorFactoryInterface<\/abbr> $paginatorFactory = null)","Constructor.",2],["ORMFactory::create","Asgard\\Orm\\ORMFactory","Asgard\/Orm\/ORMFactory.html#method_create","(<abbr title=\"Asgard\\Orm\\Asgard\\Entity\\Definition\">Definition<\/abbr> $definition, <a href=\"Asgard\/Orm\/DataMapperInterface.html\"><abbr title=\"Asgard\\Orm\\DataMapperInterface\">DataMapperInterface<\/abbr><\/a> $dataMapper, string $locale = null, string $prefix = null)","Create a new instance.",2],["ORMFactoryInterface::create","Asgard\\Orm\\ORMFactoryInterface","Asgard\/Orm\/ORMFactoryInterface.html#method_create","(<abbr title=\"Asgard\\Orm\\Asgard\\Entity\\Definition\">Definition<\/abbr> $definition, <a href=\"Asgard\/Orm\/DataMapperInterface.html\"><abbr title=\"Asgard\\Orm\\DataMapperInterface\">DataMapperInterface<\/abbr><\/a> $dataMapper, string $locale = null, string $prefix = null)","Create a new instance.",2],["ORMInterface::__call","Asgard\\Orm\\ORMInterface","Asgard\/Orm\/ORMInterface.html#method___call","(string $relationName, array $args)","Magic method.",2],["ORMInterface::__get","Asgard\\Orm\\ORMInterface","Asgard\/Orm\/ORMInterface.html#method___get","(string $name)","Magic Method.",2],["ORMInterface::joinToEntity","Asgard\\Orm\\ORMInterface","Asgard\/Orm\/ORMInterface.html#method_joinToEntity","(<a href=\"Asgard\/Orm\/EntityRelation.html\"><abbr title=\"Asgard\\Orm\\EntityRelation\">EntityRelation<\/abbr><\/a>|string $relation, <abbr title=\"Asgard\\Orm\\Asgard\\Entity\\Entity\">Entity<\/abbr> $entity)","Limits the search to the entities related to the given",2],["ORMInterface::join","Asgard\\Orm\\ORMInterface","Asgard\/Orm\/ORMInterface.html#method_join","(string|<a href=\"Asgard\/Orm\/EntityRelation.html\"><abbr title=\"Asgard\\Orm\\EntityRelation\">EntityRelation<\/abbr><\/a>|array $relation, array $subrelations = null)","Joins a relation to the search.",2],["ORMInterface::getTable","Asgard\\Orm\\ORMInterface","Asgard\/Orm\/ORMInterface.html#method_getTable","()","Returns the name of the table.",2],["ORMInterface::getTranslationTable","Asgard\\Orm\\ORMInterface","Asgard\/Orm\/ORMInterface.html#method_getTranslationTable","()","Returns the name of the i18n table.",2],["ORMInterface::next","Asgard\\Orm\\ORMInterface","Asgard\/Orm\/ORMInterface.html#method_next","()","Returns the next entity in the search list.",2],["ORMInterface::ids","Asgard\\Orm\\ORMInterface","Asgard\/Orm\/ORMInterface.html#method_ids","()","Returns all the ids of the selected entities.",2],["ORMInterface::values","Asgard\\Orm\\ORMInterface","Asgard\/Orm\/ORMInterface.html#method_values","(string $property)","Returns an array with all the values of a specific",2],["ORMInterface::first","Asgard\\Orm\\ORMInterface","Asgard\/Orm\/ORMInterface.html#method_first","()","Returns the first entity from the search list.",2],["ORMInterface::getDAL","Asgard\\Orm\\ORMInterface","Asgard\/Orm\/ORMInterface.html#method_getDAL","()","Returns the DAL object used to build queries.",2],["ORMInterface::get","Asgard\\Orm\\ORMInterface","Asgard\/Orm\/ORMInterface.html#method_get","()","Returns the array of entities from the search list.",2],["ORMInterface::selectQuery","Asgard\\Orm\\ORMInterface","Asgard\/Orm\/ORMInterface.html#method_selectQuery","(string $sql, array $args = array())","Performs an SQL query and returns the entities.",2],["ORMInterface::paginate","Asgard\\Orm\\ORMInterface","Asgard\/Orm\/ORMInterface.html#method_paginate","(integer $page = 1, integer $per_page = 10)","Paginates the search list.",2],["ORMInterface::getPaginator","Asgard\\Orm\\ORMInterface","Asgard\/Orm\/ORMInterface.html#method_getPaginator","()","Returns the paginator tool.",2],["ORMInterface::with","Asgard\\Orm\\ORMInterface","Asgard\/Orm\/ORMInterface.html#method_with","(array|string $with, <abbr title=\"Asgard\\Orm\\Closure\">Closure<\/abbr> $closure = null)","Retrieves the related entities along with the selected",2],["ORMInterface::where","Asgard\\Orm\\ORMInterface","Asgard\/Orm\/ORMInterface.html#method_where","(array|string $conditions, string $val = null)","Add new conditions to the query.",2],["ORMInterface::offset","Asgard\\Orm\\ORMInterface","Asgard\/Orm\/ORMInterface.html#method_offset","(integer $offset)","Sets the offset.",2],["ORMInterface::limit","Asgard\\Orm\\ORMInterface","Asgard\/Orm\/ORMInterface.html#method_limit","(integer $limit)","Sets the limit.",2],["ORMInterface::orderBy","Asgard\\Orm\\ORMInterface","Asgard\/Orm\/ORMInterface.html#method_orderBy","(string $orderBy)","Sets the order.",2],["ORMInterface::delete","Asgard\\Orm\\ORMInterface","Asgard\/Orm\/ORMInterface.html#method_delete","()","Deletes all the selected entities.",2],["ORMInterface::update","Asgard\\Orm\\ORMInterface","Asgard\/Orm\/ORMInterface.html#method_update","(array $values)","Updates entities properties.",2],["ORMInterface::count","Asgard\\Orm\\ORMInterface","Asgard\/Orm\/ORMInterface.html#method_count","(string $group_by = null)","Counts the number of selected entities.",2],["ORMInterface::min","Asgard\\Orm\\ORMInterface","Asgard\/Orm\/ORMInterface.html#method_min","(string $what, string $group_by = null)","Returns the minimum value of a property.",2],["ORMInterface::max","Asgard\\Orm\\ORMInterface","Asgard\/Orm\/ORMInterface.html#method_max","(string $what, string $group_by = null)","Returns the maximum value of a property.",2],["ORMInterface::avg","Asgard\\Orm\\ORMInterface","Asgard\/Orm\/ORMInterface.html#method_avg","(string $what, string $group_by = null)","Returns the average value of a property.",2],["ORMInterface::sum","Asgard\\Orm\\ORMInterface","Asgard\/Orm\/ORMInterface.html#method_sum","(string $what, string $group_by = null)","Returns the sum of a property.",2],["ORMInterface::reset","Asgard\\Orm\\ORMInterface","Asgard\/Orm\/ORMInterface.html#method_reset","()","Resets all conditions, order, offset, and limit.",2],["ORMMigrations::__construct","Asgard\\Orm\\ORMMigrations","Asgard\/Orm\/ORMMigrations.html#method___construct","(<a href=\"Asgard\/Orm\/DataMapperInterface.html\"><abbr title=\"Asgard\\Orm\\DataMapperInterface\">DataMapperInterface<\/abbr><\/a> $dataMapper, <abbr title=\"Asgard\\Orm\\Asgard\\Migration\\MigrationManagerInterface\">MigrationManagerInterface<\/abbr> $MigrationManager = null)","Constructor.",2],["ORMMigrations::autoMigrate","Asgard\\Orm\\ORMMigrations","Asgard\/Orm\/ORMMigrations.html#method_autoMigrate","(<a href=\"Asgard\/Entity\/Definition.html\"><abbr title=\"Asgard\\Entity\\Definition\">Definition<\/abbr><\/a>[]|<a href=\"Asgard\/Entity\/Definition.html\"><abbr title=\"Asgard\\Entity\\Definition\">Definition<\/abbr><\/a> $definitions)","Automatically migrate given entity definitions.",2],["ORMMigrations::generateMigration","Asgard\\Orm\\ORMMigrations","Asgard\/Orm\/ORMMigrations.html#method_generateMigration","(array|<a href=\"Asgard\/Entity\/Definition.html\"><abbr title=\"Asgard\\Entity\\Definition\">Definition<\/abbr><\/a> $definitions, string $migrationName)","Generate a migration from given entity definitions.",2],["ORMMigrations::outputPHP","Asgard\\Orm\\ORMMigrations","Asgard\/Orm\/ORMMigrations.html#method_outputPHP","(mixed $v, integer $tabs, boolean $line = false)","Format PHP variables to string.",2],["PolymorphicCollectionORM::__construct","Asgard\\Orm\\PolymorphicCollectionORM","Asgard\/Orm\/PolymorphicCollectionORM.html#method___construct","(<abbr title=\"Asgard\\Orm\\Asgard\\Entity\\Entity\">Entity<\/abbr> $entity, string $relationName, <a href=\"Asgard\/Orm\/DataMapperInterface.html\"><abbr title=\"Asgard\\Orm\\DataMapperInterface\">DataMapperInterface<\/abbr><\/a> $dataMapper, string $locale = null, string $prefix = null, <abbr title=\"Asgard\\Orm\\Asgard\\Common\\PaginatorFactoryInterface\">PaginatorFactoryInterface<\/abbr> $paginatorFactory = null)","Constructor.",2],["PolymorphicCollectionORM::sync","Asgard\\Orm\\PolymorphicCollectionORM","Asgard\/Orm\/PolymorphicCollectionORM.html#method_sync","($entities, array|null $groups = array())","Update the related entities.",2],["PolymorphicCollectionORM::add","Asgard\\Orm\\PolymorphicCollectionORM","Asgard\/Orm\/PolymorphicCollectionORM.html#method_add","(array $ids)","Add new entities to the relation.",2],["PolymorphicCollectionORM::create","Asgard\\Orm\\PolymorphicCollectionORM","Asgard\/Orm\/PolymorphicCollectionORM.html#method_create","(array $params = array(), array|null $groups = array())","Create a new entity and add it to the relation.",2],["PolymorphicCollectionORM::remove","Asgard\\Orm\\PolymorphicCollectionORM","Asgard\/Orm\/PolymorphicCollectionORM.html#method_remove","(integer|array $ids)","Remove entities from the relation.",2],["PolymorphicCollectionORM::clear","Asgard\\Orm\\PolymorphicCollectionORM","Asgard\/Orm\/PolymorphicCollectionORM.html#method_clear","()","Clear the relation entities.",2],["PolymorphicCollectionORM::__call","Asgard\\Orm\\PolymorphicCollectionORM","Asgard\/Orm\/PolymorphicCollectionORM.html#method___call","(string $relationName, array $args)","Magic method.",2],["PolymorphicCollectionORM::__get","Asgard\\Orm\\PolymorphicCollectionORM","Asgard\/Orm\/PolymorphicCollectionORM.html#method___get","(string $name)","Magic Method.",2],["PolymorphicCollectionORM::joinToEntity","Asgard\\Orm\\PolymorphicCollectionORM","Asgard\/Orm\/PolymorphicCollectionORM.html#method_joinToEntity","(<a href=\"Asgard\/Orm\/EntityRelation.html\"><abbr title=\"Asgard\\Orm\\EntityRelation\">EntityRelation<\/abbr><\/a>|string $relation, <abbr title=\"Asgard\\Orm\\Asgard\\Entity\\Entity\">Entity<\/abbr> $entity)","Limits the search to the entities related to the given",2],["PolymorphicCollectionORM::join","Asgard\\Orm\\PolymorphicCollectionORM","Asgard\/Orm\/PolymorphicCollectionORM.html#method_join","(string|<a href=\"Asgard\/Orm\/EntityRelation.html\"><abbr title=\"Asgard\\Orm\\EntityRelation\">EntityRelation<\/abbr><\/a>|array $relation, array $subrelations = null)","Joins a relation to the search.",2],["PolymorphicCollectionORM::getTable","Asgard\\Orm\\PolymorphicCollectionORM","Asgard\/Orm\/PolymorphicCollectionORM.html#method_getTable","()","Returns the name of the table.",2],["PolymorphicCollectionORM::getTranslationTable","Asgard\\Orm\\PolymorphicCollectionORM","Asgard\/Orm\/PolymorphicCollectionORM.html#method_getTranslationTable","()","Returns the name of the i18n table.",2],["PolymorphicCollectionORM::next","Asgard\\Orm\\PolymorphicCollectionORM","Asgard\/Orm\/PolymorphicCollectionORM.html#method_next","()","Returns the next entity in the search list.",2],["PolymorphicCollectionORM::ids","Asgard\\Orm\\PolymorphicCollectionORM","Asgard\/Orm\/PolymorphicCollectionORM.html#method_ids","()","Returns all the ids of the selected entities.",2],["PolymorphicCollectionORM::values","Asgard\\Orm\\PolymorphicCollectionORM","Asgard\/Orm\/PolymorphicCollectionORM.html#method_values","(string $property)","Returns an array with all the values of a specific",2],["PolymorphicCollectionORM::first","Asgard\\Orm\\PolymorphicCollectionORM","Asgard\/Orm\/PolymorphicCollectionORM.html#method_first","()","Returns the first entity from the search list.",2],["PolymorphicCollectionORM::all","Asgard\\Orm\\PolymorphicCollectionORM","Asgard\/Orm\/PolymorphicCollectionORM.html#method_all","()","{@inheritDoc}",2],["PolymorphicCollectionORM::getDAL","Asgard\\Orm\\PolymorphicCollectionORM","Asgard\/Orm\/PolymorphicCollectionORM.html#method_getDAL","()","Returns the DAL object used to build queries.",2],["PolymorphicCollectionORM::get","Asgard\\Orm\\PolymorphicCollectionORM","Asgard\/Orm\/PolymorphicCollectionORM.html#method_get","()","Returns the array of entities from the search list.",2],["PolymorphicCollectionORM::selectQuery","Asgard\\Orm\\PolymorphicCollectionORM","Asgard\/Orm\/PolymorphicCollectionORM.html#method_selectQuery","(string $sql, array $args = array())","Performs an SQL query and returns the entities.",2],["PolymorphicCollectionORM::paginate","Asgard\\Orm\\PolymorphicCollectionORM","Asgard\/Orm\/PolymorphicCollectionORM.html#method_paginate","(integer $page = 1, integer $per_page = 10)","Paginates the search list.",2],["PolymorphicCollectionORM::getPaginator","Asgard\\Orm\\PolymorphicCollectionORM","Asgard\/Orm\/PolymorphicCollectionORM.html#method_getPaginator","()","Returns the paginator tool.",2],["PolymorphicCollectionORM::with","Asgard\\Orm\\PolymorphicCollectionORM","Asgard\/Orm\/PolymorphicCollectionORM.html#method_with","(array|string $with, <abbr title=\"Asgard\\Orm\\Closure\">Closure<\/abbr> $closure = null)","Retrieves the related entities along with the selected",2],["PolymorphicCollectionORM::where","Asgard\\Orm\\PolymorphicCollectionORM","Asgard\/Orm\/PolymorphicCollectionORM.html#method_where","(array|string $conditions, string $val = null)","Add new conditions to the query.",2],["PolymorphicCollectionORM::offset","Asgard\\Orm\\PolymorphicCollectionORM","Asgard\/Orm\/PolymorphicCollectionORM.html#method_offset","(integer $offset)","Sets the offset.",2],["PolymorphicCollectionORM::limit","Asgard\\Orm\\PolymorphicCollectionORM","Asgard\/Orm\/PolymorphicCollectionORM.html#method_limit","(integer $limit)","Sets the limit.",2],["PolymorphicCollectionORM::orderBy","Asgard\\Orm\\PolymorphicCollectionORM","Asgard\/Orm\/PolymorphicCollectionORM.html#method_orderBy","(string $orderBy)","Sets the order.",2],["PolymorphicCollectionORM::delete","Asgard\\Orm\\PolymorphicCollectionORM","Asgard\/Orm\/PolymorphicCollectionORM.html#method_delete","()","Deletes all the selected entities.",2],["PolymorphicCollectionORM::update","Asgard\\Orm\\PolymorphicCollectionORM","Asgard\/Orm\/PolymorphicCollectionORM.html#method_update","(array $values)","Updates entities properties.",2],["PolymorphicCollectionORM::count","Asgard\\Orm\\PolymorphicCollectionORM","Asgard\/Orm\/PolymorphicCollectionORM.html#method_count","(string $group_by = null)","Counts the number of selected entities.",2],["PolymorphicCollectionORM::min","Asgard\\Orm\\PolymorphicCollectionORM","Asgard\/Orm\/PolymorphicCollectionORM.html#method_min","(string $what, string $group_by = null)","Returns the minimum value of a property.",2],["PolymorphicCollectionORM::max","Asgard\\Orm\\PolymorphicCollectionORM","Asgard\/Orm\/PolymorphicCollectionORM.html#method_max","(string $what, string $group_by = null)","Returns the maximum value of a property.",2],["PolymorphicCollectionORM::avg","Asgard\\Orm\\PolymorphicCollectionORM","Asgard\/Orm\/PolymorphicCollectionORM.html#method_avg","(string $what, string $group_by = null)","Returns the average value of a property.",2],["PolymorphicCollectionORM::sum","Asgard\\Orm\\PolymorphicCollectionORM","Asgard\/Orm\/PolymorphicCollectionORM.html#method_sum","(string $what, string $group_by = null)","Returns the sum of a property.",2],["PolymorphicCollectionORM::reset","Asgard\\Orm\\PolymorphicCollectionORM","Asgard\/Orm\/PolymorphicCollectionORM.html#method_reset","()","Resets all conditions, order, offset, and limit.",2],["PolymorphicCollectionORM::rewind","Asgard\\Orm\\PolymorphicCollectionORM","Asgard\/Orm\/PolymorphicCollectionORM.html#method_rewind","()","",2],["PolymorphicCollectionORM::current","Asgard\\Orm\\PolymorphicCollectionORM","Asgard\/Orm\/PolymorphicCollectionORM.html#method_current","()","",2],["PolymorphicCollectionORM::key","Asgard\\Orm\\PolymorphicCollectionORM","Asgard\/Orm\/PolymorphicCollectionORM.html#method_key","()","",2],["PolymorphicCollectionORM::valid","Asgard\\Orm\\PolymorphicCollectionORM","Asgard\/Orm\/PolymorphicCollectionORM.html#method_valid","()","",2],["Ormhaslessthan::__construct","Asgard\\Orm\\Rules\\Ormhaslessthan","Asgard\/Orm\/Rules\/Ormhaslessthan.html#method___construct","(integer $less)","Constructor.",2],["Ormhaslessthan::validate","Asgard\\Orm\\Rules\\Ormhaslessthan","Asgard\/Orm\/Rules\/Ormhaslessthan.html#method_validate","(mixed $input, <abbr title=\"Asgard\\Orm\\Rules\\Asgard\\Validation\\InputBag\">InputBag<\/abbr> $parentInput, <abbr title=\"Asgard\\Orm\\Rules\\Asgard\\Validation\\ValidatorInterface\">ValidatorInterface<\/abbr> $validator)","Perform the validation.",2],["Ormhaslessthan::getMessage","Asgard\\Orm\\Rules\\Ormhaslessthan","Asgard\/Orm\/Rules\/Ormhaslessthan.html#method_getMessage","()","Return the error message.",2],["Ormhasmorethan::__construct","Asgard\\Orm\\Rules\\Ormhasmorethan","Asgard\/Orm\/Rules\/Ormhasmorethan.html#method___construct","(integer $more)","Constructor.",2],["Ormhasmorethan::validate","Asgard\\Orm\\Rules\\Ormhasmorethan","Asgard\/Orm\/Rules\/Ormhasmorethan.html#method_validate","(mixed $input, <abbr title=\"Asgard\\Orm\\Rules\\Asgard\\Validation\\InputBag\">InputBag<\/abbr> $parentInput, <abbr title=\"Asgard\\Orm\\Rules\\Asgard\\Validation\\ValidatorInterface\">ValidatorInterface<\/abbr> $validator)","Perform the validation.",2],["Ormhasmorethan::getMessage","Asgard\\Orm\\Rules\\Ormhasmorethan","Asgard\/Orm\/Rules\/Ormhasmorethan.html#method_getMessage","()","Return the error message.",2],["Ormrequired::validate","Asgard\\Orm\\Rules\\Ormrequired","Asgard\/Orm\/Rules\/Ormrequired.html#method_validate","(mixed $input, <abbr title=\"Asgard\\Orm\\Rules\\Asgard\\Validation\\InputBag\">InputBag<\/abbr> $parentInput, <abbr title=\"Asgard\\Orm\\Rules\\Asgard\\Validation\\ValidatorInterface\">ValidatorInterface<\/abbr> $validator)","Perform the validation.",2],["Ormrequired::getMessage","Asgard\\Orm\\Rules\\Ormrequired","Asgard\/Orm\/Rules\/Ormrequired.html#method_getMessage","()","Return the error message.",2],["Unique::validate","Asgard\\Orm\\Rules\\Unique","Asgard\/Orm\/Rules\/Unique.html#method_validate","(mixed $input, <abbr title=\"Asgard\\Orm\\Rules\\Asgard\\Validation\\InputBag\">InputBag<\/abbr> $parentInput, <abbr title=\"Asgard\\Orm\\Rules\\Asgard\\Validation\\ValidatorInterface\">ValidatorInterface<\/abbr> $validator)","Perform the validation.",2],["Unique::getMessage","Asgard\\Orm\\Rules\\Unique","Asgard\/Orm\/Rules\/Unique.html#method_getMessage","()","Return the error message.",2],["Scope::__construct","Asgard\\Orm\\Scope","Asgard\/Orm\/Scope.html#method___construct","($cb)","",2],["Scope::process","Asgard\\Orm\\Scope","Asgard\/Orm\/Scope.html#method_process","($orm)","",2],["PHPTemplate::__construct","Asgard\\Templating\\PHPTemplate","Asgard\/Templating\/PHPTemplate.html#method___construct","(string $template, array $params = array())","Constructor.",2],["PHPTemplate::getEngine","Asgard\\Templating\\PHPTemplate","Asgard\/Templating\/PHPTemplate.html#method_getEngine","()","Required by TemplateInterface but unecessary for PHPTemplate.",2],["PHPTemplate::setEngine","Asgard\\Templating\\PHPTemplate","Asgard\/Templating\/PHPTemplate.html#method_setEngine","(<a href=\"Asgard\/Templating\/TemplateEngineInterface.html\"><abbr title=\"Asgard\\Templating\\TemplateEngineInterface\">TemplateEngineInterface<\/abbr><\/a> $engine)","Required by TemplateInterface but unecessary for PHPTemplate.",2],["PHPTemplate::setTemplate","Asgard\\Templating\\PHPTemplate","Asgard\/Templating\/PHPTemplate.html#method_setTemplate","(string $template)","Set template file",2],["PHPTemplate::getTemplate","Asgard\\Templating\\PHPTemplate","Asgard\/Templating\/PHPTemplate.html#method_getTemplate","()","Return template file",2],["PHPTemplate::setParams","Asgard\\Templating\\PHPTemplate","Asgard\/Templating\/PHPTemplate.html#method_setParams","(array $params = array())","Set template parameters",2],["PHPTemplate::getParams","Asgard\\Templating\\PHPTemplate","Asgard\/Templating\/PHPTemplate.html#method_getParams","()","Return template parameters",2],["PHPTemplate::render","Asgard\\Templating\\PHPTemplate","Asgard\/Templating\/PHPTemplate.html#method_render","(string $template = null, array $params = array())","Render the template",2],["PHPTemplate::renderFile","Asgard\\Templating\\PHPTemplate","Asgard\/Templating\/PHPTemplate.html#method_renderFile","(string $file, array $params = array())","Render a template",2],["TemplateEngineFactoryInterface::create","Asgard\\Templating\\TemplateEngineFactoryInterface","Asgard\/Templating\/TemplateEngineFactoryInterface.html#method_create","(<abbr title=\"Asgard\\Templating\\Asgard\\Http\\Controller\">Controller<\/abbr> $controller)","Create a new instance.",2],["TemplateEngineInterface::templateExists","Asgard\\Templating\\TemplateEngineInterface","Asgard\/Templating\/TemplateEngineInterface.html#method_templateExists","(string $template)","Check if the template file exists.",2],["TemplateEngineInterface::getTemplateFile","Asgard\\Templating\\TemplateEngineInterface","Asgard\/Templating\/TemplateEngineInterface.html#method_getTemplateFile","(string $template)","Return the template file.",2],["TemplateEngineInterface::createTemplate","Asgard\\Templating\\TemplateEngineInterface","Asgard\/Templating\/TemplateEngineInterface.html#method_createTemplate","()","Create a new template instance",2],["TemplateInterface::getEngine","Asgard\\Templating\\TemplateInterface","Asgard\/Templating\/TemplateInterface.html#method_getEngine","()","Return the template engine.",2],["TemplateInterface::setEngine","Asgard\\Templating\\TemplateInterface","Asgard\/Templating\/TemplateInterface.html#method_setEngine","(<a href=\"Asgard\/Templating\/TemplateEngineInterface.html\"><abbr title=\"Asgard\\Templating\\TemplateEngineInterface\">TemplateEngineInterface<\/abbr><\/a> $engine)","Set the template engine.",2],["TemplateInterface::setTemplate","Asgard\\Templating\\TemplateInterface","Asgard\/Templating\/TemplateInterface.html#method_setTemplate","(string $template)","Set the template file.",2],["TemplateInterface::getTemplate","Asgard\\Templating\\TemplateInterface","Asgard\/Templating\/TemplateInterface.html#method_getTemplate","()","Return the template file.",2],["TemplateInterface::setParams","Asgard\\Templating\\TemplateInterface","Asgard\/Templating\/TemplateInterface.html#method_setParams","(array $params = array())","Set the template parameters.",2],["TemplateInterface::getParams","Asgard\\Templating\\TemplateInterface","Asgard\/Templating\/TemplateInterface.html#method_getParams","()","Return the template parameters.",2],["TemplateInterface::render","Asgard\\Templating\\TemplateInterface","Asgard\/Templating\/TemplateInterface.html#method_render","(string $template = null, array $params = array())","Render the template.",2],["TemplateInterface::renderFile","Asgard\\Templating\\TemplateInterface","Asgard\/Templating\/TemplateInterface.html#method_renderFile","(string $file, array $params = array())","Render a template file.",2],["ViewableTrait::fragment","Asgard\\Templating\\ViewableTrait","Asgard\/Templating\/ViewableTrait.html#method_fragment","(string $method, array $params = array())","Render the method of a class.",2],["ViewableTrait::sFragment","Asgard\\Templating\\ViewableTrait","Asgard\/Templating\/ViewableTrait.html#method_sFragment","(string $method, array $params = array())","Render the method of a class statically.",2],["ViewableTrait::setTemplateEngine","Asgard\\Templating\\ViewableTrait","Asgard\/Templating\/ViewableTrait.html#method_setTemplateEngine","(<a href=\"Asgard\/Templating\/TemplateEngineInterface.html\"><abbr title=\"Asgard\\Templating\\TemplateEngineInterface\">TemplateEngineInterface<\/abbr><\/a> $templateEngine)","Set the template engine.",2],["ViewableTrait::getTemplateEngine","Asgard\\Templating\\ViewableTrait","Asgard\/Templating\/ViewableTrait.html#method_getTemplateEngine","()","Return the template engine.",2],["ViewableTrait::addTemplatePathSolver","Asgard\\Templating\\ViewableTrait","Asgard\/Templating\/ViewableTrait.html#method_addTemplatePathSolver","(callable $cb)","Add a callable path solver.",2],["Bag::get","Asgard\\Tester\\Bag","Asgard\/Tester\/Bag.html#method_get","(string $path, mixed $default = null)","Get a value.",2],["Bag::size","Asgard\\Tester\\Bag","Asgard\/Tester\/Bag.html#method_size","()","",2],["Bag::getAccessed","Asgard\\Tester\\Bag","Asgard\/Tester\/Bag.html#method_getAccessed","()","",2],["Browser::request","Asgard\\Tester\\Browser","Asgard\/Tester\/Browser.html#method_request","(<abbr title=\"Asgard\\Tester\\Asgard\\Http\\Request\">Request<\/abbr> $request)","",2],["CoverageCommand::__construct","Asgard\\Tester\\Commands\\CoverageCommand","Asgard\/Tester\/Commands\/CoverageCommand.html#method___construct","(array $config = null)","Constructor.",2],["GenerateTestsCommand::__construct","Asgard\\Tester\\Commands\\GenerateTestsCommand","Asgard\/Tester\/Commands\/GenerateTestsCommand.html#method___construct","(string $dir)","Constructor.",2],["RunCommand::__construct","Asgard\\Tester\\Commands\\RunCommand","Asgard\/Tester\/Commands\/RunCommand.html#method___construct","(<abbr title=\"Asgard\\Tester\\Commands\\Asgard\\Http\\HttpKernel\">HttpKernel<\/abbr> $httpKernel, <abbr title=\"Asgard\\Tester\\Commands\\Asgard\\Http\\ResolverInterface\">ResolverInterface<\/abbr> $resolver, <abbr title=\"Asgard\\Tester\\Commands\\Asgard\\Db\\DBInterface\">DBInterface<\/abbr> $db = null, <abbr title=\"Asgard\\Tester\\Commands\\Asgard\\Migration\\MigrationManagerInterface\">MigrationManagerInterface<\/abbr> $mm = null)","Constructor.",2],["Config::init","Asgard\\Tester\\Config","Asgard\/Tester\/Config.html#method_init","($crawler, $browser)","",2],["Config::each","Asgard\\Tester\\Config","Asgard\/Tester\/Config.html#method_each","($browser)","",2],["Coverage::__construct","Asgard\\Tester\\Coverage","Asgard\/Tester\/Coverage.html#method___construct","($coverage = array())","",2],["Coverage::count","Asgard\\Tester\\Coverage","Asgard\/Tester\/Coverage.html#method_count","()","",2],["Coverage::getCoverage","Asgard\\Tester\\Coverage","Asgard\/Tester\/Coverage.html#method_getCoverage","()","",2],["Coverage::add","Asgard\\Tester\\Coverage","Asgard\/Tester\/Coverage.html#method_add","($coverage)","",2],["Coverage::hasMoreThan","Asgard\\Tester\\Coverage","Asgard\/Tester\/Coverage.html#method_hasMoreThan","($coverage)","",2],["Crawler::__construct","Asgard\\Tester\\Crawler","Asgard\/Tester\/Crawler.html#method___construct","($console, $config, $resolver, $results, $browser)","",2],["Crawler::getRequestId","Asgard\\Tester\\Crawler","Asgard\/Tester\/Crawler.html#method_getRequestId","($request)","",2],["Crawler::urlMerge","Asgard\\Tester\\Crawler","Asgard\/Tester\/Crawler.html#method_urlMerge","($original, $new)","",2],["Crawler::belongsTo","Asgard\\Tester\\Crawler","Asgard\/Tester\/Crawler.html#method_belongsTo","($url, $root)","",2],["Crawler::getBase","Asgard\\Tester\\Crawler","Asgard\/Tester\/Crawler.html#method_getBase","($current, $doc)","",2],["Crawler::getPath","Asgard\\Tester\\Crawler","Asgard\/Tester\/Crawler.html#method_getPath","($url)","",2],["Crawler::buildUrl","Asgard\\Tester\\Crawler","Asgard\/Tester\/Crawler.html#method_buildUrl","($root, $base, $href)","",2],["Crawler::prepareRequests","Asgard\\Tester\\Crawler","Asgard\/Tester\/Crawler.html#method_prepareRequests","($resolver)","",2],["Crawler::start","Asgard\\Tester\\Crawler","Asgard\/Tester\/Crawler.html#method_start","()","",2],["Crawler::addRequests","Asgard\\Tester\\Crawler","Asgard\/Tester\/Crawler.html#method_addRequests","($requests)","",2],["Crawler::isValid","Asgard\\Tester\\Crawler","Asgard\/Tester\/Crawler.html#method_isValid","($url)","",2],["Crawler::match","Asgard\\Tester\\Crawler","Asgard\/Tester\/Crawler.html#method_match","($url, $pattern)","",2],["CurlConverter::convert","Asgard\\Tester\\CurlConverter","Asgard\/Tester\/CurlConverter.html#method_convert","($curl)","",2],["Fixtures::__construct","Asgard\\Tester\\Fixtures","Asgard\/Tester\/Fixtures.html#method___construct","($db, $mm)","",2],["Fixtures::generate","Asgard\\Tester\\Fixtures","Asgard\/Tester\/Fixtures.html#method_generate","($fixturesFile)","",2],["Form::__construct","Asgard\\Tester\\Form","Asgard\/Tester\/Form.html#method___construct","($form)","",2],["Form::setAction","Asgard\\Tester\\Form","Asgard\/Tester\/Form.html#method_setAction","($action)","",2],["Form::getPath","Asgard\\Tester\\Form","Asgard\/Tester\/Form.html#method_getPath","($name)","",2],["Form::getRequest","Asgard\\Tester\\Form","Asgard\/Tester\/Form.html#method_getRequest","($request)","",2],["TestsGenerator::__construct","Asgard\\Tester\\Generator\\TestsGenerator","Asgard\/Tester\/Generator\/TestsGenerator.html#method___construct","(<abbr title=\"Asgard\\Tester\\Generator\\Asgard\\Container\\ContainerInterface\">ContainerInterface<\/abbr> $container = null)","Constructor.",2],["TestsGenerator::generateTests","Asgard\\Tester\\Generator\\TestsGenerator","Asgard\/Tester\/Generator\/TestsGenerator.html#method_generateTests","(string $dst)","Generate tests.",2],["TestsGenerator::addTests","Asgard\\Tester\\Generator\\TestsGenerator","Asgard\/Tester\/Generator\/TestsGenerator.html#method_addTests","(string $tests, string $dst)","Add tests to a test file.",2],["Results::add","Asgard\\Tester\\Results","Asgard\/Tester\/Results.html#method_add","($id, $request, $response, $route)","",2],["Results::addCoverage","Asgard\\Tester\\Results","Asgard\/Tester\/Results.html#method_addCoverage","($id, $coverage)","",2],["Results::display","Asgard\\Tester\\Results","Asgard\/Tester\/Results.html#method_display","()","",2],["Results::generate","Asgard\\Tester\\Results","Asgard\/Tester\/Results.html#method_generate","($name, $fixturesFile = null)","",2],["TestBuilder::__construct","Asgard\\Tester\\TestBuilder","Asgard\/Tester\/TestBuilder.html#method___construct","($dir)","",2],["TestBuilder::getPath","Asgard\\Tester\\TestBuilder","Asgard\/Tester\/TestBuilder.html#method_getPath","($name)","",2],["TestBuilder::buildTests","Asgard\\Tester\\TestBuilder","Asgard\/Tester\/TestBuilder.html#method_buildTests","(array $tests, string $name)","Add a new tests file.",2],["TestBuilderInterface::buildTests","Asgard\\Tester\\TestBuilderInterface","Asgard\/Tester\/TestBuilderInterface.html#method_buildTests","(array $tests, string $name)","Add a new tests file.",2],["TestsGenerator::__construct","Asgard\\Tester\\TestsGenerator","Asgard\/Tester\/TestsGenerator.html#method___construct","(<abbr title=\"Asgard\\Tester\\Asgard\\Tester\\TestBuilderInterface\">TestBuilderInterface<\/abbr> $testBuilder, <abbr title=\"Asgard\\Tester\\Asgard\\Http\\ResolverInterface\">ResolverInterface<\/abbr> $resolver, <abbr title=\"Asgard\\Tester\\Asgard\\Http\\AnnotationReader\">AnnotationReader<\/abbr> $controllersAnnotationReader)","",2],["TestsGenerator::preGenerate","Asgard\\Tester\\TestsGenerator","Asgard\/Tester\/TestsGenerator.html#method_preGenerate","(array $bundle)","",2],["TestsGenerator::postGenerate","Asgard\\Tester\\TestsGenerator","Asgard\/Tester\/TestsGenerator.html#method_postGenerate","(array $bundle, $root, $bundlePath)","",2],["ExportCsvCommand::__construct","Asgard\\Translation\\Commands\\ExportCsvCommand","Asgard\/Translation\/Commands\/ExportCsvCommand.html#method___construct","(<abbr title=\"Asgard\\Translation\\Commands\\Asgard\\Translation\\Translation\">Translation<\/abbr> $translation, $directories = null)","Constructor.",2],["ExportYamlCommand::__construct","Asgard\\Translation\\Commands\\ExportYamlCommand","Asgard\/Translation\/Commands\/ExportYamlCommand.html#method___construct","(<abbr title=\"Asgard\\Translation\\Commands\\Asgard\\Translation\\Translation\">Translation<\/abbr> $translation, $directories = null)","Constructor.",2],["Extractor::getStrings","Asgard\\Translation\\Extractor","Asgard\/Translation\/Extractor.html#method_getStrings","()","",2],["Extractor::parse","Asgard\\Translation\\Extractor","Asgard\/Translation\/Extractor.html#method_parse","($file)","",2],["Extractor::parseDirectory","Asgard\\Translation\\Extractor","Asgard\/Translation\/Extractor.html#method_parseDirectory","($dir)","",2],["Extractor::addStrings","Asgard\\Translation\\Extractor","Asgard\/Translation\/Extractor.html#method_addStrings","(array $strings)","",2],["Extractor::getListWithTranslation","Asgard\\Translation\\Extractor","Asgard\/Translation\/Extractor.html#method_getListWithTranslation","($translator, $srcLocale, $dstLocale)","",2],["Extractor::getList","Asgard\\Translation\\Extractor","Asgard\/Translation\/Extractor.html#method_getList","($translator, $dstLocale)","",2],["Translation::__construct","Asgard\\Translation\\Translation","Asgard\/Translation\/Translation.html#method___construct","(<abbr title=\"Asgard\\Translation\\Symfony\\Component\\Translation\\Translator\">Translator<\/abbr> $translator)","",2],["Translation::addDir","Asgard\\Translation\\Translation","Asgard\/Translation\/Translation.html#method_addDir","($dir)","",2],["Translation::load","Asgard\\Translation\\Translation","Asgard\/Translation\/Translation.html#method_load","($locale)","",2],["Translation::getTranslator","Asgard\\Translation\\Translation","Asgard\/Translation\/Translation.html#method_getTranslator","()","",2],["InputBag::__construct","Asgard\\Validation\\InputBag","Asgard\/Validation\/InputBag.html#method___construct","(mixed $input)","Constructor.",2],["InputBag::setParent","Asgard\\Validation\\InputBag","Asgard\/Validation\/InputBag.html#method_setParent","(<a href=\"Asgard\/Validation\/InputBag.html\"><abbr title=\"Asgard\\Validation\\InputBag\">InputBag<\/abbr><\/a> $parent)","Set the parent input bag.",2],["InputBag::parent","Asgard\\Validation\\InputBag","Asgard\/Validation\/InputBag.html#method_parent","()","Return the parent input bag.",2],["InputBag::hasAttribute","Asgard\\Validation\\InputBag","Asgard\/Validation\/InputBag.html#method_hasAttribute","(string $attribute)","Check if the input has an attribute.",2],["InputBag::attribute","Asgard\\Validation\\InputBag","Asgard\/Validation\/InputBag.html#method_attribute","(array|string $attribute)","Return an children input bag.",2],["InputBag::attributes","Asgard\\Validation\\InputBag","Asgard\/Validation\/InputBag.html#method_attributes","()","Return all the children input bags.",2],["InputBag::input","Asgard\\Validation\\InputBag","Asgard\/Validation\/InputBag.html#method_input","(string $attribute = null)","Return the raw input of an attribute.",2],["Report::__construct","Asgard\\Validation\\Report","Asgard\/Validation\/Report.html#method___construct","(array $errors = array())","Constructor.",2],["Report::__toString","Asgard\\Validation\\Report","Asgard\/Validation\/Report.html#method___toString","()","__toString magic method.",2],["Report::error","Asgard\\Validation\\Report","Asgard\/Validation\/Report.html#method_error","(string $rule = null)","Return the error of a rule if provided, otherwise the",2],["Report::errors","Asgard\\Validation\\Report","Asgard\/Validation\/Report.html#method_errors","($nested = true)","Return an array of rules and attributes errors.",2],["Report::first","Asgard\\Validation\\Report","Asgard\/Validation\/Report.html#method_first","(string $attribute = null)","Return the first error of the report or of an attribute",2],["Report::failed","Asgard\\Validation\\Report","Asgard\/Validation\/Report.html#method_failed","()","Return the array of failed attributes.",2],["Report::attribute","Asgard\\Validation\\Report","Asgard\/Validation\/Report.html#method_attribute","(string $attribute, <a href=\"Asgard\/Validation\/Report.html\"><abbr title=\"Asgard\\Validation\\Report\">Report<\/abbr><\/a> $report = null)","Return an attribute report or set one if provided.",2],["Report::attributes","Asgard\\Validation\\Report","Asgard\/Validation\/Report.html#method_attributes","()","Return the reports of all attributes",2],["Report::hasError","Asgard\\Validation\\Report","Asgard\/Validation\/Report.html#method_hasError","()","Check if the report contains an error.",2],["Report::setRulesErrors","Asgard\\Validation\\Report","Asgard\/Validation\/Report.html#method_setRulesErrors","(array $errors)","",2],["Report::getRulesErrors","Asgard\\Validation\\Report","Asgard\/Validation\/Report.html#method_getRulesErrors","()","",2],["Report::setSelf","Asgard\\Validation\\Report","Asgard\/Validation\/Report.html#method_setSelf","($error)","",2],["Report::offsetSet","Asgard\\Validation\\Report","Asgard\/Validation\/Report.html#method_offsetSet","($offset, $value)","",2],["Report::offsetExists","Asgard\\Validation\\Report","Asgard\/Validation\/Report.html#method_offsetExists","($offset)","",2],["Report::offsetUnset","Asgard\\Validation\\Report","Asgard\/Validation\/Report.html#method_offsetUnset","($offset)","",2],["Report::offsetGet","Asgard\\Validation\\Report","Asgard\/Validation\/Report.html#method_offsetGet","($offset)","",2],["Report::count","Asgard\\Validation\\Report","Asgard\/Validation\/Report.html#method_count","()","",2],["Report::valid","Asgard\\Validation\\Report","Asgard\/Validation\/Report.html#method_valid","()","",2],["Report::merge","Asgard\\Validation\\Report","Asgard\/Validation\/Report.html#method_merge","(<a href=\"Asgard\/Validation\/Report.html\"><abbr title=\"Asgard\\Validation\\Report\">Report<\/abbr><\/a> $report)","",2],["Rule::__construct","Asgard\\Validation\\Rule","Asgard\/Validation\/Rule.html#method___construct","()","Constructor.",2],["Rule::validate","Asgard\\Validation\\Rule","Asgard\/Validation\/Rule.html#method_validate","(mixed $input, <a href=\"Asgard\/Validation\/InputBag.html\"><abbr title=\"Asgard\\Validation\\InputBag\">InputBag<\/abbr><\/a> $parentInput, <a href=\"Asgard\/Validation\/ValidatorInterface.html\"><abbr title=\"Asgard\\Validation\\ValidatorInterface\">ValidatorInterface<\/abbr><\/a> $validator)","Perform the validation.",2],["Rule::formatParameters","Asgard\\Validation\\Rule","Asgard\/Validation\/Rule.html#method_formatParameters","(array $params)","Format parameters before being passed to the error",2],["Rule::getMessage","Asgard\\Validation\\Rule","Asgard\/Validation\/Rule.html#method_getMessage","()","Return the error message.",2],["Rule::isHandlingEach","Asgard\\Validation\\Rule","Asgard\/Validation\/Rule.html#method_isHandlingEach","()","Check if the rule must handle each input.",2],["Rule::handleEach","Asgard\\Validation\\Rule","Asgard\/Validation\/Rule.html#method_handleEach","(boolean $handleEach)","Set handleEach, to handle each input of an array.",2],["Rule::setGroups","Asgard\\Validation\\Rule","Asgard\/Validation\/Rule.html#method_setGroups","(array|string|null $groups = null)","Set the groups.",2],["Rule::getGroups","Asgard\\Validation\\Rule","Asgard\/Validation\/Rule.html#method_getGroups","()","Return the groups.",2],["Rule::belongsToGroups","Asgard\\Validation\\Rule","Asgard\/Validation\/Rule.html#method_belongsToGroups","(array $groups, <a href=\"Asgard\/Validation\/Validator.html\"><abbr title=\"Asgard\\Validation\\Validator\">Validator<\/abbr><\/a> $validator)","Check if the validator belongs to some groups.",2],["RulesRegistry::singleton","Asgard\\Validation\\RulesRegistry","Asgard\/Validation\/RulesRegistry.html#method_singleton","()","Return the singleton.",2],["RulesRegistry::message","Asgard\\Validation\\RulesRegistry","Asgard\/Validation\/RulesRegistry.html#method_message","(string $rule, string $message)","Set the default message of a rule.",2],["RulesRegistry::messages","Asgard\\Validation\\RulesRegistry","Asgard\/Validation\/RulesRegistry.html#method_messages","(array $rules)","Set an array of rules messages.",2],["RulesRegistry::getMessage","Asgard\\Validation\\RulesRegistry","Asgard\/Validation\/RulesRegistry.html#method_getMessage","(string $rule)","Get the default message of a rule.",2],["RulesRegistry::register","Asgard\\Validation\\RulesRegistry","Asgard\/Validation\/RulesRegistry.html#method_register","(string $rule, callable|string $object)","Register a rule.",2],["RulesRegistry::registerNamespace","Asgard\\Validation\\RulesRegistry","Asgard\/Validation\/RulesRegistry.html#method_registerNamespace","(string $namespace)","Register a namespace.",2],["RulesRegistry::getRule","Asgard\\Validation\\RulesRegistry","Asgard\/Validation\/RulesRegistry.html#method_getRule","(string $rule, array $params = array())","Get a rule instance.",2],["RulesRegistry::getRuleName","Asgard\\Validation\\RulesRegistry","Asgard\/Validation\/RulesRegistry.html#method_getRuleName","(<a href=\"Asgard\/Validation\/Rule.html\"><abbr title=\"Asgard\\Validation\\Rule\">Rule<\/abbr><\/a> $rule)","Get the name of a rule.",2],["RulesRegistryInterface::message","Asgard\\Validation\\RulesRegistryInterface","Asgard\/Validation\/RulesRegistryInterface.html#method_message","(string $rule, string $message)","Set the default message of a rule.",2],["RulesRegistryInterface::messages","Asgard\\Validation\\RulesRegistryInterface","Asgard\/Validation\/RulesRegistryInterface.html#method_messages","(array $rules)","Set an array of rules messages.",2],["RulesRegistryInterface::getMessage","Asgard\\Validation\\RulesRegistryInterface","Asgard\/Validation\/RulesRegistryInterface.html#method_getMessage","(string $rule)","Get the default message of a rule.",2],["RulesRegistryInterface::register","Asgard\\Validation\\RulesRegistryInterface","Asgard\/Validation\/RulesRegistryInterface.html#method_register","(string $rule, callable|string $object)","Register a rule.",2],["RulesRegistryInterface::registerNamespace","Asgard\\Validation\\RulesRegistryInterface","Asgard\/Validation\/RulesRegistryInterface.html#method_registerNamespace","(string $namespace)","Register a namespace.",2],["RulesRegistryInterface::getRule","Asgard\\Validation\\RulesRegistryInterface","Asgard\/Validation\/RulesRegistryInterface.html#method_getRule","(string $rule, array $params = array())","Get a rule instance.",2],["RulesRegistryInterface::getRuleName","Asgard\\Validation\\RulesRegistryInterface","Asgard\/Validation\/RulesRegistryInterface.html#method_getRuleName","(<a href=\"Asgard\/Validation\/Rule.html\"><abbr title=\"Asgard\\Validation\\Rule\">Rule<\/abbr><\/a> $rule)","Get the name of a rule.",2],["All::__construct","Asgard\\Validation\\Rules\\All","Asgard\/Validation\/Rules\/All.html#method___construct","()","Constructor.",2],["All::validate","Asgard\\Validation\\Rules\\All","Asgard\/Validation\/Rules\/All.html#method_validate","(mixed $input, <abbr title=\"Asgard\\Validation\\Rules\\Asgard\\Validation\\InputBag\">InputBag<\/abbr> $parentInput, <abbr title=\"Asgard\\Validation\\Rules\\Asgard\\Validation\\ValidatorInterface\">ValidatorInterface<\/abbr> $validator)","Perform the validation.",2],["All::getMessage","Asgard\\Validation\\Rules\\All","Asgard\/Validation\/Rules\/All.html#method_getMessage","()","Return the error message.",2],["Allin::__construct","Asgard\\Validation\\Rules\\Allin","Asgard\/Validation\/Rules\/Allin.html#method___construct","(array $in)","Constructor.",2],["Allin::validate","Asgard\\Validation\\Rules\\Allin","Asgard\/Validation\/Rules\/Allin.html#method_validate","(mixed $input, <abbr title=\"Asgard\\Validation\\Rules\\Asgard\\Validation\\InputBag\">InputBag<\/abbr> $parentInput, <abbr title=\"Asgard\\Validation\\Rules\\Asgard\\Validation\\ValidatorInterface\">ValidatorInterface<\/abbr> $validator)","Perform the validation.",2],["Allin::getMessage","Asgard\\Validation\\Rules\\Allin","Asgard\/Validation\/Rules\/Allin.html#method_getMessage","()","Return the error message.",2],["Any::__construct","Asgard\\Validation\\Rules\\Any","Asgard\/Validation\/Rules\/Any.html#method___construct","()","Constructor.",2],["Any::validate","Asgard\\Validation\\Rules\\Any","Asgard\/Validation\/Rules\/Any.html#method_validate","(mixed $input, <abbr title=\"Asgard\\Validation\\Rules\\Asgard\\Validation\\InputBag\">InputBag<\/abbr> $parentInput, <abbr title=\"Asgard\\Validation\\Rules\\Asgard\\Validation\\ValidatorInterface\">ValidatorInterface<\/abbr> $validator)","Perform the validation.",2],["Any::getMessage","Asgard\\Validation\\Rules\\Any","Asgard\/Validation\/Rules\/Any.html#method_getMessage","()","Return the error message.",2],["Callback::__construct","Asgard\\Validation\\Rules\\Callback","Asgard\/Validation\/Rules\/Callback.html#method___construct","(callable $cb)","Constructor.",2],["Callback::validate","Asgard\\Validation\\Rules\\Callback","Asgard\/Validation\/Rules\/Callback.html#method_validate","(mixed $input, <abbr title=\"Asgard\\Validation\\Rules\\Asgard\\Validation\\InputBag\">InputBag<\/abbr> $parentInput, <abbr title=\"Asgard\\Validation\\Rules\\Asgard\\Validation\\ValidatorInterface\">ValidatorInterface<\/abbr> $validator)","Perform the validation.",2],["Callback::getMessage","Asgard\\Validation\\Rules\\Callback","Asgard\/Validation\/Rules\/Callback.html#method_getMessage","()","Return the error message.",2],["Contains::__construct","Asgard\\Validation\\Rules\\Contains","Asgard\/Validation\/Rules\/Contains.html#method___construct","(mixed $contain)","Constructor.",2],["Contains::validate","Asgard\\Validation\\Rules\\Contains","Asgard\/Validation\/Rules\/Contains.html#method_validate","(mixed $input, <abbr title=\"Asgard\\Validation\\Rules\\Asgard\\Validation\\InputBag\">InputBag<\/abbr> $parentInput, <abbr title=\"Asgard\\Validation\\Rules\\Asgard\\Validation\\ValidatorInterface\">ValidatorInterface<\/abbr> $validator)","Perform the validation.",2],["Contains::getMessage","Asgard\\Validation\\Rules\\Contains","Asgard\/Validation\/Rules\/Contains.html#method_getMessage","()","Return the error message.",2],["Date::validate","Asgard\\Validation\\Rules\\Date","Asgard\/Validation\/Rules\/Date.html#method_validate","(mixed $input, <abbr title=\"Asgard\\Validation\\Rules\\Asgard\\Validation\\InputBag\">InputBag<\/abbr> $parentInput, <abbr title=\"Asgard\\Validation\\Rules\\Asgard\\Validation\\ValidatorInterface\">ValidatorInterface<\/abbr> $validator)","Perform the validation.",2],["Date::getMessage","Asgard\\Validation\\Rules\\Date","Asgard\/Validation\/Rules\/Date.html#method_getMessage","()","Return the error message.",2],["Each::__construct","Asgard\\Validation\\Rules\\Each","Asgard\/Validation\/Rules\/Each.html#method___construct","(<abbr title=\"Asgard\\Validation\\Rules\\Asgard\\Validation\\ValidatorInterface\">ValidatorInterface<\/abbr> $validator)","Constructor.",2],["Each::validate","Asgard\\Validation\\Rules\\Each","Asgard\/Validation\/Rules\/Each.html#method_validate","(mixed $input, <abbr title=\"Asgard\\Validation\\Rules\\Asgard\\Validation\\InputBag\">InputBag<\/abbr> $parentInput, <abbr title=\"Asgard\\Validation\\Rules\\Asgard\\Validation\\ValidatorInterface\">ValidatorInterface<\/abbr> $validator)","Perform the validation.",2],["Each::getMessage","Asgard\\Validation\\Rules\\Each","Asgard\/Validation\/Rules\/Each.html#method_getMessage","()","Return the error message.",2],["Email::validate","Asgard\\Validation\\Rules\\Email","Asgard\/Validation\/Rules\/Email.html#method_validate","(mixed $input, <abbr title=\"Asgard\\Validation\\Rules\\Asgard\\Validation\\InputBag\">InputBag<\/abbr> $parentInput, <abbr title=\"Asgard\\Validation\\Rules\\Asgard\\Validation\\ValidatorInterface\">ValidatorInterface<\/abbr> $validator)","Perform the validation.",2],["Email::getMessage","Asgard\\Validation\\Rules\\Email","Asgard\/Validation\/Rules\/Email.html#method_getMessage","()","Return the error message.",2],["Equal::__construct","Asgard\\Validation\\Rules\\Equal","Asgard\/Validation\/Rules\/Equal.html#method___construct","(mixed $equal)","Constructor.",2],["Equal::validate","Asgard\\Validation\\Rules\\Equal","Asgard\/Validation\/Rules\/Equal.html#method_validate","(mixed $input, <abbr title=\"Asgard\\Validation\\Rules\\Asgard\\Validation\\InputBag\">InputBag<\/abbr> $parentInput, <abbr title=\"Asgard\\Validation\\Rules\\Asgard\\Validation\\ValidatorInterface\">ValidatorInterface<\/abbr> $validator)","Perform the validation.",2],["Equal::getMessage","Asgard\\Validation\\Rules\\Equal","Asgard\/Validation\/Rules\/Equal.html#method_getMessage","()","Return the error message.",2],["Haslessthan::__construct","Asgard\\Validation\\Rules\\Haslessthan","Asgard\/Validation\/Rules\/Haslessthan.html#method___construct","(integer $count)","Constructor.",2],["Haslessthan::validate","Asgard\\Validation\\Rules\\Haslessthan","Asgard\/Validation\/Rules\/Haslessthan.html#method_validate","(mixed $input, <abbr title=\"Asgard\\Validation\\Rules\\Asgard\\Validation\\InputBag\">InputBag<\/abbr> $parentInput, <abbr title=\"Asgard\\Validation\\Rules\\Asgard\\Validation\\ValidatorInterface\">ValidatorInterface<\/abbr> $validator)","Perform the validation.",2],["Haslessthan::getMessage","Asgard\\Validation\\Rules\\Haslessthan","Asgard\/Validation\/Rules\/Haslessthan.html#method_getMessage","()","Return the error message.",2],["Hasmorethan::__construct","Asgard\\Validation\\Rules\\Hasmorethan","Asgard\/Validation\/Rules\/Hasmorethan.html#method___construct","(integer $count)","Constructor.",2],["Hasmorethan::validate","Asgard\\Validation\\Rules\\Hasmorethan","Asgard\/Validation\/Rules\/Hasmorethan.html#method_validate","(mixed $input, <abbr title=\"Asgard\\Validation\\Rules\\Asgard\\Validation\\InputBag\">InputBag<\/abbr> $parentInput, <abbr title=\"Asgard\\Validation\\Rules\\Asgard\\Validation\\ValidatorInterface\">ValidatorInterface<\/abbr> $validator)","Perform the validation.",2],["Hasmorethan::getMessage","Asgard\\Validation\\Rules\\Hasmorethan","Asgard\/Validation\/Rules\/Hasmorethan.html#method_getMessage","()","Return the error message.",2],["In::__construct","Asgard\\Validation\\Rules\\In","Asgard\/Validation\/Rules\/In.html#method___construct","(array $in)","Constructor.",2],["In::validate","Asgard\\Validation\\Rules\\In","Asgard\/Validation\/Rules\/In.html#method_validate","(mixed $input, <abbr title=\"Asgard\\Validation\\Rules\\Asgard\\Validation\\InputBag\">InputBag<\/abbr> $parentInput, <abbr title=\"Asgard\\Validation\\Rules\\Asgard\\Validation\\ValidatorInterface\">ValidatorInterface<\/abbr> $validator)","Perform the validation.",2],["In::getMessage","Asgard\\Validation\\Rules\\In","Asgard\/Validation\/Rules\/In.html#method_getMessage","()","Return the error message.",2],["Isinstanceof::__construct","Asgard\\Validation\\Rules\\Isinstanceof","Asgard\/Validation\/Rules\/Isinstanceof.html#method___construct","(string $class)","Constructor.",2],["Isinstanceof::validate","Asgard\\Validation\\Rules\\Isinstanceof","Asgard\/Validation\/Rules\/Isinstanceof.html#method_validate","(mixed $input, <abbr title=\"Asgard\\Validation\\Rules\\Asgard\\Validation\\InputBag\">InputBag<\/abbr> $parentInput, <abbr title=\"Asgard\\Validation\\Rules\\Asgard\\Validation\\ValidatorInterface\">ValidatorInterface<\/abbr> $validator)","Perform the validation.",2],["Isinstanceof::getMessage","Asgard\\Validation\\Rules\\Isinstanceof","Asgard\/Validation\/Rules\/Isinstanceof.html#method_getMessage","()","Return the error message.",2],["Isinteger::validate","Asgard\\Validation\\Rules\\Isinteger","Asgard\/Validation\/Rules\/Isinteger.html#method_validate","(mixed $input, <abbr title=\"Asgard\\Validation\\Rules\\Asgard\\Validation\\InputBag\">InputBag<\/abbr> $parentInput, <abbr title=\"Asgard\\Validation\\Rules\\Asgard\\Validation\\ValidatorInterface\">ValidatorInterface<\/abbr> $validator)","Perform the validation.",2],["Isinteger::getMessage","Asgard\\Validation\\Rules\\Isinteger","Asgard\/Validation\/Rules\/Isinteger.html#method_getMessage","()","Return the error message.",2],["Length::__construct","Asgard\\Validation\\Rules\\Length","Asgard\/Validation\/Rules\/Length.html#method___construct","(integer $length)","Constructor.",2],["Length::validate","Asgard\\Validation\\Rules\\Length","Asgard\/Validation\/Rules\/Length.html#method_validate","(mixed $input, <abbr title=\"Asgard\\Validation\\Rules\\Asgard\\Validation\\InputBag\">InputBag<\/abbr> $parentInput, <abbr title=\"Asgard\\Validation\\Rules\\Asgard\\Validation\\ValidatorInterface\">ValidatorInterface<\/abbr> $validator)","Perform the validation.",2],["Length::getMessage","Asgard\\Validation\\Rules\\Length","Asgard\/Validation\/Rules\/Length.html#method_getMessage","()","Return the error message.",2],["Lengthbetween::__construct","Asgard\\Validation\\Rules\\Lengthbetween","Asgard\/Validation\/Rules\/Lengthbetween.html#method___construct","(integer $min, integer $max)","Constructor.",2],["Lengthbetween::validate","Asgard\\Validation\\Rules\\Lengthbetween","Asgard\/Validation\/Rules\/Lengthbetween.html#method_validate","(mixed $input, <abbr title=\"Asgard\\Validation\\Rules\\Asgard\\Validation\\InputBag\">InputBag<\/abbr> $parentInput, <abbr title=\"Asgard\\Validation\\Rules\\Asgard\\Validation\\ValidatorInterface\">ValidatorInterface<\/abbr> $validator)","Perform the validation.",2],["Lengthbetween::getMessage","Asgard\\Validation\\Rules\\Lengthbetween","Asgard\/Validation\/Rules\/Lengthbetween.html#method_getMessage","()","Return the error message.",2],["Max::__construct","Asgard\\Validation\\Rules\\Max","Asgard\/Validation\/Rules\/Max.html#method___construct","(float $max)","Constructor.",2],["Max::validate","Asgard\\Validation\\Rules\\Max","Asgard\/Validation\/Rules\/Max.html#method_validate","(mixed $input, <abbr title=\"Asgard\\Validation\\Rules\\Asgard\\Validation\\InputBag\">InputBag<\/abbr> $parentInput, <abbr title=\"Asgard\\Validation\\Rules\\Asgard\\Validation\\ValidatorInterface\">ValidatorInterface<\/abbr> $validator)","Perform the validation.",2],["Max::getMessage","Asgard\\Validation\\Rules\\Max","Asgard\/Validation\/Rules\/Max.html#method_getMessage","()","Return the error message.",2],["Maxlength::__construct","Asgard\\Validation\\Rules\\Maxlength","Asgard\/Validation\/Rules\/Maxlength.html#method___construct","(integer $length)","Constructor.",2],["Maxlength::validate","Asgard\\Validation\\Rules\\Maxlength","Asgard\/Validation\/Rules\/Maxlength.html#method_validate","(mixed $input, <abbr title=\"Asgard\\Validation\\Rules\\Asgard\\Validation\\InputBag\">InputBag<\/abbr> $parentInput, <abbr title=\"Asgard\\Validation\\Rules\\Asgard\\Validation\\ValidatorInterface\">ValidatorInterface<\/abbr> $validator)","Perform the validation.",2],["Maxlength::getMessage","Asgard\\Validation\\Rules\\Maxlength","Asgard\/Validation\/Rules\/Maxlength.html#method_getMessage","()","Return the error message.",2],["Min::__construct","Asgard\\Validation\\Rules\\Min","Asgard\/Validation\/Rules\/Min.html#method___construct","(float $min)","Constructor.",2],["Min::validate","Asgard\\Validation\\Rules\\Min","Asgard\/Validation\/Rules\/Min.html#method_validate","(mixed $input, <abbr title=\"Asgard\\Validation\\Rules\\Asgard\\Validation\\InputBag\">InputBag<\/abbr> $parentInput, <abbr title=\"Asgard\\Validation\\Rules\\Asgard\\Validation\\ValidatorInterface\">ValidatorInterface<\/abbr> $validator)","Perform the validation.",2],["Min::getMessage","Asgard\\Validation\\Rules\\Min","Asgard\/Validation\/Rules\/Min.html#method_getMessage","()","Return the error message.",2],["Minlength::__construct","Asgard\\Validation\\Rules\\Minlength","Asgard\/Validation\/Rules\/Minlength.html#method___construct","(integer $length)","Constructor.",2],["Minlength::validate","Asgard\\Validation\\Rules\\Minlength","Asgard\/Validation\/Rules\/Minlength.html#method_validate","(mixed $input, <abbr title=\"Asgard\\Validation\\Rules\\Asgard\\Validation\\InputBag\">InputBag<\/abbr> $parentInput, <abbr title=\"Asgard\\Validation\\Rules\\Asgard\\Validation\\ValidatorInterface\">ValidatorInterface<\/abbr> $validator)","Perform the validation.",2],["Minlength::getMessage","Asgard\\Validation\\Rules\\Minlength","Asgard\/Validation\/Rules\/Minlength.html#method_getMessage","()","Return the error message.",2],["Regex::__construct","Asgard\\Validation\\Rules\\Regex","Asgard\/Validation\/Rules\/Regex.html#method___construct","(string $pattern)","Constructor.",2],["Regex::validate","Asgard\\Validation\\Rules\\Regex","Asgard\/Validation\/Rules\/Regex.html#method_validate","(mixed $input, <abbr title=\"Asgard\\Validation\\Rules\\Asgard\\Validation\\InputBag\">InputBag<\/abbr> $parentInput, <abbr title=\"Asgard\\Validation\\Rules\\Asgard\\Validation\\ValidatorInterface\">ValidatorInterface<\/abbr> $validator)","Perform the validation.",2],["Regex::getMessage","Asgard\\Validation\\Rules\\Regex","Asgard\/Validation\/Rules\/Regex.html#method_getMessage","()","Return the error message.",2],["Same::__construct","Asgard\\Validation\\Rules\\Same","Asgard\/Validation\/Rules\/Same.html#method___construct","(string $as)","Constructor.",2],["Same::validate","Asgard\\Validation\\Rules\\Same","Asgard\/Validation\/Rules\/Same.html#method_validate","(mixed $input, <abbr title=\"Asgard\\Validation\\Rules\\Asgard\\Validation\\InputBag\">InputBag<\/abbr> $parentInput, <abbr title=\"Asgard\\Validation\\Rules\\Asgard\\Validation\\ValidatorInterface\">ValidatorInterface<\/abbr> $validator)","Perform the validation.",2],["Same::formatParameters","Asgard\\Validation\\Rules\\Same","Asgard\/Validation\/Rules\/Same.html#method_formatParameters","(array $params)","Format parameters before being passed to the error",2],["Same::getMessage","Asgard\\Validation\\Rules\\Same","Asgard\/Validation\/Rules\/Same.html#method_getMessage","()","Return the error message.",2],["Validator::__construct","Asgard\\Validation\\Validator","Asgard\/Validation\/Validator.html#method___construct","(<a href=\"Asgard\/Validation\/RulesRegistryInterface.html\"><abbr title=\"Asgard\\Validation\\RulesRegistryInterface\">RulesRegistryInterface<\/abbr><\/a> $registry = null)","Constructor.",2],["Validator::setTranslator","Asgard\\Validation\\Validator","Asgard\/Validation\/Validator.html#method_setTranslator","(<abbr title=\"Symfony\\Component\\Translation\\TranslatorInterface\">TranslatorInterface<\/abbr> $translator = null)","Set the translator.",2],["Validator::getTranslator","Asgard\\Validation\\Validator","Asgard\/Validation\/Validator.html#method_getTranslator","()","Get the translator.",2],["Validator::__call","Asgard\\Validation\\Validator","Asgard\/Validation\/Validator.html#method___call","(string $name, array $args)","Capture the calls to rules.",2],["Validator::__callStatic","Asgard\\Validation\\Validator","Asgard\/Validation\/Validator.html#method___callStatic","(string $name, array $args)","Capture the static calls to rules.",2],["Validator::rule","Asgard\\Validation\\Validator","Asgard\/Validation\/Validator.html#method_rule","(string|callable|<a href=\"Asgard\/Validation\/Rule.html\"><abbr title=\"Asgard\\Validation\\Rule\">Rule<\/abbr><\/a>|<a href=\"Asgard\/Validation\/Validator.html\"><abbr title=\"Asgard\\Validation\\Validator\">Validator<\/abbr><\/a> $rule, mixed $params = array(), boolean $each = false)","Set a rule.",2],["Validator::isNull","Asgard\\Validation\\Validator","Asgard\/Validation\/Validator.html#method_isNull","(callable $isNull)","Set a isNull tester.",2],["Validator::rules","Asgard\\Validation\\Validator","Asgard\/Validation\/Validator.html#method_rules","(array $rules, boolean $each = false)","Set multiple rules.",2],["Validator::hasAttribute","Asgard\\Validation\\Validator","Asgard\/Validation\/Validator.html#method_hasAttribute","(string $attribute)","Check if attribute exists.",2],["Validator::attribute","Asgard\\Validation\\Validator","Asgard\/Validation\/Validator.html#method_attribute","(string $attribute, array|string $rules = null)","Set an attribute validator or only return the attribute",2],["Validator::attributes","Asgard\\Validation\\Validator","Asgard\/Validation\/Validator.html#method_attributes","(array $attributes)","Set attributes rules.",2],["Validator::setDefaultMessage","Asgard\\Validation\\Validator","Asgard\/Validation\/Validator.html#method_setDefaultMessage","(string $attribute, string $message = null)","Set the default message for an attribute.",2],["Validator::getDefaultMessage","Asgard\\Validation\\Validator","Asgard\/Validation\/Validator.html#method_getDefaultMessage","()","Get the default error message.",2],["Validator::ruleMessage","Asgard\\Validation\\Validator","Asgard\/Validation\/Validator.html#method_ruleMessage","(string $rule, string $message = null)","Set the default message for a rule.",2],["Validator::ruleMessages","Asgard\\Validation\\Validator","Asgard\/Validation\/Validator.html#method_ruleMessages","(array $rules)","Set multiple rules messages.",2],["Validator::attributesMessages","Asgard\\Validation\\Validator","Asgard\/Validation\/Validator.html#method_attributesMessages","(array $messages)","Set multiple attributes messages.",2],["Validator::getRuleMessage","Asgard\\Validation\\Validator","Asgard\/Validation\/Validator.html#method_getRuleMessage","(string $rule)","Set the default message for a rule.",2],["Validator::getRule","Asgard\\Validation\\Validator","Asgard\/Validation\/Validator.html#method_getRule","(string|callable|<a href=\"Asgard\/Validation\/Rule.html\"><abbr title=\"Asgard\\Validation\\Rule\">Rule<\/abbr><\/a>|<a href=\"Asgard\/Validation\/Validator.html\"><abbr title=\"Asgard\\Validation\\Validator\">Validator<\/abbr><\/a> $rule, array $params)","Get an instance of a rule.",2],["Validator::getRegistry","Asgard\\Validation\\Validator","Asgard\/Validation\/Validator.html#method_getRegistry","()","Get the RulesRegistry instance.",2],["Validator::setRegistry","Asgard\\Validation\\Validator","Asgard\/Validation\/Validator.html#method_setRegistry","(<a href=\"Asgard\/Validation\/RulesRegistryInterface.html\"><abbr title=\"Asgard\\Validation\\RulesRegistryInterface\">RulesRegistryInterface<\/abbr><\/a> $registry)","Set the RulesRegistry instance.",2],["Validator::setInput","Asgard\\Validation\\Validator","Asgard\/Validation\/Validator.html#method_setInput","(mixed $input)","Set the input for validation.",2],["Validator::getInput","Asgard\\Validation\\Validator","Asgard\/Validation\/Validator.html#method_getInput","()","Get the input.",2],["Validator::setParent","Asgard\\Validation\\Validator","Asgard\/Validation\/Validator.html#method_setParent","(<a href=\"Asgard\/Validation\/ValidatorInterface.html\"><abbr title=\"Asgard\\Validation\\ValidatorInterface\">ValidatorInterface<\/abbr><\/a> $parent)","Set the parent validator.",2],["Validator::getParent","Asgard\\Validation\\Validator","Asgard\/Validation\/Validator.html#method_getParent","()","",2],["Validator::setName","Asgard\\Validation\\Validator","Asgard\/Validation\/Validator.html#method_setName","(string $name)","Set the validator name.",2],["Validator::assert","Asgard\\Validation\\Validator","Asgard\/Validation\/Validator.html#method_assert","(mixed $input)","Raise an exception if there is an error for the given",2],["Validator::validRule","Asgard\\Validation\\Validator","Asgard\/Validation\/Validator.html#method_validRule","(string $rule, array $groups = array())","Check if a rule validates the input.",2],["Validator::valid","Asgard\\Validation\\Validator","Asgard\/Validation\/Validator.html#method_valid","(mixed $input = null, array|null $groups = array())","Check the input is valid.",2],["Validator::errors","Asgard\\Validation\\Validator","Asgard\/Validation\/Validator.html#method_errors","(mixed $input = null, array|null $groups = array())","Return the errors report.",2],["Validator::_errors","Asgard\\Validation\\Validator","Asgard\/Validation\/Validator.html#method__errors","(mixed $input = null, array $groups = array())","Return the raw errors.",2],["Validator::getName","Asgard\\Validation\\Validator","Asgard\/Validation\/Validator.html#method_getName","()","Get the validator name.",2],["Validator::formatParameters","Asgard\\Validation\\Validator","Asgard\/Validation\/Validator.html#method_formatParameters","(callable $formatParameters)","Format parameters before passing them to the message.",2],["Validator::set","Asgard\\Validation\\Validator","Asgard\/Validation\/Validator.html#method_set","(string $key, mixed $value)","Set a parameter.",2],["Validator::get","Asgard\\Validation\\Validator","Asgard\/Validation\/Validator.html#method_get","(string $key)","Get a parameter.",2],["Validator::setGroups","Asgard\\Validation\\Validator","Asgard\/Validation\/Validator.html#method_setGroups","(array|string|null $groups = null)","Set the groups.",2],["Validator::getGroups","Asgard\\Validation\\Validator","Asgard\/Validation\/Validator.html#method_getGroups","()","Return the groups.",2],["Validator::belongsToGroups","Asgard\\Validation\\Validator","Asgard\/Validation\/Validator.html#method_belongsToGroups","(array $groups)","Check if the validator belongs to some groups.",2],["ValidatorException::__construct","Asgard\\Validation\\ValidatorException","Asgard\/Validation\/ValidatorException.html#method___construct","(string $message = null, <a href=\"Asgard\/Validation\/Report.html\"><abbr title=\"Asgard\\Validation\\Report\">Report<\/abbr><\/a> $report = null)","Constructor.",2],["ValidatorException::setReport","Asgard\\Validation\\ValidatorException","Asgard\/Validation\/ValidatorException.html#method_setReport","($report)","",2],["ValidatorException::report","Asgard\\Validation\\ValidatorException","Asgard\/Validation\/ValidatorException.html#method_report","()","Returnt the report",2],["ValidatorFactory::__construct","Asgard\\Validation\\ValidatorFactory","Asgard\/Validation\/ValidatorFactory.html#method___construct","(<a href=\"Asgard\/Validation\/RulesRegistry.html\"><abbr title=\"Asgard\\Validation\\RulesRegistry\">RulesRegistry<\/abbr><\/a> $rulesRegistry = null, <abbr title=\"Asgard\\Validation\\Symfony\\Component\\Translation\\TranslatorInterface\">TranslatorInterface<\/abbr> $translator = null)","Constructor.",2],["ValidatorFactory::create","Asgard\\Validation\\ValidatorFactory","Asgard\/Validation\/ValidatorFactory.html#method_create","()","Create a new instance.",2],["ValidatorFactoryInterface::create","Asgard\\Validation\\ValidatorFactoryInterface","Asgard\/Validation\/ValidatorFactoryInterface.html#method_create","()","Create a new instance.",2],["ValidatorInterface::setTranslator","Asgard\\Validation\\ValidatorInterface","Asgard\/Validation\/ValidatorInterface.html#method_setTranslator","(<abbr title=\"Symfony\\Component\\Translation\\TranslatorInterface\">TranslatorInterface<\/abbr> $translator)","Set the translator.",2],["ValidatorInterface::__callStatic","Asgard\\Validation\\ValidatorInterface","Asgard\/Validation\/ValidatorInterface.html#method___callStatic","(string $name, array $args)","Capture the static calls to rules.",2],["ValidatorInterface::__call","Asgard\\Validation\\ValidatorInterface","Asgard\/Validation\/ValidatorInterface.html#method___call","(string $name, array $args)","Capture the calls to rules.",2],["ValidatorInterface::hasAttribute","Asgard\\Validation\\ValidatorInterface","Asgard\/Validation\/ValidatorInterface.html#method_hasAttribute","(string $attribute)","Check if attribute exists.",2],["ValidatorInterface::attribute","Asgard\\Validation\\ValidatorInterface","Asgard\/Validation\/ValidatorInterface.html#method_attribute","(string $attribute, array|string $rules = null)","Set an attribute validator or only return the attribute",2],["ValidatorInterface::attributes","Asgard\\Validation\\ValidatorInterface","Asgard\/Validation\/ValidatorInterface.html#method_attributes","(array $attributes)","Set attributes rules.",2],["ValidatorInterface::rules","Asgard\\Validation\\ValidatorInterface","Asgard\/Validation\/ValidatorInterface.html#method_rules","(array $rules, boolean $each = false)","Set multiple rules.",2],["ValidatorInterface::rule","Asgard\\Validation\\ValidatorInterface","Asgard\/Validation\/ValidatorInterface.html#method_rule","(string|callable|<a href=\"Asgard\/Validation\/Rule.html\"><abbr title=\"Asgard\\Validation\\Rule\">Rule<\/abbr><\/a>|<a href=\"Asgard\/Validation\/Validator.html\"><abbr title=\"Asgard\\Validation\\Validator\">Validator<\/abbr><\/a> $rule, mixed $params = array(), boolean $each = false)","Set a rule.",2],["ValidatorInterface::isNull","Asgard\\Validation\\ValidatorInterface","Asgard\/Validation\/ValidatorInterface.html#method_isNull","(callable $isNull)","Set a isNull tester.",2],["ValidatorInterface::getTranslator","Asgard\\Validation\\ValidatorInterface","Asgard\/Validation\/ValidatorInterface.html#method_getTranslator","()","Get the translator.",2],["ValidatorInterface::setDefaultMessage","Asgard\\Validation\\ValidatorInterface","Asgard\/Validation\/ValidatorInterface.html#method_setDefaultMessage","(string $attribute, string $message = null)","Set the default message for an attribute.",2],["ValidatorInterface::getDefaultMessage","Asgard\\Validation\\ValidatorInterface","Asgard\/Validation\/ValidatorInterface.html#method_getDefaultMessage","()","Get the default error message.",2],["ValidatorInterface::ruleMessage","Asgard\\Validation\\ValidatorInterface","Asgard\/Validation\/ValidatorInterface.html#method_ruleMessage","(string $rule, string $message = null)","Set the default message for a rule.",2],["ValidatorInterface::ruleMessages","Asgard\\Validation\\ValidatorInterface","Asgard\/Validation\/ValidatorInterface.html#method_ruleMessages","(array $rules)","Set multiple rules messages.",2],["ValidatorInterface::attributesMessages","Asgard\\Validation\\ValidatorInterface","Asgard\/Validation\/ValidatorInterface.html#method_attributesMessages","(array $messages)","Set multiple attributes messages.",2],["ValidatorInterface::getRuleMessage","Asgard\\Validation\\ValidatorInterface","Asgard\/Validation\/ValidatorInterface.html#method_getRuleMessage","(string $rule)","Set the default message for a rule.",2],["ValidatorInterface::getRule","Asgard\\Validation\\ValidatorInterface","Asgard\/Validation\/ValidatorInterface.html#method_getRule","(string|callable|<a href=\"Asgard\/Validation\/Rule.html\"><abbr title=\"Asgard\\Validation\\Rule\">Rule<\/abbr><\/a>|<a href=\"Asgard\/Validation\/Validator.html\"><abbr title=\"Asgard\\Validation\\Validator\">Validator<\/abbr><\/a> $rule, array $params)","Get an instance of a rule.",2],["ValidatorInterface::getRegistry","Asgard\\Validation\\ValidatorInterface","Asgard\/Validation\/ValidatorInterface.html#method_getRegistry","()","Get the RulesRegistry instance.",2],["ValidatorInterface::setRegistry","Asgard\\Validation\\ValidatorInterface","Asgard\/Validation\/ValidatorInterface.html#method_setRegistry","(<a href=\"Asgard\/Validation\/RulesRegistryInterface.html\"><abbr title=\"Asgard\\Validation\\RulesRegistryInterface\">RulesRegistryInterface<\/abbr><\/a> $registry)","Set the RulesRegistry instance.",2],["ValidatorInterface::setInput","Asgard\\Validation\\ValidatorInterface","Asgard\/Validation\/ValidatorInterface.html#method_setInput","(mixed $input)","Set the input for validation.",2],["ValidatorInterface::getInput","Asgard\\Validation\\ValidatorInterface","Asgard\/Validation\/ValidatorInterface.html#method_getInput","()","Get the input.",2],["ValidatorInterface::setParent","Asgard\\Validation\\ValidatorInterface","Asgard\/Validation\/ValidatorInterface.html#method_setParent","(<a href=\"Asgard\/Validation\/ValidatorInterface.html\"><abbr title=\"Asgard\\Validation\\ValidatorInterface\">ValidatorInterface<\/abbr><\/a> $parent)","Set the parent validator.",2],["ValidatorInterface::setName","Asgard\\Validation\\ValidatorInterface","Asgard\/Validation\/ValidatorInterface.html#method_setName","(string $name)","Set the validator name.",2],["ValidatorInterface::assert","Asgard\\Validation\\ValidatorInterface","Asgard\/Validation\/ValidatorInterface.html#method_assert","(mixed $input)","Raise an exception if there is an error for the given",2],["ValidatorInterface::validRule","Asgard\\Validation\\ValidatorInterface","Asgard\/Validation\/ValidatorInterface.html#method_validRule","(string $rule, array $groups = array())","Check if a rule validates the input.",2],["ValidatorInterface::valid","Asgard\\Validation\\ValidatorInterface","Asgard\/Validation\/ValidatorInterface.html#method_valid","(mixed $input = null, array|null $groups = array())","Check the input is valid.",2],["ValidatorInterface::errors","Asgard\\Validation\\ValidatorInterface","Asgard\/Validation\/ValidatorInterface.html#method_errors","(mixed $input = null, array|null $groups = array())","Return the errors report.",2],["ValidatorInterface::_errors","Asgard\\Validation\\ValidatorInterface","Asgard\/Validation\/ValidatorInterface.html#method__errors","(mixed $input = null, array $groups = array())","Return the raw errors.",2],["ValidatorInterface::getName","Asgard\\Validation\\ValidatorInterface","Asgard\/Validation\/ValidatorInterface.html#method_getName","()","Get the validator name.",2],["ValidatorInterface::formatParameters","Asgard\\Validation\\ValidatorInterface","Asgard\/Validation\/ValidatorInterface.html#method_formatParameters","(callable $formatParameters)","Format parameters before passing them to the message.",2],["ValidatorInterface::set","Asgard\\Validation\\ValidatorInterface","Asgard\/Validation\/ValidatorInterface.html#method_set","(string $key, mixed $value)","Set a parameter.",2],["ValidatorInterface::get","Asgard\\Validation\\ValidatorInterface","Asgard\/Validation\/ValidatorInterface.html#method_get","(string $key)","Get a parameter.",2],["ValidatorInterface::setGroups","Asgard\\Validation\\ValidatorInterface","Asgard\/Validation\/ValidatorInterface.html#method_setGroups","(array|string|null $groups = null)","Set the groups.",2],["ValidatorInterface::getGroups","Asgard\\Validation\\ValidatorInterface","Asgard\/Validation\/ValidatorInterface.html#method_getGroups","()","Return the groups.",2],["ValidatorInterface::belongsToGroups","Asgard\\Validation\\ValidatorInterface","Asgard\/Validation\/ValidatorInterface.html#method_belongsToGroups","(array $groups)","Check if the validator belongs to some groups.",2]]
    }
}
search_data['index']['longSearchIndex'] = search_data['index']['searchIndex']